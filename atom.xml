<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Louie&#39;s Blog</title>
  
  <subtitle>O ever youthful, O ever powerful.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://louielong.github.io/"/>
  <updated>2018-09-12T09:51:08.845Z</updated>
  <id>https://louielong.github.io/</id>
  
  <author>
    <name>Louie Long</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL双主复制 + keepalived故障转移实现</title>
    <link href="https://louielong.github.io/mysql-ha.html"/>
    <id>https://louielong.github.io/mysql-ha.html</id>
    <published>2018-09-12T09:51:08.845Z</published>
    <updated>2018-09-12T09:51:08.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>MySQL复制中较常见的复制架构有“一主一从”、“一主多从”、“双主”、“多级复制”和“多主环形机构”等，在项目实施中遇到需要进行故障转移的需求：两台服务器每台都安装MySQL，当一个MySQL服务器故障时另一个MySQL服务器能够继续提供服务，这要求两个MySQL之间能够进行数据复制同时需要监控两台服务器的状态。</p><p>本次使用MySQL的双主复制以及keepalived的HA机制来实现。</p><h2 id="2-环境准备"><a href="#2-环境准备" class="headerlink" title="2 环境准备"></a>2 环境准备</h2><p>两台服务器：<br>服务器MySQL-HA-1(主) 192.168.10.101<br>服务器MySQL-HA-2(主) 192.168.10.102<br>虚拟服务节点IP       192.168.10.103<br>Mysql版本：mysql  Ver 14.14 Distrib 5.7.21<br>System OS：ubuntu 16.04</p><h2 id="3-mysql数据库配置"><a href="#3-mysql数据库配置" class="headerlink" title="3 mysql数据库配置"></a>3 mysql数据库配置</h2><h3 id="3-1-mysql数据库介绍"><a href="#3-1-mysql数据库介绍" class="headerlink" title="3.1 mysql数据库介绍"></a>3.1 mysql数据库介绍</h3><p><img src="https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/w%3D268%3Bg%3D0/sign=e35e494a6159252da3171a020ca06406/ac6eddc451da81cb037c289d5366d016082431c3.jpg" alt="mysql"></p><p>MySQL是一个<a href="https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener"><strong>关系型数据库管理系统</strong></a><strong>，</strong>由瑞典MySQL AB 公司开发，目前属于 <a href="https://baike.baidu.com/item/Oracle" target="_blank" rel="noopener">Oracle</a> 旗下产品。MySQL 是最流行的<a href="https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener">关系型数据库管理系统</a>之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件。</p><p>MySQL是一种关系数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><p>MySQL所使用的 SQL 语言是用于访问<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" rel="noopener">数据库</a>的最常用标准化语言[1]。</p><h3 id="3-1-安装数据库"><a href="#3-1-安装数据库" class="headerlink" title="3.1 安装数据库"></a>3.1 安装数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y mysql-server</span><br></pre></td></tr></table></figure><p>【Tips】：安装过程需要输入数据库密码，出于后续部署的自动化考虑，希望自动化部署中不被打断，解决这个问题有两种方法：</p><p>1) 预先设置密码</p><p>使用<code>debconf-set-selections</code>工具预先将密码写入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo debconf-set-selections &lt;&lt;&lt; 'mysql-server mysql-server/root_password password your_password'</span><br><span class="line">sudo debconf-set-selections &lt;&lt;&lt; 'mysql-server mysql-server/root_password_again password your_password'</span><br><span class="line">sudo apt-get -y install mysql-server</span><br></pre></td></tr></table></figure><p>将<code>your_password</code>替换为想要设置的mysql root账户密码，针对不同的mysql版本会有相应的改变，参见<a href="https://stackoverflow.com/questions/7739645/install-mysql-on-ubuntu-without-a-password-prompt" target="_blank" rel="noopener">传送门</a></p><p>2)静默安装</p><p>使用如下命令通过非交互的方式静默安装mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server</span><br></pre></td></tr></table></figure><p>在安装完成后mysql是没有密码的，root用户下是可以免密进入命令行的，然后再修改mysql的root用户访问密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -e"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('passwd');"</span><br></pre></td></tr></table></figure><p>将<code>passwd</code>替换为自己的密码即可。</p><p>3.2 数据库初始化配置</p><p>在修改配置前最好先备份mysql配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/mysql/mysql.conf.d/mysqld.cnf  /etc/mysql/mysql.conf.d/mysqld.cnf-bak</span><br></pre></td></tr></table></figure><p>1）设置时区</p><p>在<code>mysqld.cnf</code>的<code>[mysqld]</code>后加入<code>default-time-zone = &#39;+8:00&#39;</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i "/^\[mysqld\]/a\default-time-zone = \'+8:00\'" /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure><h3 id="3-3-修改数据库配置"><a href="#3-3-修改数据库配置" class="headerlink" title="3.3 修改数据库配置"></a>3.3 修改数据库配置</h3><p>设置需要同步的数据库，此处以数据库<code>test</code>为例</p><p>1）修改MySQL-HA-1服务器数据库配置</p><p>主要修改的地方如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">bind-address= ::    # 指定允许数据库访问的IP，"::"表明允许v4和v6访问</span><br><span class="line"></span><br><span class="line">server-id= 1                     # 指定mysql的编号 该编号作为数据库集群的识别号因此不能冲突</span><br><span class="line">log_bin= /var/log/mysql/mysql-bin.log   # 开启二进制log文件</span><br><span class="line">binlog_format           = mixed</span><br><span class="line">relay-log               = relay-bin</span><br><span class="line">relay-log-index         = slave-relay-bin.index</span><br><span class="line">auto-increment-offset   = 2     # 设置自增长偏移，这里有两个数据库因此每次增长为2</span><br><span class="line">auto-increment-increment = 1    # 设置自增长起始</span><br><span class="line">binlog_do_db            = test  # 设置需要同步的数据库名称</span><br><span class="line">binlog_do_db            = test1</span><br></pre></td></tr></table></figure><p>完整的配置文件如下，这里将原配置文件的注释屏蔽掉</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">root@HA-1:~# cat /etc/mysql/mysql.conf.d/mysqld.cnf | grep -v '#'</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">socket= /var/run/mysqld/mysqld.sock</span><br><span class="line">nice= 0</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">user= mysql</span><br><span class="line">pid-file= /var/run/mysqld/mysqld.pid</span><br><span class="line">socket= /var/run/mysqld/mysqld.sock</span><br><span class="line">port= 3306</span><br><span class="line">basedir= /usr</span><br><span class="line">datadir= /var/lib/mysql</span><br><span class="line">tmpdir= /tmp</span><br><span class="line">lc-messages-dir= /usr/share/mysql</span><br><span class="line">skip-external-locking</span><br><span class="line">bind-address= ::</span><br><span class="line">key_buffer_size= 16M</span><br><span class="line">max_allowed_packet= 16M</span><br><span class="line">thread_stack= 192K</span><br><span class="line">thread_cache_size       = 8</span><br><span class="line">myisam-recover-options  = BACKUP</span><br><span class="line">query_cache_limit= 1M</span><br><span class="line">query_cache_size        = 16M</span><br><span class="line">general_log_file        = /var/log/mysql/mysql.log</span><br><span class="line">general_log             = 1</span><br><span class="line">log_error = /var/log/mysql/error.log</span><br><span class="line">server-id= 1</span><br><span class="line">log_bin= /var/log/mysql/mysql-bin.log</span><br><span class="line">binlog_format           = mixed</span><br><span class="line">expire_logs_days        = 10</span><br><span class="line">max_binlog_size         = 100M</span><br><span class="line">relay-log               = relay-bin</span><br><span class="line">relay-log-index         = slave-relay-bin.index</span><br><span class="line">auto-increment-offset   = 2</span><br><span class="line">auto-increment-increment = 1</span><br><span class="line">binlog_do_db            = test</span><br><span class="line">binlog_do_db            = test1</span><br></pre></td></tr></table></figure><p>其他参数含义可参考<a href="http://www.jb51.net/article/48082.htm" target="_blank" rel="noopener">mysql配置文件详解</a></p><p>2）修改MySQL-HA-2服务器数据库配置</p><p>修改HA-2节点的数据库配置文件，大致内容一致，只是在<code>server-id</code>和<code>auto-increment-increment</code>需要修改。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">root@HA-2:~# cat /etc/mysql/mysql.conf.d/mysqld.cnf | grep -v '#'</span><br><span class="line">[mysqld_safe]</span><br><span class="line">socket= /var/run/mysqld/mysqld.sock</span><br><span class="line">nice= 0</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">user= mysql</span><br><span class="line">pid-file= /var/run/mysqld/mysqld.pid</span><br><span class="line">socket= /var/run/mysqld/mysqld.sock</span><br><span class="line">port= 3306</span><br><span class="line">basedir= /usr</span><br><span class="line">datadir= /var/lib/mysql</span><br><span class="line">tmpdir= /tmp</span><br><span class="line">lc-messages-dir= /usr/share/mysql</span><br><span class="line">skip-external-locking</span><br><span class="line">bind-address= ::</span><br><span class="line">key_buffer_size= 16M</span><br><span class="line">max_allowed_packet= 16M</span><br><span class="line">thread_stack= 192K</span><br><span class="line">thread_cache_size       = 8</span><br><span class="line">myisam-recover-options  = BACKUP</span><br><span class="line">query_cache_limit= 1M</span><br><span class="line">query_cache_size        = 16M</span><br><span class="line">general_log_file        = /var/log/mysql/mysql.log</span><br><span class="line">general_log             = 1</span><br><span class="line">log_error = /var/log/mysql/error.log</span><br><span class="line">server-id= 2            # server id设置为2</span><br><span class="line">log_bin= /var/log/mysql/mysql-bin.log</span><br><span class="line">binlog_format           = mixed</span><br><span class="line">expire_logs_days        = 10</span><br><span class="line">max_binlog_size         = 100M</span><br><span class="line">relay-log               = relay-bin</span><br><span class="line">relay-log-index         = slave-relay-bin.index</span><br><span class="line">auto-increment-offset   = 2</span><br><span class="line">auto-increment-increment = 2    # 增长起始设置为2</span><br><span class="line">binlog_do_db            = test</span><br><span class="line">binlog_do_db            = test1</span><br></pre></td></tr></table></figure><p>修改完成后<strong>两个节点</strong>的数据库都需要重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure><p>【Note】</p><p>为了提升数据库的写入性能，可以适当修改同步数据间隔，加入以下参数[4]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">innodb_flush_log_at_trx_commit=2</span><br><span class="line">sync_binlog=1000</span><br></pre></td></tr></table></figure><p>有关两个参数的含义可以查看链接：<a href="http://blog.itpub.net/22664653/viewspace-1063134/" target="_blank" rel="noopener">传送门</a></p><h3 id="3-3-设置主从数据库"><a href="#3-3-设置主从数据库" class="headerlink" title="3.3 设置主从数据库"></a>3.3 设置主从数据库</h3><p>1)将HA-1设置为HA-2的主数据库</p><p>首先在HA-1节点数据库创建同步账户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@HA-1:~# mysql -uroot -p</span><br><span class="line"><span class="meta">mysql&gt;</span> GRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO sync@'192.168.10.102' IDENTIFIED BY 'sync';</span><br><span class="line"><span class="meta">mysql&gt;</span> flush privileges;</span><br></pre></td></tr></table></figure><p>随后查看数据库状态信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000001 |    465 | test,test1    |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>记录下<code>File</code>和<code>Position</code>两个参数值，这是数据库主从同步的关键，也是告诉从数据自那哪个起点开始同步</p><p>在<strong>HA-2</strong>节点的数据库输入以下信息，切记是在HA-2节点输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to master_host=&apos;192.168.10.101&apos;,master_user=&apos;sync&apos;,master_password=&apos;sync&apos;,master_log_file=&apos;mysql-bin.000001&apos;,master_log_pos=465;</span><br></pre></td></tr></table></figure><p>随后在HA-2节点开启从机同步即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span> start slave</span><br></pre></td></tr></table></figure><p>然后在HA-2节点查看mysql的slave信息，确保下述两个值为yes</p><blockquote><p>Slave_IO_Running:Yes<br>Slave_SQL_Running:Yes</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span> show slave status\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 192.168.10.101</span><br><span class="line">                  Master_User: copyuser</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000001</span><br><span class="line">          Read_Master_Log_Pos: 465</span><br><span class="line">               Relay_Log_File: relay-bin.00002</span><br><span class="line">                Relay_Log_Pos: 146</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB:</span><br><span class="line">          Replicate_Ignore_DB:</span><br><span class="line">           Replicate_Do_Table:</span><br><span class="line">       Replicate_Ignore_Table:</span><br><span class="line">      Replicate_Wild_Do_Table:</span><br></pre></td></tr></table></figure><p>2)将HA-2设置为HA-1的主数据库</p><p>设置过程与上一步一致，首先创建同步账户随后添加主数据库信息，需要注意的是IP地址的修改</p><p>在HA-2上创建同步账户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@HA-2:~# mysql -uroot -p</span><br><span class="line"><span class="meta">mysql&gt;</span> GRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO sync@'192.168.10.101' IDENTIFIED BY 'sync';</span><br><span class="line"><span class="meta">mysql&gt;</span> flush privileges;</span><br></pre></td></tr></table></figure><p>随后查看数据库状态信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000002 |    465 | test,test1    |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>记录下<code>File</code>和<code>Position</code>两个参数值，这是数据库主从同步的关键，也是告诉从数据自那哪个起点开始同步</p><p>在<strong>HA-1</strong>节点的数据库输入以下信息，切记是在HA-1节点输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to master_host=&apos;192.168.10.102&apos;,master_user=&apos;sync&apos;,master_password=&apos;sync&apos;,master_log_file=&apos;mysql-bin.000001&apos;,master_log_pos=465;</span><br></pre></td></tr></table></figure><p>随后开启HA-1的从机同步</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span> start slave</span><br></pre></td></tr></table></figure><p>然后在HA-1节点查看mysql的slave信息，确保下述两个值为yes</p><blockquote><p>Slave_IO_Running:Yes<br>Slave_SQL_Running:Yes</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span> show slave status\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 192.168.10.102</span><br><span class="line">                  Master_User: copyuser</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000002</span><br><span class="line">          Read_Master_Log_Pos: 465</span><br><span class="line">               Relay_Log_File: relay-bin.00003</span><br><span class="line">                Relay_Log_Pos: 146</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000002</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB:</span><br><span class="line">          Replicate_Ignore_DB:</span><br><span class="line">           Replicate_Do_Table:</span><br><span class="line">       Replicate_Ignore_Table:</span><br><span class="line">      Replicate_Wild_Do_Table:</span><br></pre></td></tr></table></figure><p>【Note】:</p><p>若因为输入错误或网络变动等其他原因导致同步出错需要先停止同步</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span> stop slave</span><br></pre></td></tr></table></figure><p>然后重置从机同步</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span> reset slave</span><br></pre></td></tr></table></figure><p>再重复上述的主从同步配置，但需要注意的是主从同步并不会同步原来的数据，只会同步从当前时刻起始的binlog的数据库操作记录，如果同步中断后仍有数据写入会导致两个数据库的数据起始内容不一致，这时需要先停止数据库写入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; LOCK TABLES;</span><br><span class="line">mysql&gt; FLUSH TABLES;</span><br></pre></td></tr></table></figure><p>然后备份出数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p&lt;passwd&gt; &lt;table&gt; &gt; mysql_table_bak.sql</span><br></pre></td></tr></table></figure><p>先<code>drop table &lt;tablename&gt;</code>再将数据导入到另一台数据库服务器中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p&lt;passwd&gt; &lt;table&gt; &lt; mysql_table_bak.sql</span><br></pre></td></tr></table></figure><p>在配置完主从同步后解锁表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; UNLOCK TABLES</span><br></pre></td></tr></table></figure><h3 id="3-4-测试数据库同步"><a href="#3-4-测试数据库同步" class="headerlink" title="3.4 测试数据库同步"></a>3.4 测试数据库同步</h3><p>在HA-1节点创建一个数据库<code>test</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database test;</span><br></pre></td></tr></table></figure><p>查看HA-2主机是否同步了HA-1上的数据变化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| test          |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>可以看出HA-2节点的数据库同步了HA-1节点的数据库，在配置成双主复制后任一节点数据库发生改变另一节点数据库都会进行同步。</p><p>在配置完成数据库后若想对数据库进行访问只能访问单一节点数据库的IP，如果希望访问一个固定IP让数据库并能够实现故障自动切换就需要配合keepalived或者HAproxy进行代理。</p><h2 id="4-keepalived-安装"><a href="#4-keepalived-安装" class="headerlink" title="4 keepalived 安装"></a>4 keepalived 安装</h2><h3 id="4-1-keepalived介绍"><a href="#4-1-keepalived介绍" class="headerlink" title="4.1 keepalived介绍"></a>4.1 keepalived介绍</h3><p><img src="http://www.keepalived.org/images/ka-header.png" alt="keepalived"></p><p>Keepalived软件起初是专为LVS负载均衡软件设计的，用来管理并监控LVS集群系统中各个服务节点的状态，后来又加入了可以实现高可用的VRRP功能。因此，Keepalived除了能够管理LVS软件外，还可以作为其他服务（例如：Nginx、Haproxy、MySQL等）的高可用解决方案软件。</p><p>Keepalived软件主要是通过VRRP协议实现高可用功能的。VRRP是Virtual Router RedundancyProtocol(虚拟路由器冗余协议）的缩写，VRRP出现的目的就是为了解决静态路由单点故障问题的，它能够保证当个别节点宕机时，整个网络可以不间断地运行。</p><p>所以，Keepalived 一方面具有配置管理LVS的功能，同时还具有对LVS下面节点进行健康检查的功能，另一方面也可实现系统网络服务的高可用功能。</p><p>这里借用博客[4]的有关keepalived的集群工作原理示意图</p><p><img src="https://i.imgur.com/iZyFaCC.png" alt="keepalived状态切换示意图"></p><p>Keepalived高可用对之间是通过 VRRP进行通信的， VRRP是遑过竞选机制来确定主备的，主的优先级高于备，因此，工作时主会优先获得所有的资源，备节点处于等待状态，当主挂了的时候，备节点就会接管主节点的资源，然后顶替主节点对外提供服务。</p><p>在 Keepalived服务对之间，只有作为主的服务器会一直发送 VRRP广播包,告诉备它还活着，此时备不会枪占主，当主不可用时，即备监听不到主发送的广播包时，就会启动相关服务接管资源，保证业务的连续性.接管速度最快可以小于1秒。</p><h3 id="4-2-keepalived的安装"><a href="#4-2-keepalived的安装" class="headerlink" title="4.2 keepalived的安装"></a>4.2 keepalived的安装</h3><p>安装方式分为两种：apt直接安装和手动编译安装</p><p>1)手动编译安装</p><p>手动编译的好处是可以使用较新的源码，首先下载源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.keepalived.org/software/keepalived-1.4.2.tar.gz</span><br></pre></td></tr></table></figure><p>安装必要的编译包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y gcc build-essential make curl libssl-dev libnl-3-dev libnl-genl-3-dev libsnmp-dev</span><br></pre></td></tr></table></figure><p>配置编译，prefix指明需要安装在哪里，也可以不配置使用默认路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar xf keepalived-1.4.2.tar.gz</span><br><span class="line">cd keepalived-1.4.2</span><br><span class="line">./configure --prefix=/usr/local/keepalived</span><br></pre></td></tr></table></figure><p>配置完成后直接编译二连<code>make</code>和<code>make install</code>即可</p><p>2) apt安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install keepalived</span><br></pre></td></tr></table></figure><h3 id="4-3-keepapiled配置文件"><a href="#4-3-keepapiled配置文件" class="headerlink" title="4.3 keepapiled配置文件"></a>4.3 keepapiled配置文件</h3><p>keepalived服务安装完成之后，后面的主要工作就是在keepalived.conf文件中配置HA和负载均衡。一个功能比较完整的常用的keepalived配置文件，主要包含三块：<em>全局定义块</em>、<em>VRRP实例定义块</em>和<em>虚拟服务器定义块</em>。全局定义块是必须的，如果keepalived只用来做ha，虚拟服务器是可选的。下面数据库HA的配置文件模板：</p><h4 id="4-3-1-keepalived-conf配置"><a href="#4-3-1-keepalived-conf配置" class="headerlink" title="4.3.1 keepalived.conf配置"></a>4.3.1 keepalived.conf配置</h4><p><strong>HA-1主机</strong>上的keepalived.conf文件的修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">root@HA-1:~# cat /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id HA-1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script chk_mysql &#123;</span><br><span class="line">    script /etc/keepalived/bin/chk_mysql.sh    #健康监测脚本路径</span><br><span class="line">    interval 2</span><br><span class="line">    fall 3</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_MYSQL &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface enp0s9       # 监听网卡</span><br><span class="line">    virtual_router_id 100  # 虚拟路由编号，同一实例可以一致，但是其权重一定不能一致</span><br><span class="line">    nopreempt</span><br><span class="line">    priority 100           # 权重，两个节点不能一样</span><br><span class="line">    advert_int 1</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.10.103      # 虚拟IP地址</span><br><span class="line">        240C::1234/64       # 支持IPv6</span><br><span class="line">    &#125;</span><br><span class="line">    notify /etc/keepalived/bin/kpad_notify.sh     # keep状态传入脚本，通过该脚本可得知当前keep运行状态</span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_mysql            # 健康检查配置</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-3-1-2-健康监测脚本"><a href="#4-3-1-2-健康监测脚本" class="headerlink" title="4.3.1.2 健康监测脚本"></a>4.3.1.2 健康监测脚本</h5><p>创建脚本存放目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@HA-1:~# mkdir -p /etc/keepalived/bin</span><br></pre></td></tr></table></figure><p>1)keepalived状态脚本</p><p>创建脚本<code>/etc/keepalived/bin/kpad_notify.sh</code>内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">root@HA-1:~<span class="comment"># cat /etc/keepalived/bin/kpad_notify.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">TYPE=<span class="variable">$1</span></span><br><span class="line">NAME=<span class="variable">$2</span></span><br><span class="line">STATE=<span class="variable">$3</span></span><br><span class="line"></span><br><span class="line">log_file=<span class="string">"/var/log/test/keepalived/keepalived.log"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">log</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$(date +"%Y-%m-%d %H:%M:%S.%4N")</span> [<span class="variable">$STATE</span>] <span class="variable">$1</span>"</span> &gt;&gt; <span class="variable">$log_file</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$STATE</span> <span class="keyword">in</span></span><br><span class="line">    <span class="string">"MASTER"</span>)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'MASTER'</span> &gt; /tmp/keepalived-state</span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">        ;;</span><br><span class="line">    <span class="string">"BACKUP"</span>)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'BACKUP'</span> &gt; /tmp/keepalived-state</span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">        ;;</span><br><span class="line">    <span class="string">"FAULT"</span>)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'FAULT'</span> &gt; /tmp/keepalived-state</span><br><span class="line">        <span class="built_in">log</span> <span class="string">"keepalived status is fault."</span></span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">log</span> <span class="string">"unknown keepalived status."</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>设置脚本运行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@HA-1:~# chmod +x /etc/keepalived/bin/kpad_notify.sh</span><br></pre></td></tr></table></figure><p>2）配置mysql健康检查脚本</p><p>编辑<code>/etc/keepalived/bin/chk_mysql.sh</code>脚本内容如下，脚本的大致思路是如果在master和backup状态下mysqld进程不存在则尝试重启mysql，若重启失败则任务该节点的mysql彻底故障，进行故障转移。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#########################################################################</span></span><br><span class="line"><span class="comment"># File Name: chk_mysql.sh</span></span><br><span class="line"><span class="comment"># Author: louie.long</span></span><br><span class="line"><span class="comment"># Mail: ylong@biigroup.cn</span></span><br><span class="line"><span class="comment"># Created Time: Wed 04 Apr 2018 10:44:20 AM CST</span></span><br><span class="line"><span class="comment"># Description: check mysql service</span></span><br><span class="line"><span class="comment">#########################################################################</span></span><br><span class="line"></span><br><span class="line">STATE=`cat /tmp/keepalived-state`</span><br><span class="line">log_file=<span class="string">"/var/log/test/keepalived/keepalived.log"</span></span><br><span class="line">service_name=<span class="string">"mysqld"</span></span><br><span class="line">service_cmd=<span class="string">"/etc/init.d/mysql"</span></span><br><span class="line">get_pid=`pidof <span class="variable">$service_name</span>`</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">log</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$(date +"%Y-%m-%d %H:%M:%S.%4N")</span> [<span class="variable">$STATE</span>] <span class="variable">$1</span>"</span> &gt;&gt; <span class="variable">$log_file</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$STATE</span> <span class="keyword">in</span></span><br><span class="line">    <span class="string">"MASTER"</span>)</span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;get_pid&#125;</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">log</span> <span class="string">"<span class="variable">$service_name</span> service isn't exist."</span></span><br><span class="line">            <span class="built_in">log</span> <span class="string">"Try to restart <span class="variable">$service_name</span> service."</span></span><br><span class="line">            <span class="variable">$service_cmd</span> start</span><br><span class="line">            <span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">log</span> <span class="string">"restart <span class="variable">$service_name</span> service successfully."</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">log</span> <span class="string">"restart <span class="variable">$service_name</span> service failed."</span></span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">        ;;</span><br><span class="line">    <span class="string">"BACKUP"</span>)</span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;get_pid&#125;</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">log</span> <span class="string">"<span class="variable">$service_name</span> service isn't exist."</span></span><br><span class="line">            <span class="built_in">log</span> <span class="string">"Try to restart <span class="variable">$service_name</span> service."</span></span><br><span class="line">            <span class="variable">$service_cmd</span> start</span><br><span class="line">            <span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">log</span> <span class="string">"restart <span class="variable">$service_name</span> service successfully."</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">log</span> <span class="string">"restart <span class="variable">$service_name</span> service failed."</span></span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">        ;;</span><br><span class="line">    <span class="string">"FAULT"</span>)</span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">        ;;</span><br><span class="line">       *)</span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@HA-1:~# chmod +x /etc/keepalived/bin/chk_mysql.sh</span><br></pre></td></tr></table></figure><p>随后重启keepalived服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@HA-1:~# service keepalived restart</span><br></pre></td></tr></table></figure><h4 id="4-3-2-在HA-2节点上配置"><a href="#4-3-2-在HA-2节点上配置" class="headerlink" title="4.3.2 在HA-2节点上配置"></a>4.3.2 在HA-2节点上配置</h4><p>基本配置个HA-1节点上一样，两个健康监测脚本完全一致，不同的是keepalived.conf脚本中权重值和节点初始属性</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">root@HA-2:~# cat /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id HA-1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script chk_mysql &#123;</span><br><span class="line">    script /etc/keepalived/bin/chk_mysql.sh    #健康监测脚本路径</span><br><span class="line">    interval 2</span><br><span class="line">    fall 3</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_MYSQL &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface enp0s9       # 监听网卡</span><br><span class="line">    virtual_router_id 100  # 虚拟路由编号，同一实例可以一致，但是其权重一定不能一致</span><br><span class="line">    nopreempt</span><br><span class="line">    priority 90           # 权重，两个节点不能一样</span><br><span class="line">    advert_int 1</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.10.103      # 虚拟IP地址</span><br><span class="line">        240C::1234</span><br><span class="line">    &#125;</span><br><span class="line">    notify /etc/keepalived/bin/kpad_notify.sh     # keep状态传入脚本，通过该脚本可得知当前keep运行状态</span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_mysql            # 健康检查配置</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在拷贝<code>/etc/keepalived/bin/kpad_notify.sh</code>和<code>/etc/keepalived/bin/chk_mysql.sh</code>两个脚本后重启keepalived服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@HA-2:~# service keepalived restart</span><br></pre></td></tr></table></figure><h4 id="4-3-3-测试"><a href="#4-3-3-测试" class="headerlink" title="4.3.3 测试"></a>4.3.3 测试</h4><p>在HA-1和HA-2分别执行ip addr show dev enp0s9命令查看HA-1和HA-2对VIP（群集虚拟IP）的控制权。HA-1主的查看结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@HA-1:~# ip addr show dev enp0s9</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:fd:98:1b brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.10.101/20 brd 192.168.15.255 scope global enp0s9</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 192.168.10.103/32 scope global enp0s9</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 240c:f:1:4000:20c:29ff:fefd:981b/64 scope global mngtmpaddr dynamic</span><br><span class="line">       valid_lft 2591546sec preferred_lft 604346sec</span><br><span class="line">    inet6 fe80::20c:29ff:fefd:981b/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p>可以看到生成了192.168.10.101这个虚拟IP。</p><p>停止HA-1的keepalived服务，HA-2将会成为新的主节点，HA-2主的查看结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@HA-2:~# ip addr show dev enp0s9</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:fd:98:1b brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.10.102/20 brd 192.168.15.255 scope global enp0s9</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 192.168.10.103/32 scope global enp0s9</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 240c:f:1:4000:20c:29ff:fefd:981b/64 scope global mngtmpaddr dynamic</span><br><span class="line">       valid_lft 2591855sec preferred_lft 604655sec</span><br><span class="line">    inet6 fe80::20c:29ff:fefd:981b/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p>可以看到生成了192.168.10.103这个虚IP。</p><p>MySQL远程登录测试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@HA-2:~#  mysql -h192.168.10.103 -uroot -p</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 2119</span><br><span class="line">Server version: 5.7.21-0ubuntu0.16.04.1-log (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show variables like <span class="string">'server_id'</span>;</span></span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| server_id     | 2     |</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>说明在客户端访问VIP地址，由HA-2主机提供响应的，当前状态下HA-2充当主服务器。</p><p>【Note】</p><p>经过测试在纯IPv6的环境下上述HA依然可以正常运行。</p><p>【参考链接】</p><p>1)<a href="https://baike.baidu.com/item/mySQL/471251?fr=aladdin" target="_blank" rel="noopener">mysql介绍</a></p><p>2)<a href="https://stackoverflow.com/questions/7739645/install-mysql-on-ubuntu-without-a-password-prompt" target="_blank" rel="noopener">mysql安装跳过密码设置</a></p><p>3)<a href="http://www.keepalived.org" target="_blank" rel="noopener">keepalived官网</a></p><p>4)<a href="https://www.cnblogs.com/clsn/p/8052649.html" target="_blank" rel="noopener">keepaliced介绍</a></p>]]></content>
    
    <summary type="html">
    
      MySQL主主复制配置
    
    </summary>
    
      <category term="ubuntu" scheme="https://louielong.github.io/categories/ubuntu/"/>
    
    
      <category term="ubuntu" scheme="https://louielong.github.io/source/tags/ubuntu/"/>
    
      <category term="mysql" scheme="https://louielong.github.io/source/tags/mysql/"/>
    
      <category term="keepalived" scheme="https://louielong.github.io/source/tags/keepalived/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu下安装配置NTP服务器</title>
    <link href="https://louielong.github.io/linux_ntp_install.html"/>
    <id>https://louielong.github.io/linux_ntp_install.html</id>
    <published>2018-05-10T06:35:22.000Z</published>
    <updated>2018-09-12T09:51:08.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>在建立Linux主机集群时，为了避免集群主机时间不同以及长时间运行下所导致的时间偏差，需要进行时间同步(synchronize)。Linux系统下，一般使用ntp服务来同步不同机器的时间。NTP（Network Time Protocol）即网络时间协议，就是通过网络协议使计算机之间的时间同步化。</p><p><strong>时间同步方式</strong></p><p>NTP在linux下有两种时钟同步方式，分别为直接同步和平滑同步[1]：</p><ul><li>直接同步</li></ul><p>使用ntpdate命令进行同步，直接进行时间变更。如果服务器上存在一个12点运行的任务，当前服务器时间是13点，但标准时间时11点，使用此命令可能会造成任务重复执行。因此使用ntpdate同步可能会引发风险，因此该命令也多用于配置时钟同步服务时第一次同步时间时使用，如：系统重启时。</p><ul><li>平滑同步</li></ul><p>使用ntpd进行时钟同步，可以保证一个时间不经历两次，它每次同步时间的偏移量不会太陡，是慢慢来的，这正因为这样，ntpd平滑同步可能耗费的时间比较长。对ntp时间同步修正原理感兴趣的可以查看官方文档：<a href="https://www.eecis.udel.edu/~mills/ntp/html/warp.html" target="_blank" rel="noopener">How NTP Works</a></p><p>时钟的跃变，对于某些程序会导致很严重的问题。许多应用程序依赖连续的时钟，取得的时间是线性的，一些操作，例如数据库事务，通常会地依赖这样的事实：时间不会往回跳跃。不幸的是，ntpdate调整时间的方式就是我们所说的”跃变“：在获得一个时间之后，ntpdate使用settimeofday(2)设置系统时间，这有几个非常明显的问题[2]：</p><p>第一，这样做不安全。ntpdate的设置依赖于ntp服务器的安全性，攻击者可以利用一些软件设计上的缺陷，拿下ntp服务器并令与其同步的服务器执行某些消耗性的任务。由于ntpdate采用的方式是跳变，跟随它的服务器无法知道是否发生了异常（时间不一样的时候，唯一的办法是以服务器为准）。</p><p>第二，这样做不精确。一旦ntp服务器宕机，跟随它的服务器也就会无法同步时间。与此不同，ntpd不仅能够校准计算机的时间，而且能够校准计算机的时钟。</p><p>第三，这样做不够优雅。由于是跳变，而不是使时间变快或变慢，依赖时序的程序会出错（例如，如果ntpdate发现你的时间快了，则可能会经历两个相同的时刻，对某些应用而言，这是致命的）。因而，唯一一个可以令时间发生跳变的点，是计算机刚刚启动，但还没有启动很多服务的那个时候。其余的时候，理想的做法是使用ntpd来校准时钟，而不是调整计算机时钟上的时间。</p><p>NTPD 在和时间服务器的同步过程中，会把 BIOS 计时器的振荡频率偏差——或者说 Local Clock 的自然漂移(drift)——记录下来。这样即使网络有问题，本机仍然能维持一个相当精确的走时。</p><h2 id="2-安装ntp"><a href="#2-安装ntp" class="headerlink" title="2 安装ntp"></a>2 安装ntp</h2><p>ntp的安装是服务器和客户端集成在一起的，在ubuntu或centos下安装ntp服务器都非常简单，这里以ubuntu为例，使用NTP命令即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y ntp</span><br></pre></td></tr></table></figure><p>如果需要ntpdate工具则需要额外安装ntpdate</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y ntpdate</span><br></pre></td></tr></table></figure><h2 id="3-配置ntp服务器或server"><a href="#3-配置ntp服务器或server" class="headerlink" title="3 配置ntp服务器或server"></a>3 配置ntp服务器或server</h2><p>ntp的配置文件存放在<code>/etc/ntp.conf</code>，打开文件并进行修改，部分参数说明如下</p><h3 id="3-1-使用server命令设定上层NTP服务器"><a href="#3-1-使用server命令设定上层NTP服务器" class="headerlink" title="3.1 使用server命令设定上层NTP服务器"></a>3.1 使用server命令设定上层NTP服务器</h3><p>设定方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server [address] [options...]</span><br></pre></td></tr></table></figure><p>在server后面填写服务器地址（可以使IP或主机名），之后是命令参数主要包括autokey，brust，ibrust，key，minpoll ，maxpoll。这里最长使用的是ibrust和prefer。</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>brust</td><td>当时间服务器不可达时，将发送间隔为2秒的连续八个包</td></tr><tr><td>ibrust</td><td>当时间服务器不可达时，将发送间隔为2秒的连续八个包</td></tr><tr><td>prefer</td><td>当其他数据相同时该节点将作为首选时间同步</td></tr></tbody></table><p>其它参数的详细说明可参考NTP的帮助文档（<code>man 5 ntp.conf</code>）。</p><h3 id="3-2-使用restrict命令管理权限控制"><a href="#3-2-使用restrict命令管理权限控制" class="headerlink" title="3.2 使用restrict命令管理权限控制"></a>3.2 使用restrict命令管理权限控制</h3><p>设定方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">restrict [address] mask [mask] [parameter]</span><br></pre></td></tr></table></figure><p>其中parameter的参数主要有以下这些：</p><ul><li>ignore: 拒绝所有类型的NTP联机；</li><li>nomodify: 客户端不能使用ntpc与ntpq这两个程序来修改服务器的时间参数，但客户端仍可透过这个主机来进行网络校时；</li><li>noquery: 客户端不能使用ntpq，ntpc等指令来查询时间服务器，等于不提供NTP的网络校时；</li><li>notrap: 不提供trap这个远程事件登录(remote event logging)的功能；</li><li>notrust: 拒绝没有认证的客户端；</li></ul><p>如果你没有在 parameter 的地方加上任何参数的话，这表示该 IP 或网段不受任何限制。</p><h3 id="3-3-使用driftfile记录时间差异"><a href="#3-3-使用driftfile记录时间差异" class="headerlink" title="3.3 使用driftfile记录时间差异"></a>3.3 使用driftfile记录时间差异</h3><p>设定方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driftfile [可以被ntpd写入的目录与档案]</span><br></pre></td></tr></table></figure><p>因为预设的 NTP Server 本身的时间计算是依据 BIOS 的芯片震荡周期频率来计算的，但是这个数值与上层 Time Server 不见得会一致啊！所以 NTP 这个 daemon (ntpd) 会自动的去计算我们自己主机的频率与上层 Time server 的频率，并且将两个频率的误差记录下来，记录下来的档案就是在 driftfile 后面接的完整档名当中了！关于档名你必须要知道：</p><ul><li>driftfile 后面接的档案需要使用完整路径文件名；</li><li>该档案不能是连结档；</li><li>该档案需要设定成 ntpd 这个 daemon 可以写入的权限；</li><li>该档案所记录的数值单位为：百万分之一秒 (ppm)；</li></ul><p>driftfile 后面接的档案会被 ntpd 自动更新，所以他的权限一定要能够让 ntpd 写入才行。</p><h3 id="3-4-使用statsdir和filegen开启统计分析"><a href="#3-4-使用statsdir和filegen开启统计分析" class="headerlink" title="3.4 使用statsdir和filegen开启统计分析"></a>3.4 使用statsdir和filegen开启统计分析</h3><p>设定方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">statsdir directory_path</span><br><span class="line">filegen name file filename [type type] [link | nolink] [enable | disable]</span><br></pre></td></tr></table></figure><p>当打开统计分析是会在directory_path目录下产生filegen中所设定的统计文件。</p><h3 id="3-5-指定接口"><a href="#3-5-指定接口" class="headerlink" title="3.5 指定接口"></a>3.5 指定接口</h3><p>ntp服务开启时默认监听所有的接口，如果想指定ip段或者接口则按照一下方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">interface [listen | ignore | drop] [all | ipv4 | ipv6 | wildcard | name | address[/prefixlen]]</span><br></pre></td></tr></table></figure><p>listen指定监听接口，ignore忽略该接口，drop丢弃接口的请求数据包，接口类型可以指定为v4、v6或接口名。</p><h3 id="3-6-配置文件示例"><a href="#3-6-配置文件示例" class="headerlink" title="3.6 配置文件示例"></a>3.6 配置文件示例</h3><p>为了支持IPv6这里添加清华源的NTP服务器，清华源官方链接：<a href="https://tuna.moe/help/ntp/" target="_blank" rel="noopener">传送门</a></p><p>配置文件完整示例如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"># /etc/ntp.conf, configuration for ntpd; see ntp.conf(5) for help</span><br><span class="line"># 时间差异文件</span><br><span class="line">driftfile /var/lib/ntp/ntp.drift</span><br><span class="line"></span><br><span class="line"># 接口设置</span><br><span class="line">interface listen eth0</span><br><span class="line">interface ignore ipv4</span><br><span class="line"></span><br><span class="line"># 分析统计信息</span><br><span class="line">#statsdir /var/log/ntpstats/</span><br><span class="line"></span><br><span class="line">statistics loopstats peerstats clockstats</span><br><span class="line">filegen loopstats file loopstats type day enable</span><br><span class="line">filegen peerstats file peerstats type day enable</span><br><span class="line">filegen clockstats file clockstats type day enable</span><br><span class="line"></span><br><span class="line"># 上层ntp server.</span><br><span class="line">pool ntp1.aliyun.com iburst</span><br><span class="line">pool ntp2.aliyun.com iburst</span><br><span class="line">pool ntp3.aliyun.com iburst</span><br><span class="line">pool ntp4.aliyun.com iburst</span><br><span class="line"># 清华源提供IPv4和IPv6双栈</span><br><span class="line">pool ntp.tuna.tsinghua.edu.cn iburst perfer</span><br><span class="line"></span><br><span class="line"># Use Ubuntu&apos;s ntp server as a fallback.</span><br><span class="line">pool ntp.ubuntu.com</span><br><span class="line"></span><br><span class="line"># 不允许来自公网上ipv4和ipv6客户端的访问</span><br><span class="line">restrict -4 default kod notrap nomodify nopeer noquery limited</span><br><span class="line">restrict -6 default kod notrap nomodify nopeer noquery limited</span><br><span class="line"># 准许以下网络的ntp请求</span><br><span class="line">restrict -6 240c:6100:ffff:: netmask 64 nomodify</span><br><span class="line">restrict 172.16.0.1 netmask 20 nomodify</span><br><span class="line"></span><br><span class="line"># 让NTP Server和其自身保持同步，如果在/etc/ntp.conf中定义的server都不可用时，将使用local时间作为ntp服务提供给ntp客户端.</span><br><span class="line">restrict 127.0.0.1</span><br><span class="line">restrict ::1</span><br><span class="line"></span><br><span class="line"># Needed for adding pool entries</span><br><span class="line">restrict source notrap nomodify noquery</span><br><span class="line"></span><br><span class="line"># If you want to provide time to your local subnet, change the next line.</span><br><span class="line"># (Again, the address is an example only.)</span><br><span class="line">#broadcast 192.168.123.255</span><br><span class="line"></span><br><span class="line"># If you want to listen to time broadcasts on your local subnet, de-comment the</span><br><span class="line"># next lines.  Please do this only if you trust everybody on the network!</span><br><span class="line">#disable auth</span><br><span class="line">#broadcastclient</span><br><span class="line"></span><br><span class="line">#Changes recquired to use pps synchonisation as explained in documentation:</span><br><span class="line">#http://www.ntp.org/ntpfaq/NTP-s-config-adv.htm#AEN3918</span><br><span class="line"></span><br><span class="line">#server 127.127.8.1 mode 135 prefer    # Meinberg GPS167 with PPS</span><br><span class="line">#fudge 127.127.8.1 time1 0.0042        # relative to PPS for my hardware</span><br><span class="line"></span><br><span class="line">#server 127.127.22.1                   # ATOM(PPS)</span><br><span class="line">#fudge 127.127.22.1 flag3 1            # enable PPS API</span><br></pre></td></tr></table></figure></p><h2 id="4-启动ntp服务"><a href="#4-启动ntp服务" class="headerlink" title="4 启动ntp服务"></a>4 启动ntp服务</h2><p>启动ntp服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ntp restart</span><br></pre></td></tr></table></figure><p>通过ntpq命令查看ntp同步状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">watch ntpq -p</span><br><span class="line">Every 2.0s: ntpq -p                                                                                                                                 </span><br><span class="line"></span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line"> ntp1.aliyun.com .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> ntp2.aliyun.com .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> ntp3.aliyun.com .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> ntp4.aliyun.com .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> ntp.ubuntu.com  .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line">+2001:67c:1560:8 192.53.103.108   2 u  411  512  377  401.548  -19.089   4.396</span><br><span class="line">*2001:67c:1560:8 17.253.34.125    2 u  512  512  377  379.682    0.776  18.600</span><br></pre></td></tr></table></figure><p>上述字段的含义如下：</p><ul><li>remote: 指的就是本地机器所连接的远程NTP服务器；</li><li>refid: 指的是给远程服务器提供时间同步的服务器；</li><li>st: 远程服务器的层级别（stratum）. 由于NTP是层型结构,有顶端的服务器,多层的Relay Server再到客户端。所以服务器从高到低级别可以设定为1-16. 为了减缓负荷和网络堵塞,原则上应该避免直接连接到级别为1的服务器的；</li><li>when: 几秒钟前曾经做过时间同步化更新的动作；</li><li>poll: 本地机和远程服务器多少时间进行一次同步(单位为秒).<br>在一开始运行NTP的时候这个poll值会比较小,那样和服务器同步的频率也就增加了,可以尽快调整到正确的时间范围.之后poll值会逐渐增大,同步的频率也就会相应减小；</li><li>reach: 已经向上层 NTP 服务器要求更新的次数；</li><li>delay: 网络传输过程当中延迟的时间，单位为 10^(-6) 秒；</li><li>offset: 时间补偿的结果，单位与 10^(-3) 秒；</li><li>jitter: Linux 系统时间与 BIOS 硬件时间的差异时间， 单位为 10^(-6) 秒。简单地说这个数值的绝对值越小我们和服务器的时间就越精确；</li><li>*: 它告诉我们远端的服务器已经被确认为我们的主NTP Server,我们系统的时间将由这台机器所提供；</li><li>+: 它将作为辅助的NTP Server和带有<em>号的服务器一起为我们提供同步服务. 当</em>号服务器不可用时它就可以接管；</li><li>-: 远程服务器被clustering algorithm认为是不合格的NTP Server；</li><li>x: 远程服务器不可用；</li></ul><p><strong>ntpdate 强制同步时间</strong></p><p>如果本机与时间同步服务器时间间隔太大可以通过ntpdate命令来进行同步，需要指出的是ntpdate使用前需要停止ntpd的进程。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ntpdate ntp1.ailiyun.com</span><br></pre></td></tr></table></figure><p>【Note】</p><p>ntp监听的是123端口，部分操作系统或防火墙等可能限制123端口因此需要放开端口限制。</p><p>【参考链接】</p><p>1)<a href="https://www.linuxidc.com/Linux/2015-11/124911.htm" target="_blank" rel="noopener">centos 7 ntp 同步说明</a></p><p>2)<a href="https://www.cnblogs.com/kerrycode/archive/2015/08/20/4744804.html" target="_blank" rel="noopener">NTP 安装与配置</a></p>]]></content>
    
    <summary type="html">
    
      NTP 服务器安装
    
    </summary>
    
      <category term="Ubuntu" scheme="https://louielong.github.io/categories/Ubuntu/"/>
    
    
      <category term="Ubuntu" scheme="https://louielong.github.io/source/tags/Ubuntu/"/>
    
      <category term="NTP" scheme="https://louielong.github.io/source/tags/NTP/"/>
    
  </entry>
  
  <entry>
    <title>KVM安装windows</title>
    <link href="https://louielong.github.io/KVM_install_windows.html"/>
    <id>https://louielong.github.io/KVM_install_windows.html</id>
    <published>2018-05-10T04:13:34.000Z</published>
    <updated>2018-09-12T09:51:08.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>需要在window的系统上安装相应的软件，而当前的服务器都只安装了linux系统，由于服务器安装的linux都是server版本，因此只能在linux主机上通过KVM的方式安装window server 2008。本文记录一下再无桌面的ubuntu server下使用KVM安装windows server的过程。</p><p>环境说明：</p><p>linux主机：ubuntu server 16.04.4</p><p>windows：windows server 2008 R2</p><h2 id="2-KVM安装windows"><a href="#2-KVM安装windows" class="headerlink" title="2 KVM安装windows"></a>2 KVM安装windows</h2><h3 id="2-1-必要软件安装"><a href="#2-1-必要软件安装" class="headerlink" title="2.1 必要软件安装"></a>2.1 必要软件安装</h3><p>本次安装的linux系统为<code>ubuntu 16.04 server</code>版本，首先通过apt命令安装必要的软件，服务器都是命令行，没有安装 X 桌面，所以加入 <code>--no-install-recommends</code> 参数，否则会安装 <code>virt-viewer</code> 之类的包，而它们的依赖关系中又有 X11 和很多图形图像库，而这些都用不上。如果开启了桌面系统，那么可以不加该参数[1]。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">louie@ubuntu:~$ sudo apt-get install -y --no-install-recommends qemu-kvm qemu-utils libvirt-bin virtinst cpu-checker</span><br></pre></td></tr></table></figure><p>安装完成后验证一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">louie@ubuntu:~$ kvm-ok</span><br><span class="line">INFO: /dev/kvm exists</span><br><span class="line">KVM acceleration can be used</span><br></pre></td></tr></table></figure><p>KVM安装完成后会自动生成一个virbr0 的桥接网络，但是这个是一个 NAT 的网络，没有办法跟局域网内的其他主机进行通信，因为安装的windows需要跟其他机器通信，因此需要将KVM的网桥和物理网卡桥接在一起。</p><p>配置<code>/etc/network/interfaces</code>文件，加入一下配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> The bridged network interface</span><br><span class="line">auto br0</span><br><span class="line">iface br0 inet static</span><br><span class="line">    address 10.7.3.5</span><br><span class="line">    netmask 255.255.255.0</span><br><span class="line">    gateway 10.7.3.1</span><br><span class="line">    dns-nameservers 223.5.5.5</span><br><span class="line">    bridge_ports bond0</span><br><span class="line">    bridge_stop off</span><br><span class="line">    bridge_fd 0</span><br><span class="line">    bridge_maxwait 0</span><br><span class="line">    bridge_stp yes</span><br><span class="line">iface br0 inet6 static</span><br><span class="line">address 2402:6100::5/64</span><br><span class="line">    gateway 2402:6100::1</span><br></pre></td></tr></table></figure><p>重启网络服务，通过brctl命令查看网桥状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# brctl show</span><br><span class="line">bridge namebridge idSTP enabledinterfaces</span><br><span class="line">br08000.d09466445091yesbond0</span><br><span class="line">virbr08000.5254006a9d3cyesvirbr0-nic</span><br></pre></td></tr></table></figure><p>随后开始创建虚拟机</p><h3 id="2-2-准备虚拟硬盘文件"><a href="#2-2-准备虚拟硬盘文件" class="headerlink" title="2.2 准备虚拟硬盘文件"></a>2.2 准备虚拟硬盘文件</h3><p>创建一个虚拟磁盘，根据需要控制磁盘大小，理论上20G就够用，这里设置稍大一些。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">louie@ubuntu:~$ qemu-img create -f qcow2 WASU_AF.qcow2 50G</span><br></pre></td></tr></table></figure><p>在启动虚拟机之前要再下载virtio驱动，因为kvm安装windows采用的是virtio的形式，主要是磁盘和网卡驱动，下载地址：<a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.126-2/" target="_blank" rel="noopener">传送门</a></p><p>这里安装的是64位系统，选择<code>virtio-win-0.1.126_amd64.vfd</code>的virtio驱动[2]</p><p>再准备一个<a href="https://download.microsoft.com/download/F/3/8/F384E78B-8F1D-42A6-A308-63E45060E823/7601.17514.101119-1850_x64fre_server_eval_zh-cn-GRMSXEVAL_CN_DVD.iso" target="_blank" rel="noopener">windows server 的ISO</a>镜像就齐活啦</p><p>一共需要的东西清单如下：</p><ul><li>虚拟磁盘文件(WASU_AF.qcow2)</li><li>virtio驱动(virtio-win-0.1.126_amd64.vfd)</li><li>windows server镜像(windows server 2008R2)</li></ul><h3 id="2-3-安装虚拟机"><a href="#2-3-安装虚拟机" class="headerlink" title="2.3 安装虚拟机"></a>2.3 安装虚拟机</h3><p>使用如下命令创建虚拟机，创建完成后需要在VNC上完成后续操作才算完全安装好</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">louie@ubuntu:~$ virt-install \</span><br><span class="line">--name WASU_AF \</span><br><span class="line">--memory 4096 \</span><br><span class="line">--vcpus sockets=2,cores=2,threads=2 \</span><br><span class="line">--cdrom=/opt/cfiec/6dnskvm/windows_ser_2008.iso \</span><br><span class="line">--os-type=windows \</span><br><span class="line">--os-variant=auto \</span><br><span class="line">--disk /opt/cfiec/6dnskvm/WASU_AF.qcow2,bus=virtio,size=50 \</span><br><span class="line">--disk /opt/cfiec/6dnskvm/virtio-win-0.1.126_amd64.vfd,device=floppy \</span><br><span class="line">--network bridge=br0,model=virtio \</span><br><span class="line">--graphics vnc,password=v6dns,listen=::,port=5910 \</span><br><span class="line">--hvm \</span><br><span class="line">--virt-type kvm</span><br><span class="line"></span><br><span class="line">WARNING  Graphics requested but DISPLAY is not set. Not running virt-viewer.</span><br><span class="line">WARNING  No console to launch for the guest, defaulting to --wait -1</span><br><span class="line"></span><br><span class="line">Starting install...</span><br><span class="line">Creating domain...                                                                                                                                    |    0 B  00:00:01</span><br><span class="line">Domain installation still in progress. Waiting for installation to complete.</span><br></pre></td></tr></table></figure><p>【Note】</p><p>1）分配给虚拟机的vCPU个数由sockets、cores、threads三个参数的乘积来控制，sockets指代CPU插槽数目，cores指代每个插槽芯片的核心数，threads指代那个核心的超线程，如上所示创建的虚拟机共有8个逻辑cpu。</p><p>2）<code>listen</code>指代的是虚拟机的VNC监听接口，默认是localhost，‘0:0:0:0’指带所有的IPv4接口，‘::’指代所有接口，包括IPv4和IPv6。</p><p>随后需要通过VNC来继续完成系统的安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnc://[2402:6100::5]:5910</span><br></pre></td></tr></table></figure><p>输入密码后即可进入windows server安装界面，安装过程会出现看不见磁盘的情况，是因为没有加载virtio驱动的原因，这时候就轮到<code>virtio-win-0.1.126_amd64.vfd</code>起作用啦，virtio驱动是以软盘的形式加载的，这样可以避免虚拟机启动时找不到系统盘镜像。</p><p><img src="https://i.imgur.com/e7vl8hp.jpg" alt="windows server 2008 安装1"></p><p>选择“加载驱动”，“浏览”，找到“软盘驱动器”，点开后选择 “server 2008R2”确定，会发现有两个驱动，一个是Ethernet网卡，一个SCSI磁盘，操作两次驱动加载完成后，磁盘就出现了，继续安装即可。</p><p><img src="https://i.imgur.com/MtpwzJ2.png" alt="windows server 2008 安装2"></p><p><img src="https://i.imgur.com/mLlBzac.png" alt="windows server 2008 安装3"></p><p><img src="https://i.imgur.com/Judghe7.png" alt="windows server 2008 安装4"></p><p><img src="https://i.imgur.com/9XH65CW.png" alt="windows server 2008 安装5"></p><p>等待安装完成，创建新密码即安装完成。</p><p><img src="https://i.imgur.com/5g93bMV.png" alt="windows server 2008 安装6"></p><p>在ubuntu上使用virsh命令即可查看虚拟机状态，进行虚拟机的关机、暂停操作等。</p><h3 id="2-4-虚拟机开关机"><a href="#2-4-虚拟机开关机" class="headerlink" title="2.4 虚拟机开关机"></a>2.4 虚拟机开关机</h3><p>在完成上述的安装过程后，即可通过lib-virt的<code>virsh</code>来完成虚拟机生命周期管理了，包括：开机、关机、暂停、删除等操作。</p><p>在ubuntu server上查看虚拟机运行状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">louie@ubuntu:~$ virsh list</span><br><span class="line"> Id    Name                           State</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> 3     DELL_STORAGE                running</span><br></pre></td></tr></table></figure><p>关机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh shutdown DELL_STORAGE</span><br></pre></td></tr></table></figure><p>开机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh start DELL_STORAGE</span><br></pre></td></tr></table></figure><p>暂停（挂起）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh suspend DELL_STORAGE</span><br></pre></td></tr></table></figure><p>删除</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh destroy DELL_STORAGE</span><br></pre></td></tr></table></figure><p>要想彻底删除一个虚拟机需要将其xml文件一并删除，即删除<code>/etc/libvirt/qemu/</code>下的同名xml文件，同时重启libvirt服务，<code>sudo service libvirt-bin restart</code>。</p><p>需要修改虚拟机的硬件配置需要修改虚拟机的配置文件，位于<code>/etc/libvirt/qemu/</code>目录下有一个同名的xml文件，但是不要直接修改它，使用如下命令进行编辑（编辑前先将虚拟机关机），首次编辑需要选择编辑器，这里选择vim</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">louie@ubuntu:~$ sudo virsh shutdown DELL_STORAGE  </span><br><span class="line">louie@ubuntu:~$ sudo virsh edit DELL_STORAGE  </span><br><span class="line">[sudo] password for louie:</span><br><span class="line"></span><br><span class="line">Select an editor.  To change later, run 'select-editor'.</span><br><span class="line">  1. /bin/ed</span><br><span class="line">  2. /bin/nano        &lt;---- easiest</span><br><span class="line">  3. /usr/bin/vim.basic</span><br><span class="line">  4. /usr/bin/vim.tiny</span><br><span class="line"></span><br><span class="line">Choose 1-4 [2]: 3</span><br></pre></td></tr></table></figure><p>如我们需要将软盘和系统镜像卸载掉，删除以下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">disk</span> <span class="attr">type</span>=<span class="string">'file'</span> <span class="attr">device</span>=<span class="string">'floppy'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">driver</span> <span class="attr">name</span>=<span class="string">'qemu'</span> <span class="attr">type</span>=<span class="string">'raw'</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">file</span>=<span class="string">'/opt/cfiec/6dnskvm/virtio-win-0.1.126_amd64.vfd'</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">target</span> <span class="attr">dev</span>=<span class="string">'fda'</span> <span class="attr">bus</span>=<span class="string">'fdc'</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'drive'</span> <span class="attr">controller</span>=<span class="string">'0'</span> <span class="attr">bus</span>=<span class="string">'0'</span> <span class="attr">target</span>=<span class="string">'0'</span> <span class="attr">unit</span>=<span class="string">'0'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">disk</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">disk</span> <span class="attr">type</span>=<span class="string">'file'</span> <span class="attr">device</span>=<span class="string">'cdrom'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">driver</span> <span class="attr">name</span>=<span class="string">'qemu'</span> <span class="attr">type</span>=<span class="string">'raw'</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">file</span>=<span class="string">'/opt/cfiec/6dnskvm/windows_ser_2008.iso'</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">target</span> <span class="attr">dev</span>=<span class="string">'hda'</span> <span class="attr">bus</span>=<span class="string">'ide'</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">readonly</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'drive'</span> <span class="attr">controller</span>=<span class="string">'0'</span> <span class="attr">bus</span>=<span class="string">'0'</span> <span class="attr">target</span>=<span class="string">'0'</span> <span class="attr">unit</span>=<span class="string">'0'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">disk</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关于文件的其他内容含义可以部分解释如下[3]</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">domain</span> <span class="attr">type</span>=<span class="string">'kvm'</span>&gt;</span>   //虚拟机类型，如果是Xen，则type=‘xen’</span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>DELL_STORAGE  <span class="tag">&lt;/<span class="name">name</span>&gt;</span> //虚拟机名称，同一物理机唯一</span><br><span class="line">  <span class="tag">&lt;<span class="name">uuid</span>&gt;</span>d29c0f61-8501-420a-a006-d82a00fe7eb4<span class="tag">&lt;/<span class="name">uuid</span>&gt;</span> //同一物理机唯一，可用uuidgen生成</span><br><span class="line">  <span class="tag">&lt;<span class="name">memory</span> <span class="attr">unit</span>=<span class="string">'KiB'</span>&gt;</span>4194304<span class="tag">&lt;/<span class="name">memory</span>&gt;</span> //虚拟机内存</span><br><span class="line">  <span class="tag">&lt;<span class="name">currentMemory</span> <span class="attr">unit</span>=<span class="string">'KiB'</span>&gt;</span>4194304<span class="tag">&lt;/<span class="name">currentMemory</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">vcpu</span> <span class="attr">placement</span>=<span class="string">'static'</span>&gt;</span>4<span class="tag">&lt;/<span class="name">vcpu</span>&gt;</span> // 虚拟机vCPU个数</span><br><span class="line">  <span class="tag">&lt;<span class="name">os</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span> <span class="attr">arch</span>=<span class="string">'x86_64'</span> <span class="attr">machine</span>=<span class="string">'pc-i440fx-xenial'</span>&gt;</span>hvm<span class="tag">&lt;/<span class="name">type</span>&gt;</span> //arch指出系统架构类型，machine 则是机器类型，查看机器类型：qemu-system-x86_64 -M ?</span><br><span class="line">    <span class="tag">&lt;<span class="name">boot</span> <span class="attr">dev</span>=<span class="string">'hd'</span>/&gt;</span> // 启动介质，这里是安装好的系统因此选择hd，</span><br><span class="line">  <span class="tag">&lt;/<span class="name">os</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">features</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">acpi</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">apic</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hyperv</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">relaxed</span> <span class="attr">state</span>=<span class="string">'on'</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">vapic</span> <span class="attr">state</span>=<span class="string">'on'</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">spinlocks</span> <span class="attr">state</span>=<span class="string">'on'</span> <span class="attr">retries</span>=<span class="string">'8191'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hyperv</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">features</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cpu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">topology</span> <span class="attr">sockets</span>=<span class="string">'1'</span> <span class="attr">cores</span>=<span class="string">'2'</span> <span class="attr">threads</span>=<span class="string">'2'</span>/&gt;</span> //vCPU 逻辑核心</span><br><span class="line">  <span class="tag">&lt;/<span class="name">cpu</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">clock</span> <span class="attr">offset</span>=<span class="string">'localtime'</span>&gt;</span>   //虚拟机时钟</span><br><span class="line">    <span class="tag">&lt;<span class="name">timer</span> <span class="attr">name</span>=<span class="string">'rtc'</span> <span class="attr">tickpolicy</span>=<span class="string">'catchup'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">timer</span> <span class="attr">name</span>=<span class="string">'pit'</span> <span class="attr">tickpolicy</span>=<span class="string">'delay'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">timer</span> <span class="attr">name</span>=<span class="string">'hpet'</span> <span class="attr">present</span>=<span class="string">'no'</span>/&gt;</span>                                                                                                                                    </span><br><span class="line">    <span class="tag">&lt;<span class="name">timer</span> <span class="attr">name</span>=<span class="string">'hypervclock'</span> <span class="attr">present</span>=<span class="string">'yes'</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">clock</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">on_poweroff</span>&gt;</span>destroy<span class="tag">&lt;/<span class="name">on_poweroff</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">on_reboot</span>&gt;</span>restart<span class="tag">&lt;/<span class="name">on_reboot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">on_crash</span>&gt;</span>restart<span class="tag">&lt;/<span class="name">on_crash</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pm</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">suspend-to-mem</span> <span class="attr">enabled</span>=<span class="string">'no'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">suspend-to-disk</span> <span class="attr">enabled</span>=<span class="string">'no'</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pm</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">devices</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">emulator</span>&gt;</span>/usr/bin/kvm-spice<span class="tag">&lt;/<span class="name">emulator</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">disk</span> <span class="attr">type</span>=<span class="string">'file'</span> <span class="attr">device</span>=<span class="string">'disk'</span>&gt;</span>   //虚拟机虚拟磁盘</span><br><span class="line">      <span class="tag">&lt;<span class="name">driver</span> <span class="attr">name</span>=<span class="string">'qemu'</span> <span class="attr">type</span>=<span class="string">'qcow2'</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">source</span> <span class="attr">file</span>=<span class="string">'/opt/cfiec/6dnskvm/DELL_STORAGE  .qcow2'</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">target</span> <span class="attr">dev</span>=<span class="string">'vda'</span> <span class="attr">bus</span>=<span class="string">'virtio'</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">domain</span>=<span class="string">'0x0000'</span> <span class="attr">bus</span>=<span class="string">'0x00'</span> <span class="attr">slot</span>=<span class="string">'0x04'</span> <span class="attr">function</span>=<span class="string">'0x0'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">disk</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">controller</span> <span class="attr">type</span>=<span class="string">'usb'</span> <span class="attr">index</span>=<span class="string">'0'</span> <span class="attr">model</span>=<span class="string">'ich9-ehci1'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">domain</span>=<span class="string">'0x0000'</span> <span class="attr">bus</span>=<span class="string">'0x00'</span> <span class="attr">slot</span>=<span class="string">'0x05'</span> <span class="attr">function</span>=<span class="string">'0x7'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">controller</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">controller</span> <span class="attr">type</span>=<span class="string">'usb'</span> <span class="attr">index</span>=<span class="string">'0'</span> <span class="attr">model</span>=<span class="string">'ich9-uhci1'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">master</span> <span class="attr">startport</span>=<span class="string">'0'</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">domain</span>=<span class="string">'0x0000'</span> <span class="attr">bus</span>=<span class="string">'0x00'</span> <span class="attr">slot</span>=<span class="string">'0x05'</span> <span class="attr">function</span>=<span class="string">'0x0'</span> <span class="attr">multifunction</span>=<span class="string">'on'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">controller</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">controller</span> <span class="attr">type</span>=<span class="string">'usb'</span> <span class="attr">index</span>=<span class="string">'0'</span> <span class="attr">model</span>=<span class="string">'ich9-uhci2'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">master</span> <span class="attr">startport</span>=<span class="string">'2'</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">domain</span>=<span class="string">'0x0000'</span> <span class="attr">bus</span>=<span class="string">'0x00'</span> <span class="attr">slot</span>=<span class="string">'0x05'</span> <span class="attr">function</span>=<span class="string">'0x1'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">controller</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">controller</span> <span class="attr">type</span>=<span class="string">'usb'</span> <span class="attr">index</span>=<span class="string">'0'</span> <span class="attr">model</span>=<span class="string">'ich9-uhci3'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">master</span> <span class="attr">startport</span>=<span class="string">'4'</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">domain</span>=<span class="string">'0x0000'</span> <span class="attr">bus</span>=<span class="string">'0x00'</span> <span class="attr">slot</span>=<span class="string">'0x05'</span> <span class="attr">function</span>=<span class="string">'0x2'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">controller</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">controller</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">index</span>=<span class="string">'0'</span> <span class="attr">model</span>=<span class="string">'pci-root'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">controller</span> <span class="attr">type</span>=<span class="string">'fdc'</span> <span class="attr">index</span>=<span class="string">'0'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">controller</span> <span class="attr">type</span>=<span class="string">'ide'</span> <span class="attr">index</span>=<span class="string">'0'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">domain</span>=<span class="string">'0x0000'</span> <span class="attr">bus</span>=<span class="string">'0x00'</span> <span class="attr">slot</span>=<span class="string">'0x01'</span> <span class="attr">function</span>=<span class="string">'0x1'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">controller</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interface</span> <span class="attr">type</span>=<span class="string">'bridge'</span>&gt;</span>   // 网卡类型，桥接</span><br><span class="line">      <span class="tag">&lt;<span class="name">mac</span> <span class="attr">address</span>=<span class="string">'52:54:00:90:34:70'</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">source</span> <span class="attr">bridge</span>=<span class="string">'br0'</span>/&gt;</span> //桥接网桥名称</span><br><span class="line">      <span class="tag">&lt;<span class="name">model</span> <span class="attr">type</span>=<span class="string">'virtio'</span>/&gt;</span>    // 网卡驱动类型</span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">domain</span>=<span class="string">'0x0000'</span> <span class="attr">bus</span>=<span class="string">'0x00'</span> <span class="attr">slot</span>=<span class="string">'0x03'</span> <span class="attr">function</span>=<span class="string">'0x0'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">interface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">serial</span> <span class="attr">type</span>=<span class="string">'pty'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">target</span> <span class="attr">port</span>=<span class="string">'0'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">serial</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">console</span> <span class="attr">type</span>=<span class="string">'pty'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">target</span> <span class="attr">type</span>=<span class="string">'serial'</span> <span class="attr">port</span>=<span class="string">'0'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">console</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'tablet'</span> <span class="attr">bus</span>=<span class="string">'usb'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'mouse'</span> <span class="attr">bus</span>=<span class="string">'ps2'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'keyboard'</span> <span class="attr">bus</span>=<span class="string">'ps2'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">graphics</span> <span class="attr">type</span>=<span class="string">'vnc'</span> <span class="attr">port</span>=<span class="string">'5911'</span> <span class="attr">autoport</span>=<span class="string">'no'</span> <span class="attr">listen</span>=<span class="string">'::'</span> <span class="attr">passwd</span>=<span class="string">'v6dns'</span>&gt;</span> // VNC监听</span><br><span class="line">      <span class="tag">&lt;<span class="name">listen</span> <span class="attr">type</span>=<span class="string">'address'</span> <span class="attr">address</span>=<span class="string">'::'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">graphics</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">model</span> <span class="attr">type</span>=<span class="string">'vga'</span> <span class="attr">vram</span>=<span class="string">'16384'</span> <span class="attr">heads</span>=<span class="string">'1'</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">domain</span>=<span class="string">'0x0000'</span> <span class="attr">bus</span>=<span class="string">'0x00'</span> <span class="attr">slot</span>=<span class="string">'0x02'</span> <span class="attr">function</span>=<span class="string">'0x0'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">memballoon</span> <span class="attr">model</span>=<span class="string">'virtio'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">domain</span>=<span class="string">'0x0000'</span> <span class="attr">bus</span>=<span class="string">'0x00'</span> <span class="attr">slot</span>=<span class="string">'0x06'</span> <span class="attr">function</span>=<span class="string">'0x0'</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">memballoon</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">devices</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">domain</span>&gt;</span></span><br></pre></td></tr></table></figure><p>更多相关xml标签内容含义查看官方文档：<a href="https://libvirt.org/formatdomain.html" target="_blank" rel="noopener">传送门</a>，或者man手册<code>man virsh</code>。</p><h3 id="2-5-虚拟机的迁移"><a href="#2-5-虚拟机的迁移" class="headerlink" title="2.5 虚拟机的迁移"></a>2.5 虚拟机的迁移</h3><p>当需要迁移虚拟机时，可以直接将虚拟机磁盘<vm>.img和虚拟机配置文件<vm>.xml拷贝至其他服务器。</vm></vm></p><p>将<vm>.xml放置在<code>/etc/libvirt/qemu</code>目录下，虚拟磁盘放置在同样的路径或者修改<vm>.xml中磁盘路径，随后导入虚拟机</vm></vm></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh define &lt;VM&gt;.xml</span><br></pre></td></tr></table></figure><p>通过<code>virsh list</code>或<code>virsh list --all</code>查看虚拟机，若虚拟机未启动在通过<code>virsh start &lt;VM&gt;</code>启动虚拟机即可。</p><h3 id="2-6-虚拟机磁盘添加"><a href="#2-6-虚拟机磁盘添加" class="headerlink" title="2.6 虚拟机磁盘添加"></a>2.6 虚拟机磁盘添加</h3><p>当虚拟机磁盘不够用时，需要为虚拟机新增磁盘，首先创建磁盘[4]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# qemu-img create -f raw /opt/cfiec/6dnskvm/data/WASU_AF_DAT.img 2T</span><br></pre></td></tr></table></figure><p>添加磁盘方式有两种，临时添加和永久添加</p><p>1）临时添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# virsh attach-disk WASU_AF /opt/cfiec/6dnskvm/data/WASU_AF_DATA.qcow2 vdb --cache none</span><br></pre></td></tr></table></figure><p>这种方式添加后重启虚拟机就会丢失</p><p>2）永久添加</p><p>需要修改虚拟机的xml配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# virsh edit WASU_AF</span><br></pre></td></tr></table></figure><p>在<code>disk</code>字段后添加如下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#找到硬盘配置(原来的系统硬盘)</span><br><span class="line"><span class="tag">&lt;<span class="name">disk</span> <span class="attr">type</span>=<span class="string">'file'</span> <span class="attr">device</span>=<span class="string">'disk'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">driver</span> <span class="attr">name</span>=<span class="string">'qemu'</span> <span class="attr">type</span>=<span class="string">'raw'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">file</span>=<span class="string">'/disk/sdb1/c1.img'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">target</span> <span class="attr">dev</span>=<span class="string">'vda'</span> <span class="attr">bus</span>=<span class="string">'virtio'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">domain</span>=<span class="string">'0x0000'</span> <span class="attr">bus</span>=<span class="string">'0x00'</span> <span class="attr">slot</span>=<span class="string">'0x04'</span> <span class="attr">function</span>=<span class="string">'0x0'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">disk</span>&gt;</span></span><br><span class="line"></span><br><span class="line">#增加文件硬盘,vdb</span><br><span class="line"><span class="tag">&lt;<span class="name">disk</span> <span class="attr">type</span>=<span class="string">'file'</span> <span class="attr">device</span>=<span class="string">'disk'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">driver</span> <span class="attr">name</span>=<span class="string">'qemu'</span> <span class="attr">type</span>=<span class="string">'raw'</span> <span class="attr">cache</span>=<span class="string">'none'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">file</span>=<span class="string">'/disk/sdb6/c1d6.img'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">target</span> <span class="attr">dev</span>=<span class="string">'vdb'</span> <span class="attr">bus</span>=<span class="string">'virtio'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">'pci'</span> <span class="attr">domain</span>=<span class="string">'0x0000'</span> <span class="attr">bus</span>=<span class="string">'0x00'</span> <span class="attr">slot</span>=<span class="string">'0x06'</span> <span class="attr">function</span>=<span class="string">'0x0'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">disk</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：两个磁盘的slot数值不能重复。</p><p>添加后即可在虚拟机里查看磁盘，进入到<code>设备管理器</code>—&gt;<code>磁盘管理</code>，可以看到磁盘，本次分配的磁盘为2T，容量较大，在选择磁盘引导时选用<code>GPT</code>引导，随后选中磁盘进行格式化</p><p><img src="https://i.imgur.com/X2EIeM6.jpg" alt="windows server 2008 安装9"></p><p>格式化之后磁盘就可以直接使用了</p><p><img src="https://i.imgur.com/UggHcoM.png" alt="windows server 2008 安装10"></p><h2 id="3-windows-server-2008-设置"><a href="#3-windows-server-2008-设置" class="headerlink" title="3 windows server 2008 设置"></a>3 windows server 2008 设置</h2><h3 id="3-1-在桌面显示我的电脑"><a href="#3-1-在桌面显示我的电脑" class="headerlink" title="3.1 在桌面显示我的电脑"></a>3.1 在桌面显示<code>我的电脑</code></h3><p>点击左下角的<code>开始</code>，在搜索框中输入<code>tubiao</code>，选择<code>显示或隐藏桌面上的通用图标</code>，选择想要添加的图标即可</p><p><img src="https://i.imgur.com/UcFBEV9.png" alt="windows server 2008 安装7"></p><h3 id="3-2-开启远程桌面"><a href="#3-2-开启远程桌面" class="headerlink" title="3.2 开启远程桌面"></a>3.2 开启远程桌面</h3><p>点击左下角的<code>开始</code>，选择右边的<code>控制面板</code>，选择<code>系统和安全</code>，点击<code>系统</code>中的<code>允许远程访问</code>，选择<code>允许允许....</code>点击确定，随后点击<code>应用</code>即可通过windows的远程桌面来访问。</p><p><img src="https://i.imgur.com/QsDs8gP.png" alt="windows 2008 安装8"></p><p>【参考资料】</p><p>1)<a href="https://tommy.net.cn/2017/01/06/install-windows-under-ubuntu-and-kvm/" target="_blank" rel="noopener">kvm安装虚拟机</a></p><p>2)<a href="https://yq.aliyun.com/articles/43034" target="_blank" rel="noopener">KVM安装windows server 2008</a></p><p>3)<a href="https://blog.csdn.net/nvd11/article/details/79323412" target="_blank" rel="noopener">KVM安装windows虚拟</a></p><p>4)<a href="https://blog.csdn.net/chengxuyuanyonghu/article/details/42144079" target="_blank" rel="noopener">KVM虚拟机磁盘扩容</a></p>]]></content>
    
    <summary type="html">
    
      使用KVM在ubuntu上安装windows虚拟机
    
    </summary>
    
      <category term="ubuntu" scheme="https://louielong.github.io/categories/ubuntu/"/>
    
    
      <category term="KVM" scheme="https://louielong.github.io/source/tags/KVM/"/>
    
      <category term="Ubuntu" scheme="https://louielong.github.io/source/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>KEA DHCP安装配置及使用</title>
    <link href="https://louielong.github.io/keadhcp-usage.html"/>
    <id>https://louielong.github.io/keadhcp-usage.html</id>
    <published>2018-04-07T04:26:15.000Z</published>
    <updated>2018-09-12T09:51:08.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p><img src="https://www.isc.org/wp-content/uploads/2017/04/Kea-logo-300x250.png" alt="KEAD DHCP LOGO"></p><p>KEA 是由Internet Systems Consortium开发的开源DHCPv4 / DHCPv6服务器。 Kea是一款高性能，可扩展的DHCP服务器引擎，可以轻松修改和扩展钩子库。KEA具有以下特性[1]：</p><ul><li>开源，使用MPL 2.0许可证</li><li>直接地址分配支持v4和v6，或DHCPv6 前缀授权</li><li>动态地址分配和主机地址保留</li><li>更新DNS记录作为续租或过期的动态DNS</li><li>MAC地址追踪，包括 v4和v6</li><li>支持自定义扩展钩子库</li></ul><h2 id="2-安装KEA"><a href="#2-安装KEA" class="headerlink" title="2 安装KEA"></a>2 安装KEA</h2><p>KEA的安装可以通过apt的方式直接安装，但是如果需要数据库支持或者需要使用钩子扩展则需要自行编译，本文以自编译的方式介绍如何安装配置KEA。</p><p>1) 首先下载源码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# wget https://ftp.isc.org/isc/kea/1.3.0/kea-1.3.0.tar.gz</span><br></pre></td></tr></table></figure><p>2) 安装必要的编译软件包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# apt install -y gcc build-essential make libmysql++-dev openssl libssl-dev libboost-system-dev liblog4cplus-dev liblog4cplus-1.1-9 libmysqlclient-dev</span><br></pre></td></tr></table></figure><p>3) 配置编译</p><p>指明需要使用mysql，若需要修改默认安装路径需要单独指定<code>--prefix</code>和<code>--exec-prefix</code>两个参数，前者是编译生成的二进制文件拷贝路径，后者是软件运行时依赖库的查找路径，可以通过<code>./configure -h</code>查看。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# tar xf kea-1.3.0.tar.gz</span><br><span class="line">root@ubuntu:~# cd kea-1.3.0</span><br><span class="line">root@ubuntu:~/kea-1.3.0# ./configure  --with-dhcp-mysql=/usr/bin/mysql_config</span><br></pre></td></tr></table></figure><p>4) 编译</p><p>配置完编译依旧是编译二连<code>make</code>和<code>make install</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# make -j8</span><br><span class="line">root@ubuntu:~# make install</span><br></pre></td></tr></table></figure><p>编译完成后默认安装到<code>/usr/local/kea</code>目录下，相应的配置文件放置在<code>/usr/local/kea/etc/kea</code>路径下。</p><h2 id="3-配置KEA"><a href="#3-配置KEA" class="headerlink" title="3 配置KEA"></a>3 配置KEA</h2><p>kea的配置文件是json格式，配置完kea可以先使用<a href="https://www.bejson.com/jsoneditoronline/" target="_blank" rel="noopener">json在线解析</a>查看配置是否正确，需要注意的是必须去除配置中的注释才能正确解析。详细的kea配置需要查看官网的介绍[2]，同时配置文件<code>kea-dhcp6.conf.sample</code>示例中也有详细的解释。</p><p>如下所示为配置文件参数的含义[3]：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"Dhcp6"</span>: &#123;</span><br><span class="line">    // 向服务器租用地址时间，以秒为单位</span><br><span class="line">    "valid-lifetime": 4000,</span><br><span class="line">    // 可选，续借时间，如果没有指定将根据RFC 2131进行设置</span><br><span class="line">    "renew-timer": 1000,</span><br><span class="line">    // 可选，重新绑定时间，如果没有指定这将根据RFC 2131进行设置</span><br><span class="line">    "rebind-timer": 2000,</span><br><span class="line"></span><br><span class="line">    "interfaces-config": &#123;</span><br><span class="line">        // 1. 指定服务器要监听哪张网卡的DHCP消息，可以指定多张网卡。</span><br><span class="line">        // 2.允许使用*，如："interfaces": ["*"]，表示监听所有网卡</span><br><span class="line">        "interfaces": ["eth1/2001:db8:1::2"],</span><br><span class="line">        // 默认raw，表示处理所有报文</span><br><span class="line">        // udp：处理udp报文</span><br><span class="line">        "dhcp-socket-type": "udp"，</span><br><span class="line">        // 只有dhcp-socket-type为udp才生效</span><br><span class="line">        // 默认是same-as-inbound：从哪里来滚哪里去</span><br><span class="line">        // use-routing：从哪里来，滚哪里去，得问下kernel的路由表(routing table)       "outbound-interface": "use-routing"</span><br><span class="line">    &#125;,</span><br><span class="line">    // 控制平面接收</span><br><span class="line">    "control-socket": &#123;</span><br><span class="line">        "socket-type": "unix",</span><br><span class="line">        "socket-name": "/tmp/kea-dhcp6-ctrl.sock"</span><br><span class="line">    &#125;,</span><br><span class="line">    // 租期数据使用库类型指定，类型不同，对应的配置也有所不同，这里以MySQL为例</span><br><span class="line">    "lease-database": &#123;</span><br><span class="line">        // 支持memfile", "mysql", "postgresql"， "cql"四个选项</span><br><span class="line">        "type": "mysql",</span><br><span class="line">        // 数据库所在的主机ip</span><br><span class="line">        "host": "localhost",</span><br><span class="line">        // 数据库端口号</span><br><span class="line">        "port": 3306,</span><br><span class="line">        // 数据库名称</span><br><span class="line">        "name": "keadhcp",</span><br><span class="line">        // 数据库用户名</span><br><span class="line">        "user": "root",</span><br><span class="line">        // 数据库密码</span><br><span class="line">        "password": "root",</span><br><span class="line">        // 当type为memfile这里会涉及到一个比较重要的配置，这里不说明，详情请看(http://kea.isc.org/wiki/LFCDesign)</span><br><span class="line">        // 1. 指定服务器将执行租约文件清理（LFC）的时间间隔（以秒为单位</span><br><span class="line">        // 2. 默认3600，0的时候表示禁用lease file cleanup(LFC)</span><br><span class="line">        // "lfc-interval": 1800</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // 1.下面的配置可选。主机预定数据使用的数据库类型。和租期配置类同，不在赘述</span><br><span class="line">    // 2. 当然你也可以不使用数据库，在数据量不大的情况下推荐使用配置文件。随着数据量的增大可以改用数据库</span><br><span class="line">    // 3. 这个配置允许数据库和配置文件共存使用</span><br><span class="line">    // 4. 同时使用时，先检查配置文件，在检查数据库的数据</span><br><span class="line">    // "hosts-database": &#123;</span><br><span class="line">    //     "type": "mysql",</span><br><span class="line">    //     "host": "localhost",</span><br><span class="line">    //     "port": 3306,</span><br><span class="line">    //     "name": "kea",</span><br><span class="line">    //     "user": "kea",</span><br><span class="line">    //     "password": "kea"</span><br><span class="line">    // &#125;,</span><br><span class="line"></span><br><span class="line">    "subnet6": [&#123;</span><br><span class="line">        // 子网标识符，没有指定或者为0，则自动分配</span><br><span class="line">        // 建议手动分配，如果有多个子网，某个子网被删除，id可能被自动重新分配，导致租期数据混乱</span><br><span class="line">        "id":"1024"</span><br><span class="line">        // 网段 这里需要注意下网段必须和服务器所在网段一样，不然接收不到客户的请求</span><br><span class="line">        "subnet": "2001:db8:1::/64",</span><br><span class="line">        // 可分配地址范围</span><br><span class="line">        "pools": [&#123;"pool": "2001:db8:1::1000 - 2001:db8:1::2000"&#125;]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;，</span><br><span class="line">// 若不配置logging字段则日志记录默认输出在终端</span><br><span class="line">"Logging":</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"loggers"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"kea-dhcp6"</span>,</span><br><span class="line">        <span class="attr">"output_options"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                // 指定日志输出路径</span><br><span class="line">                "output": "/var/log/dhcp/dhcp6.log",</span><br><span class="line">                // 当为true时每次更新日志文件都会同步到磁盘</span><br><span class="line">                "flush": true,</span><br><span class="line">                // 单个日志文件最大容量</span><br><span class="line">                "maxsize": 1048576,</span><br><span class="line">                // 同时存储日志文件最大个数</span><br><span class="line">                "maxver": 8</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        // 日志输出等级</span><br><span class="line">        "severity": "INFO",</span><br><span class="line">        // 当日志输出等级为debug时，可选择debug输出等级0-100,0最低</span><br><span class="line">        "debuglevel": 0</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完成后重启kea服务即可，重启哪些服务可以在<code>/usr/local/kea/etc/kea/keactrl.conf</code>文件指定</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/usr/local/kea/etc/kea$ cat keactrl.conf</span><br><span class="line"><span class="meta">#</span> This is a configuration file for keactrl script which controls</span><br><span class="line"><span class="meta">#</span> the startup, shutdown, reconfiguration and gathering the status</span><br><span class="line"><span class="meta">#</span> of the Kea's processes.</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> prefix holds the location where the Kea is installed.</span><br><span class="line">prefix=/usr/local/kea</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Location of Kea configuration files.</span><br><span class="line">kea_dhcp4_config_file=$&#123;prefix&#125;/etc/kea/kea-dhcp4.conf</span><br><span class="line">kea_dhcp6_config_file=$&#123;prefix&#125;/etc/kea/kea-dhcp6.conf</span><br><span class="line">kea_dhcp_ddns_config_file=$&#123;prefix&#125;/etc/kea/kea-dhcp-ddns.conf</span><br><span class="line">kea_ctrl_agent_config_file=$&#123;prefix&#125;/etc/kea/kea-ctrl-agent.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Location of Kea binaries.</span><br><span class="line">exec_prefix=/usr/local/kea</span><br><span class="line">dhcp4_srv=$&#123;exec_prefix&#125;/sbin/kea-dhcp4</span><br><span class="line">dhcp6_srv=$&#123;exec_prefix&#125;/sbin/kea-dhcp6</span><br><span class="line">dhcp_ddns_srv=$&#123;exec_prefix&#125;/sbin/kea-dhcp-ddns</span><br><span class="line">ctrl_agent_srv=$&#123;exec_prefix&#125;/sbin/kea-ctrl-agent</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Start DHCPv4 server?</span><br><span class="line">dhcp4=yes</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Start DHCPv6 server?</span><br><span class="line">dhcp6=yes</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Start DHCP DDNS server?</span><br><span class="line">dhcp_ddns=no</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Start Control Agent?</span><br><span class="line">ctrl_agent=yes</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Be verbose?</span><br><span class="line">kea_verbose=no</span><br></pre></td></tr></table></figure><p>重启DHCP服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# keactrl start</span><br></pre></td></tr></table></figure><p>首次运行时可能出现kea库找不到的错误，执行<code>ldconfig</code>命令即可。</p><p>若需要指定重启v6或v4则需要添加相应参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# keactrl start -s dhcpv6</span><br></pre></td></tr></table></figure><p>关于如何配置KEA的钩子模式可以查看：<a href="https://github.com/zorun/kea-hook-runscript" target="_blank" rel="noopener">传送门</a></p><h3 id="3-1-性能测试"><a href="#3-1-性能测试" class="headerlink" title="3.1 性能测试"></a>3.1 性能测试</h3><p>使用kea自带的perfdhcp性能测试工具，可以进行dhcp客户端模拟的测试</p><ol><li>查看每秒能处理多少个discover(v4)或者solicit(v6)消息 ；</li><li>查看每秒能处理处理4-way packet exchanges(v4 - DORA, v6 - SARR)(即一个完成的请求动态ip的过程)，即LPS（Lease per Second，每秒分配租约数）。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# perfdhcp -l eth1 -6 -b mac=00:01:02:03:04:05 -R 999999 -r 100000  -p 30</span><br></pre></td></tr></table></figure><p>使用上述命令请求v6地址，部分参数解释如下，官方文档可以查看<a href="https://www.systutorials.com/docs/linux/man/8-perfdhcp/" target="_blank" rel="noopener">perfdhcp man手册</a></p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-l</td><td>指定申请IP接口</td></tr><tr><td>-4/-6</td><td>指定申请的IP类型</td></tr><tr><td>-R</td><td>模拟客户端数量，实际指的是请求DHCP的用户池，perfdhcp会从该池内挑选用户，默认为1</td></tr><tr><td>-r</td><td>期望的DHCP请求速率，即 LPS速率</td></tr><tr><td>-p</td><td>测试持续时间</td></tr><tr><td>-b</td><td>模拟用户mac地址起始，也可以使用uuid替代</td></tr></tbody></table><p>【Note】</p><p>1）理论分配的用户数量为期望速率X持续时间，超过这个数目的请求实际为租约的更新操作。</p><p>2）官方给出KEA测试结果：<a href="https://kea.isc.org/wiki/SharedLeaseStorageStats" target="_blank" rel="noopener">传送门</a></p><p>摘录如下所示</p><p>V4 Performance with and without insert trigger:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Memfile with persistence set to false (as a baseline):</span><br><span class="line">    Running: perfdhcp -4 -r 10000 -R 9999999 -p 20 178.0.0.1</span><br><span class="line">    Rate: 6689.37 4-way exchanges/second, expected rate: 10000</span><br><span class="line"></span><br><span class="line">MySQL without trigger installed:</span><br><span class="line">    Running: perfdhcp -4 -r 200 -R 9999999 -p 20 178.0.0.1</span><br><span class="line">    Rate: 189.079 4-way exchanges/second, expected rate: 200</span><br><span class="line"></span><br><span class="line">MySQL with trigger installed:</span><br><span class="line">    Running: perfdhcp -4 -r 200 -R 9999999 -p 20 178.0.0.1</span><br><span class="line">    Rate: 188.752 4-way exchanges/second, expected rate: 200</span><br><span class="line"></span><br><span class="line">Postgresql without trigger installed:</span><br><span class="line">    Running: perfdhcp -4 -r 600 -R 9999999 -p 20 178.0.0.1</span><br><span class="line">    Rate: 551.868 4-way exchanges/second, expected rate: 600</span><br><span class="line"></span><br><span class="line">Postgresql with trigger installed:</span><br><span class="line">    Running: perfdhcp -4 -r 600 -R 9999999 -p 20 178.0.0.1</span><br><span class="line">    Rate: 556.182 4-way exchanges/second, expected rate: 600</span><br></pre></td></tr></table></figure><p>V6 Performance with and without insert triggers:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">MEMFILE persistence = false:</span><br><span class="line">    Running: perfdhcp -6 -r 10000 -R 9999999 -p 20 -l enp0s10</span><br><span class="line">    Rate: 6890.85 4-way exchanges/second, expected rate: 10000</span><br><span class="line"></span><br><span class="line">MySQL without trigger installed</span><br><span class="line">    Running: perfdhcp -6 -r 200 -R 9999999 -p 20 -l enp0s10</span><br><span class="line">    Rate: 188.239 4-way exchanges/second, expected rate: 200</span><br><span class="line"></span><br><span class="line">MySQL with trigger installed</span><br><span class="line">    Running: perfdhcp -6 -r 200 -R 9999999 -p 20 -l enp0s10</span><br><span class="line">    Rate: 188.813 4-way exchanges/second, expected rate: 200</span><br><span class="line"></span><br><span class="line">Postgresql without trigger installed</span><br><span class="line">    Running: perfdhcp -6 -r 400 -R 9999999 -p 20 -l enp0s10</span><br><span class="line">    Rate: 361.503 4-way exchanges/second, expected rate: 400</span><br><span class="line"></span><br><span class="line">Postgresql with trigger installed</span><br><span class="line">    Running: perfdhcp -6 -r 400 -R 9999999 -p 20 -l enp0s10</span><br><span class="line">    Rate: 361.421 4-way exchanges/second, expected rate: 400</span><br></pre></td></tr></table></figure><p>3）另有其他讨论称kea在memryfile 内存模式下能够达到8000-10000的性能，基本上数据库模式下LPS在1000左右，<a href="http://www.data.proidea.org.pl/plnog/10edycja/materialy/prezentacje/The_newest_mechanisms_in_DHCP_Tomasz_Mrugalski.pdf" target="_blank" rel="noopener">传送门</a>。mysql模式下调优参见邮件讨论<a href="http://www.data.proidea.org.pl/plnog/10edycja/materialy/prezentacje/The_newest_mechanisms_in_DHCP_Tomasz_Mrugalski.pdf" target="_blank" rel="noopener">mysql 调优</a></p><h2 id="4-其他"><a href="#4-其他" class="headerlink" title="4 其他"></a>4 其他</h2><h3 id="4-1-KEA-高可用"><a href="#4-1-KEA-高可用" class="headerlink" title="4.1 KEA 高可用"></a>4.1 KEA 高可用</h3><p>目前KEA 1.3版本尚不支持HA高可用模式，官方介绍将在<a href="https://www.isc.org/blogs/planning-for-kea-1-4/" target="_blank" rel="noopener">1.4版本</a>支持，当前状态下若想使用HA可以通过数据库后端HA的方式来实现，也可以通过keepalived来实现，见<a href="https://arch-ed.dk/kea-1-3-0-site-failover" target="_blank" rel="noopener">传送门</a>，结合上一篇的keepalived可以很好的实现，原文中需要三台服务器，笔者在实验中使用了两台服务器也可以测试通过，由于keepalived不支持监听UDP端口，因此主要的实现方式是添加keepalived健康检查脚本定时检查kea进程。</p><h3 id="4-2-KEA配合phpIPAM"><a href="#4-2-KEA配合phpIPAM" class="headerlink" title="4.2 KEA配合phpIPAM"></a>4.2 KEA配合phpIPAM</h3><p>当前phpIPAM并没有直接的插件配合KEA，因此需要自己实现，实现方式有两种：1)直接采用数据库同步的方式，将kea的数据导入phpIPAM中；2）采用phpIPAM的restful接口，同时phpIPAM也给出了API客户端[4]。遇到的困难是KEA的子网标记ID和phIPAM中子网号ID同步转换出错进而导致hosts同步错误，尤其是当KEA的子网号在重启会重新分配(未指定子网号时)或修改子网但未更新子网号时造成的租期数据混乱。</p><p>【参考链接】</p><p>1)<a href="https://www.isc.org/kea/" target="_blank" rel="noopener">KEA官网</a></p><p>2)<a href="https://ftp.isc.org/isc/kea/1.3.0/doc/kea-guide.html" target="_blank" rel="noopener">KEA官方文档</a></p><p>3)<a href="https://blog.csdn.net/z475382220/article/details/78844227" target="_blank" rel="noopener">KEA配置介绍</a></p><p>4)<a href="https://github.com/phpipam/phpipam-api-clients" target="_blank" rel="noopener">phpIPAM API客户端</a></p>]]></content>
    
    <summary type="html">
    
      KEA DHCP的安装配置及使用
    
    </summary>
    
      <category term="ubuntu" scheme="https://louielong.github.io/categories/ubuntu/"/>
    
    
      <category term="ubuntu" scheme="https://louielong.github.io/source/tags/ubuntu/"/>
    
      <category term="KEA" scheme="https://louielong.github.io/source/tags/KEA/"/>
    
  </entry>
  
  <entry>
    <title>IP地址管理(IPAM)</title>
    <link href="https://louielong.github.io/IPAM_install.html"/>
    <id>https://louielong.github.io/IPAM_install.html</id>
    <published>2018-03-30T10:23:56.000Z</published>
    <updated>2018-09-12T09:51:08.841Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>IPAM：IP Address Management  ，及IP地址管理，用于发现、监视、审核和管理企业网络上使用的 IP 地址空间。目前开源的IPAM有许多，根据维基百科<a href="https://en.wikipedia.org/wiki/IP_address_management" target="_blank" rel="noopener">IPAM</a>介绍有十多种IPAM类软件，在研究了一下活跃的项目后发现phpIPAM相当的不错，尝试把玩了一下。</p><p><img src="https://phpipam.net/css/images/old/phpipam_logo_small.png" alt="phpipam"></p><h2 id="2-快速搭建"><a href="#2-快速搭建" class="headerlink" title="2 快速搭建"></a>2 快速搭建</h2><p>phpIPAM的官方有一个demo可以访问：<a href="https://demo.phpipam.net/login/，登录的用户名和密码为：Admin" target="_blank" rel="noopener">https://demo.phpipam.net/login/，登录的用户名和密码为：Admin</a> / ipamadmin，在首页也可以查看。</p><p>查找了下发现docker hub中有相关的镜像[1]，直接从docker上拉取一个镜像作为快速搭建体验。</p><h3 id="2-1-拉取相关镜像"><a href="#2-1-拉取相关镜像" class="headerlink" title="2.1 拉取相关镜像"></a>2.1 拉取相关镜像</h3><p>安装phpIPAM需要mysql数据库作为存储，首先获取mysql数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# docker pull mysql:5.6</span><br></pre></td></tr></table></figure><p>启动mysql数据库，将<code>my-secret-pw</code>换成自己的数据库密码，同时需要映射数据库存储路径<code>/my_dir/phpipam</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# docker run --name phpipam-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -v /my_dir/phpipam:/var/lib/mysql -d mysql:5.6</span><br></pre></td></tr></table></figure><p>获取phpIPAM的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# docker pull pierrecdn/phpipam</span><br></pre></td></tr></table></figure><p>启动phpIPAM镜像，需要将docker镜像内的80端口映射到本机的80端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# docker run -ti -d -p 80:80 --name ipam --link phpipam-mysql:mysql pierrecdn/phpipam</span><br></pre></td></tr></table></figure><h3 id="2-2-phpIPAM配置"><a href="#2-2-phpIPAM配置" class="headerlink" title="2.2 phpIPAM配置"></a>2.2 phpIPAM配置</h3><p>随后登录http://&lt;HOST_IP&gt;:80即可以访问phpIPAM的页面，首次登录需要安装数据库，主要是导入phpIPAM的数据库表</p><p>1)自动导入数据库</p><p>点击“Automatic database installtion”</p><p><img src="https://cloud.githubusercontent.com/assets/4225738/8746785/01758b9e-2c8d-11e5-8643-7f5862c75efe.png" alt="phpIPAM自动导入数据库"></p><p>2)输入数据库密码</p><p>输入2.1节中设置的数据库密码，随后点击“Install phpipam database”</p><p><img src="https://cloud.githubusercontent.com/assets/4225738/8746789/0ad367e2-2c8d-11e5-80bb-f5093801e139.png" alt="输入数据库密码"></p><p>3)重新设置访问密码</p><p>输入新密码后点击”Save setting”，重新登录即可进入页面</p><p><img src="https://cloud.githubusercontent.com/assets/4225738/8746790/0c434bf6-2c8d-11e5-9ae7-b7d1021b7aa0.png" alt="重置访问密码"></p><p>一个phpIPAM的环境就快速搭建起来了，可以随意操作玩耍了。</p><h2 id="3-完整搭建"><a href="#3-完整搭建" class="headerlink" title="3 完整搭建"></a>3 完整搭建</h2><p>如果想完整的搭建一个phpIPAM在本地同时做一些自定义的修改就需要下载源码并搭建，过程也不复杂官方文档也有详细描述[2]。</p><p>phpIPAM当前仅支持IPv4的主机扫描，并不支持IPv6的主机扫描，对于该项需求在github上已经有人提出了但是当前仍没有解决[3]。</p><p>接下来以ubuntu16.04为例讲解如何搭建phpIPAM环境。</p><h3 id="3-1-安装必要软件包"><a href="#3-1-安装必要软件包" class="headerlink" title="3.1 安装必要软件包"></a>3.1 安装必要软件包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# apt-get install apache2 mariadb-server php php-pear php7.0-gmp php7.0-mysql php7.0-mbstring php7.0-gd php7.0-mcrypt php7.0-curl git cron</span><br></pre></td></tr></table></figure><p>安装过程需要配置mysql root用户密码，安装完成后拉取phpIPAM的代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cd /var/www/html/</span><br><span class="line">root@ubuntu:/var/www/html# git clone https://github.com/phpipam/phpipam.git .</span><br><span class="line">root@ubuntu:/var/www/html# git checkout 1.3.1</span><br></pre></td></tr></table></figure><h3 id="3-2-配置相应软件"><a href="#3-2-配置相应软件" class="headerlink" title="3.2 配置相应软件"></a>3.2 配置相应软件</h3><p>1) 配置mysql数据库</p><p>启动mysql(MariaDB) 数据库，并配置mysql的root账户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# /etc/init.d/mysql restart</span><br><span class="line">root@ubuntu:~# mysql_secure_installation</span><br><span class="line">NOTE: RUNNING ALL PARTS OF THIS SCRIPT ISRECOMMENDED FOR ALL MariaDB</span><br><span class="line"></span><br><span class="line">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class="line">In order to log into MariaDB to secure it,we'll need the current</span><br><span class="line"></span><br><span class="line">password for the root user.  If you've just installed MariaDB, and</span><br><span class="line"></span><br><span class="line">you haven't set the root password yet, thepassword will be blank,</span><br><span class="line"></span><br><span class="line">so you should just press enter here.</span><br><span class="line">Enter current password for root (enter fornone): </span><br><span class="line"></span><br><span class="line">OK, successfully used password, movingon...</span><br><span class="line"></span><br><span class="line">Setting the root password ensures thatnobody can log into the MariaDB</span><br><span class="line"></span><br><span class="line">root user without the proper authorisation.</span><br><span class="line">Set root password? [Y/n] y</span><br><span class="line"></span><br><span class="line">New password: </span><br><span class="line"></span><br><span class="line">Re-enter new password: </span><br><span class="line"></span><br><span class="line">Password updated successfully!</span><br><span class="line"></span><br><span class="line">Reloading privilege tables..</span><br><span class="line"></span><br><span class="line"> ...Success!</span><br><span class="line">By default, a MariaDB installation has ananonymous user, allowing anyone</span><br><span class="line"></span><br><span class="line">to log into MariaDB without having to havea user account created for</span><br><span class="line"></span><br><span class="line">them. This is intended only for testing, and to make the installation</span><br><span class="line"></span><br><span class="line">go a bit smoother.  You should remove them before moving into a</span><br><span class="line"></span><br><span class="line">production environment.</span><br><span class="line">Remove anonymous users? [Y/n] y</span><br><span class="line"></span><br><span class="line"> ...Success!</span><br><span class="line">Normally, root should only be allowed toconnect from 'localhost'.  This</span><br><span class="line"></span><br><span class="line">ensures that someone cannot guess at theroot password from the network.</span><br><span class="line">Disallow root login remotely? [Y/n] n</span><br><span class="line"></span><br><span class="line"> ...skipping.</span><br><span class="line">By default, MariaDB comes with a databasenamed 'test' that anyone can</span><br><span class="line"></span><br><span class="line">access. This is also intended only for testing, and should be removed</span><br><span class="line"></span><br><span class="line">before moving into a productionenvironment.</span><br><span class="line"></span><br><span class="line">Remove test database and access to it?[Y/n] y</span><br><span class="line"></span><br><span class="line"> -Dropping test database...</span><br><span class="line"></span><br><span class="line"> ...Success!</span><br><span class="line"></span><br><span class="line"> -Removing privileges on test database...</span><br><span class="line"></span><br><span class="line"> ...Success!</span><br><span class="line"></span><br><span class="line">Reloading the privilege tables will ensurethat all changes made so far</span><br><span class="line"></span><br><span class="line">will take effect immediately.</span><br><span class="line"></span><br><span class="line">Reload privilege tables now? [Y/n] y</span><br><span class="line"></span><br><span class="line"> ...Success!</span><br><span class="line"></span><br><span class="line">Cleaning up...</span><br><span class="line"></span><br><span class="line">All done! If you've completed all of the above steps, your MariaDB</span><br><span class="line"></span><br><span class="line">installation should now be secure.</span><br><span class="line"></span><br><span class="line">Thanks for using MariaDB!</span><br></pre></td></tr></table></figure><p>2) 配置apache代理</p><p>配置<code>/etc/apache2/apache2.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">Options FollowSymLinks</span><br><span class="line">AllowOverride all</span><br><span class="line">Order allow,deny</span><br><span class="line">Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>设置apache时区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# grep timezone /etc/php/7.0/apache2/php.ini</span><br><span class="line">; Defines the default timezone used by the date functions</span><br><span class="line">; http://php.net/date.timezone</span><br><span class="line">date.timezone = Asia/Shanghai</span><br></pre></td></tr></table></figure><p>使能apache重写</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# a2enmod rewrite</span><br></pre></td></tr></table></figure><p>重启apapche2服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# /etc/init.d/apache2 start</span><br></pre></td></tr></table></figure><p>3) 配置phpIPAM</p><p>首先拷贝配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/var/www/html# cp config.dist.php config.php</span><br></pre></td></tr></table></figure><p>修改配置文件的数据库信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$db[<span class="string">'host'</span>] = <span class="string">'localhost'</span>;</span><br><span class="line">$db[<span class="string">'user'</span>] = <span class="string">"root"</span>;</span><br><span class="line">$db[<span class="string">'pass'</span>] = <span class="string">"r00tme"</span>;</span><br><span class="line">$db[<span class="string">'name'</span>] = <span class="string">'phpipam'</span>;</span><br><span class="line">$db[<span class="string">'port'</span>] = <span class="number">3306</span>;</span><br></pre></td></tr></table></figure><p>配置ipam的v4主机定时检查</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> update host statuses exery 15minutes"    </span><br><span class="line">*/15 * * * * /usr/bin/php/opt/cfiec/6dnsnetm/ipam/functions/scripts/pingCheck.php";</span><br><span class="line">*/15 * * * * /usr/bin/php/opt/cfiec/6dnsnetm/ipam/functions/scripts/discoveryCheck.php";</span><br></pre></td></tr></table></figure><p>配置ipam数据库每天备份和自动删除10天以上的数据备份</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@daily /usr/bin/mysqldump -uroot -pr00tmephpipam &gt; /opt/cfiec/6dnsnetm/ipam/db/bkp/phpipam_bkp_$(date+"%y%m%d").db";</span><br><span class="line">@daily /usr/bin/find/opt/cfiec/6dnsnetm/ipam/db/bkp/ -ctime +10 -exec rm &#123;&#125; \;</span><br></pre></td></tr></table></figure><p>可以通过crontab -l 查看配置是否正确</p><p>重启cron服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/var/www/html# /etc/init.d/cron restart</span><br></pre></td></tr></table></figure><p>随后打开网页访问相应的IP地址即可进入到安装界面。</p><p>【参考链接】</p><p>1)<a href="https://hub.docker.com/r/clinta/phpipam/" target="_blank" rel="noopener">phpIPAM docker 主页</a></p><p>2)<a href="https://phpipam.net/documents/installation/" target="_blank" rel="noopener">phpIPAM官网</a></p><p>3)<a href="https://github.com/phpipam/phpipam/issues/777" target="_blank" rel="noopener">phpIPAM IPv6主机扫描</a></p>]]></content>
    
    <summary type="html">
    
      IP地址管理环境搭建
    
    </summary>
    
      <category term="ubuntu" scheme="https://louielong.github.io/categories/ubuntu/"/>
    
    
      <category term="IPAM" scheme="https://louielong.github.io/source/tags/IPAM/"/>
    
      <category term="ubuntu" scheme="https://louielong.github.io/source/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>MAAS+ubuntu私有源环境搭建</title>
    <link href="https://louielong.github.io/MAAS+ubuntu-local-repo.html"/>
    <id>https://louielong.github.io/MAAS+ubuntu-local-repo.html</id>
    <published>2018-03-27T05:56:18.000Z</published>
    <updated>2018-09-12T09:51:08.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近做一个集成项目需要部署多台裸机服务器，考虑到服务器众多采用PXE的方式给服务器安装系统是最便捷的同时考虑到网络速度的因素，建立一个ubuntu私有源镜像服务器安装软件包无疑会更快更便捷。</p><p>本文将分两部分讲解环境搭建：1)MAAS环境搭建，2)ubuntu私有源环境搭建。首先是MAAS环境的搭建。</p><h2 id="1-MAAS环境搭建"><a href="#1-MAAS环境搭建" class="headerlink" title="1 MAAS环境搭建"></a>1 MAAS环境搭建</h2><h3 id="1-1-MAAS介绍"><a href="#1-1-MAAS介绍" class="headerlink" title="1.1 MAAS介绍"></a>1.1 MAAS介绍</h3><p><img src="https://assets.ubuntu.com/v1/33b96a7f-maas-logo.svg" alt=""></p><p>MAAS[1]是ubuntu社区开发的开源裸机部署工具，能够从云端下载镜像引导本地主机从PXE启动并安装指定的系统，搭配诸如IPAM等同时兼具裸机状态管理功能。</p><h3 id="1-2-MAAS安装"><a href="#1-2-MAAS安装" class="headerlink" title="1.2 MAAS安装"></a>1.2 MAAS安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# apt install maas -y</span><br></pre></td></tr></table></figure><h3 id="1-3-创建MAAS用户"><a href="#1-3-创建MAAS用户" class="headerlink" title="1.3 创建MAAS用户"></a>1.3 创建MAAS用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# maas createadmin --username=admin --email=MYEMAIL@EXAMPLE.COM</span><br></pre></td></tr></table></figure><p>随后登录MAAS web页面 <code>http://&lt;your.maas.ip&gt;/MAAS/</code>，然后配置相关参数</p><ul><li>Region name (MAAS name)</li><li>Ubuntu archive, Ubuntu extra architectures</li><li>Ubuntu images</li><li>SSH keys (for currently logged in user)</li></ul><p><img src="https://i.imgur.com/mB3EK4K.jpg" alt="MAAS界面"></p><h3 id="1-4-系统Images设置"><a href="#1-4-系统Images设置" class="headerlink" title="1.4 系统Images设置"></a>1.4 系统Images设置</h3><p>在<code>Images</code>界面设置需要安装的系统版本，本次部署需要是64位的ubuntu 16.04，配置完成后MAAS会自动同步镜像</p><p><img src="https://i.imgur.com/tXMsQWz.jpg" alt="MAAS Inages设置"></p><p>在<code>setting</code>界面配置系统PXE启动时装载的最小镜像供MAAS进行服务器的硬件信息等解析</p><p><img src="https://i.imgur.com/gcsXtgW.jpg" alt="MAAS 最小镜像配置"></p><h3 id="1-4-DHCP配置"><a href="#1-4-DHCP配置" class="headerlink" title="1.4  DHCP配置"></a>1.4  DHCP配置</h3><p>点击<code>Subnets</code>选择一个网络点击<code>VLAN</code>选择右上的<code>take action</code>选项框，选择<code>Provid DHCP</code>，然后配置dhcp范围</p><p><img src="https://i.imgur.com/0pPmBOZ.jpg" alt="MAAS DHCP配置"></p><p>【Note】</p><p>1)检查需要安装系统的服务器PXE启动，配置服务器启动项中PXE为首选；</p><p>2)配置服务器的IPMI，便于MAAS完全接管服务器，包括服务器的启动、关机、重启等。</p><p>启动待装系统的服务器，可以看到MAAS检测到服务器上线</p><p><img src="https://i.imgur.com/C2nozbq.jpg" alt="MAAS硬件检测"></p><p>更多MAAS配置及设置参见官网<a href="https://docs.maas.io/2.3/en/" target="_blank" rel="noopener">用户手册</a></p><h2 id="2-ubuntu私有源环境搭建"><a href="#2-ubuntu私有源环境搭建" class="headerlink" title="2 ubuntu私有源环境搭建"></a>2 ubuntu私有源环境搭建</h2><p>私有源环境搭建主要是应对公司网络限制，如访问过慢或限制网络连接的情况，也可以应对需要大量现场装机部署等情况加快部署进度。</p><p>2.1 安装apt-mirror工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# apt-get install -y apt-mirror</span><br></pre></td></tr></table></figure><p>2.2 配置apt-mirror</p><p>本次安装的ubuntu为<strong>16.04</strong>，设置ubuntu源为清华源（可以根据网速设置自己常用或访问较快的源），由于只需要64位的安装软件，这里设置近下载64位的，同时也可以根据自己的需求修改源下载路径位置等参数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat /etc/apt/mirror.list </span><br><span class="line"><span class="meta">#</span>############ config ##################</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> set base_path    /var/spool/apt-mirror</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> set mirror_path  $base_path/mirror</span><br><span class="line"><span class="meta">#</span> set skel_path    $base_path/skel</span><br><span class="line"><span class="meta">#</span> set var_path     $base_path/var</span><br><span class="line"><span class="meta">#</span> set cleanscript $var_path/clean.sh</span><br><span class="line"><span class="meta">#</span> set defaultarch  &lt;running host architecture&gt;</span><br><span class="line">set defaultarch  amd64</span><br><span class="line"><span class="meta">#</span> set postmirror_script $var_path/postmirror.sh</span><br><span class="line"><span class="meta">#</span> set run_postmirror 0</span><br><span class="line">set nthreads     20</span><br><span class="line">set _tilde 0</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span>############ end config ##############</span><br><span class="line"><span class="meta">#</span> louie add qinghua source 20180326</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">clean http://mirrors.tuna.tsinghua.edu.cn/ubuntu</span><br></pre></td></tr></table></figure><p>随后运行apt-mirror下载源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# apt-mirror </span><br><span class="line">Downloading 152 index files using 20 threads...</span><br><span class="line">Begin time: Mon Mar 26 10:38:17 2018</span><br><span class="line">[20]... [19]... [18]... [17]... [16]... [15]... [14]... [13]... [12]... [11]... [10]... [9]... [8]... [7]... [6]... [5]... [4]... [3]... [2]... [1]... [0]... </span><br><span class="line">End time: Mon Mar 26 10:38:29 2018</span><br><span class="line"></span><br><span class="line">Processing tranlation indexes: [TTTT]</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><p>随后等待文件下载完成，等待时间视网络状况，本次源仓库共有113.3 GiB。(ps：在更新了三个小时多后终于更新完成了)</p><p><strong><em>【Note】</em></strong></p><p>1)当某些软件包在服务器端进行了升级，或者服务器端不再需要这些软件包时，我们使用了 <code>apt-mirror</code>与服务器同步后，会在本地的<code>$var_path/</code>下生成一个<code>clean.sh</code>的脚本，列出了遗留在本地的旧版本和无用的软件包，可以手动运行这个脚本来删除遗留在本地的且不需要用的软件包<br><code>clean http://mirrors.tuna.tsinghua.edu.cn/ubuntu</code></p><p>2)如果用amd64位架构下的包，可以加上deb-amd64的标记如果什么都不加，直接使用deb http…..这种格式，则在同步时，只同步当前系统所使用的架构下的软件包。比如一个64位系统，直接deb http….只同步64位的软件 包。如果还嫌麻烦，直接去改<code>set defaultarch   &lt;running hostarchitecture&gt;</code>这个参数就好，比如改成set defaultarch i386，这样你使用debhttp…..这种格式，则在同步时，只同步i386的软件包了。</p><p>如果你还想要源码，可以把源码也加到mirror.list里面同步过来，比如加上deb-src这样的标记。想要其他的东西也可以追加相应的标记来完成。</p><p>3）同步完成后，我们可以利用clean.sh清理无用软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# /var/spool/apt-mirror/var/clean.sh</span><br></pre></td></tr></table></figure><p>2.3 作为本机源配置</p><p>源路径为</p><p>配置本机源文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat /etc/apt/sources.list</span><br><span class="line">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial main restricted universe multiverse</span><br><span class="line">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-updates main restricted universe multiverse</span><br><span class="line">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-backports main restricted universe multiverse</span><br><span class="line">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-security main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>2.4 局域网源配置</p><p>2.4.1 首先需要安装apache2服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# apt-get install apache2</span><br></pre></td></tr></table></figure><p>将镜像目录链接到apache2的根目录(/var/www/html/)下 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# sudo ln -s /var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu /var/www/html/ubuntu</span><br></pre></td></tr></table></figure><p>打开浏览器<code>http://&lt;HOST IP&gt;/ubuntu</code> 即可查看</p><p>2.4.2 修改局域网ubuntu源</p><p>修改局域网内主机的ubuntu源，同时指定源为64位</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat /etc/apt/sources.list</span><br><span class="line">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-security main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>【参考链接】</p><p>1)<a href="https://maas.io/install" target="_blank" rel="noopener">MAAS安装指导</a></p><p>2)<a href="https://blog.csdn.net/wenwenxiong/article/details/50908002" target="_blank" rel="noopener">ubuntu私有源搭建</a></p><p>3)<a href="https://www.linuxidc.com/Linux/2014-08/105415.htm" target="_blank" rel="noopener">私有源配置</a></p>]]></content>
    
    <summary type="html">
    
      MAAS安装使用以及ubuntu私有源环境搭建
    
    </summary>
    
      <category term="ubuntu" scheme="https://louielong.github.io/categories/ubuntu/"/>
    
    
      <category term="ubuntu" scheme="https://louielong.github.io/source/tags/ubuntu/"/>
    
      <category term="MAAS" scheme="https://louielong.github.io/source/tags/MAAS/"/>
    
  </entry>
  
  <entry>
    <title>OPNFV Euphrates 安装（三）</title>
    <link href="https://louielong.github.io/opnfv-Euphrates-install-03.html"/>
    <id>https://louielong.github.io/opnfv-Euphrates-install-03.html</id>
    <published>2018-03-06T09:50:43.000Z</published>
    <updated>2018-09-12T09:51:21.378Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 <span id="jump0">前言</span></h2><p>近期在研究NFV的网络性能测试，考虑到NFV的网络性能的转发瓶颈，现在的商用NFV产品都会使用诸如DPDK、SR_IOV等网络加速技术，相应的也就需要对应的硬件支持。在尝试部署后本文总结一下使用OPNFV的E版本部署DPDK场景的过程，部署过程中需要修改配置文件以匹配硬件。</p><h2 id="2-配置文件修改"><a href="#2-配置文件修改" class="headerlink" title="2 配置文件修改"></a>2 配置文件修改</h2><h3 id="2-1-部署节点配置修改"><a href="#2-1-部署节点配置修改" class="headerlink" title="2.1 部署节点配置修改"></a>2.1 部署节点配置修改</h3><p>部署节点的配置文件修改主要是增加DPDK网卡的PCI地址和MAC地址，原配置文件参看<a href="http://ylong.net.cn/opnfv_Euphrates_install(02" target="_blank" rel="noopener">Euphrates部署(二)</a>.html)的2.1节。</p><h4 id="2-1-1-idf-pod1-yaml修改"><a href="#2-1-1-idf-pod1-yaml修改" class="headerlink" title="2.1.1 idf-pod1.yaml修改"></a>2.1.1 idf-pod1.yaml修改</h4><p>在network字段下增加dpdk网卡名，总线地址，接口参数三项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line"><span class="attr">  node:</span></span><br><span class="line">    <span class="comment"># Ordered-list, index should be in sync with node index in PDF</span></span><br><span class="line"><span class="attr">    - interfaces:</span> <span class="meta">&amp;interfaces</span></span><br><span class="line">        <span class="comment"># Ordered-list, index should be in sync with interface index in PDF</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'eno1'</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'eno2'</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'eno3'</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'eno4'</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'enp66s0f0'</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'enp66s0f1'</span></span><br><span class="line"><span class="attr">      busaddr:</span> <span class="meta">&amp;busaddr</span></span><br><span class="line">        <span class="comment"># Bus-info reported by `ethtool -i ethX`</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'0000:01:00.0'</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'0000:01:00.1'</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'0000:02:00.0'</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'0000:02:00.1'</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'0000:42:00.0'</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'0000:42:00.1'</span></span><br><span class="line"><span class="attr">    - interfaces:</span> <span class="meta">*interfaces</span></span><br><span class="line"><span class="attr">      busaddr:</span> <span class="meta">*busaddr</span></span><br><span class="line"><span class="attr">    - interfaces:</span> <span class="meta">*interfaces</span></span><br><span class="line"><span class="attr">      busaddr:</span> <span class="meta">*busaddr</span></span><br><span class="line"><span class="attr">    - interfaces:</span> <span class="meta">*interfaces</span></span><br><span class="line"><span class="attr">      busaddr:</span> <span class="meta">*busaddr</span></span><br><span class="line"><span class="attr">    - interfaces:</span> <span class="meta">*interfaces</span></span><br><span class="line"><span class="attr">      busaddr:</span> <span class="meta">*busaddr</span></span><br><span class="line"><span class="attr">    - interfaces:</span> <span class="meta">*interfaces</span></span><br><span class="line"><span class="attr">      busaddr:</span> <span class="meta">*busaddr</span></span><br><span class="line"><span class="attr">    - interfaces:</span> <span class="meta">*interfaces</span></span><br><span class="line"><span class="attr">      busaddr:</span> <span class="meta">*busaddr</span></span><br></pre></td></tr></table></figure><h4 id="2-1-2-pod1-yaml修改"><a href="#2-1-2-pod1-yaml修改" class="headerlink" title="2.1.2 pod1.yaml修改"></a>2.1.2 pod1.yaml修改</h4><p>修改private网络接口为4，接口数按照idf-pod1.yaml的<code>busaddr</code>字段下网卡总线地址顺序确定，从0开始计数。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">private:</span></span><br><span class="line"><span class="attr">  interface:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">  vlan:</span> <span class="number">102</span></span><br><span class="line"><span class="attr">  network:</span> <span class="number">192.168</span><span class="number">.102</span><span class="number">.0</span></span><br><span class="line"><span class="attr">  mask:</span> <span class="number">24</span></span><br></pre></td></tr></table></figure><p>在compute节点上增加DPDK网卡的MAC地址，以及添加<code>DPDK</code>特性字段，<strong>Fuel在部署过程中并不是按照节点名称来确定节点类型的，而是按照节点顺序来配置，前三个节点为控制节点，后两个节点为计算节点</strong>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">compute1</span></span><br><span class="line"><span class="attr">  node:</span> <span class="meta">*nodeparas</span></span><br><span class="line"><span class="attr">  disks:</span> <span class="meta">*disks_A</span></span><br><span class="line"><span class="attr">  remote_management:</span></span><br><span class="line">    <span class="string">&lt;&lt;:</span> <span class="meta">*remote_params</span></span><br><span class="line"><span class="attr">    address:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.201</span></span><br><span class="line"><span class="attr">    mac_address:</span> <span class="string">"44:A8:42:1A:70:BE"</span></span><br><span class="line"><span class="attr">  interfaces:</span>                           <span class="comment"># physical interface list</span></span><br><span class="line"><span class="attr">    - mac_address:</span> <span class="string">"44:a8:42:14:ee:64"</span></span><br><span class="line"><span class="attr">      speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">      features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    - mac_address:</span> <span class="string">"44:a8:42:14:ee:65"</span></span><br><span class="line"><span class="attr">      speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">      features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    - mac_address:</span> <span class="string">"44:a8:42:14:ee:66"</span></span><br><span class="line"><span class="attr">      speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">      features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    - mac_address:</span> <span class="string">"44:a8:42:14:ee:67"</span></span><br><span class="line"><span class="attr">      speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">      features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    - mac_address:</span> <span class="string">"00:1b:21:89:5e:f2"</span></span><br><span class="line"><span class="attr">      speed:</span> <span class="number">10</span><span class="string">gb</span></span><br><span class="line"><span class="attr">      feature:</span> <span class="string">'dpdk'</span></span><br><span class="line"><span class="attr">    - mac_address:</span> <span class="string">"00:1b:21:89:5e:f3"</span></span><br><span class="line"><span class="attr">      speed:</span> <span class="number">10</span><span class="string">gb</span></span><br><span class="line"><span class="attr">      feature:</span> <span class="string">'dpdk'</span></span><br><span class="line"><span class="attr">  fixed_ips:</span></span><br><span class="line"><span class="attr">    admin:</span> <span class="number">10.20</span><span class="number">.0</span><span class="number">.14</span></span><br><span class="line"><span class="attr">    mgmt:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.14</span></span><br><span class="line"><span class="attr">    public:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.14</span></span><br></pre></td></tr></table></figure><h3 id="2-2-openstack部署相关配置文件修改"><a href="#2-2-openstack部署相关配置文件修改" class="headerlink" title="2.2 openstack部署相关配置文件修改"></a>2.2 openstack部署相关配置文件修改</h3><p>OPNFV的Fuel部署中目前只有一种策略默认支持DPDK，即<code>os-nosdn-ovs-ha</code>，打开<code>mcp/config/scenario/baremetal/os-nosdn-ovs-ha.yaml</code>文件开一看DPDK字样。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">cluster:</span></span><br><span class="line"><span class="attr">  domain:</span> <span class="string">baremetal-mcp-ocata-ovs-dpdk-ha.local</span></span><br><span class="line"><span class="attr">  states:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">maas</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">baremetal_init</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">virtual_control_plane</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">dpdk</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">openstack_ha</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">networks</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">networking_gw</span></span><br><span class="line"><span class="attr">virtual:</span></span><br><span class="line"><span class="attr">  nodes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cfg01</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">mas01</span></span><br><span class="line"><span class="attr">  cfg01:</span></span><br><span class="line"><span class="attr">    vcpus:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">    ram:</span> <span class="number">6144</span></span><br><span class="line"><span class="attr">  mas01:</span></span><br><span class="line"><span class="attr">    vcpus:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">    ram:</span> <span class="number">6144</span></span><br></pre></td></tr></table></figure><p>在部署DPDK场景前需要修改配置文件<code>mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/init.yml</code>[1],配置文件的内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">classes:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">cluster.baremetal-mcp-ocata-common-ha.openstack_init</span></span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line"><span class="attr">  _param:</span></span><br><span class="line"><span class="attr">    neutron_tenant_network_types:</span> <span class="string">"flat,vlan"</span></span><br><span class="line"><span class="attr">    neutron_tenant_vlan_range:</span> <span class="string">"1000:1030"</span></span><br><span class="line"><span class="attr">    nova_cpu_pinning:</span> <span class="string">"1-3,4,6"</span></span><br><span class="line"><span class="attr">    compute_hugepages_size:</span> <span class="number">2</span><span class="string">M</span></span><br><span class="line"><span class="attr">    compute_hugepages_count:</span> <span class="number">8192</span></span><br><span class="line"><span class="attr">    compute_hugepages_mount:</span> <span class="string">/mnt/hugepages_2M</span></span><br><span class="line"><span class="attr">    compute_kernel_isolcpu:</span> <span class="number">1</span><span class="string">,2,3,4,5,6,7</span></span><br><span class="line"><span class="attr">    compute_dpdk_driver:</span> <span class="string">uio</span></span><br><span class="line"><span class="attr">    compute_ovs_pmd_cpu_mask:</span> <span class="string">"0x80"</span></span><br><span class="line"><span class="attr">    compute_ovs_dpdk_socket_mem:</span> <span class="string">"2048,2048"</span></span><br><span class="line"><span class="attr">    compute_ovs_dpdk_lcore_mask:</span> <span class="string">"0x20"</span></span><br><span class="line"><span class="attr">    compute_ovs_memory_channels:</span> <span class="string">"2"</span></span><br><span class="line"><span class="attr">  linux:</span></span><br><span class="line"><span class="attr">    system:</span></span><br><span class="line"><span class="attr">      repo:</span></span><br><span class="line"><span class="attr">        uca:</span></span><br><span class="line"><span class="attr">          source:</span> <span class="string">"deb http://ubuntu-cloud.archive.canonical.com/ubuntu xenial-updates/ocata main"</span></span><br><span class="line"><span class="attr">          architectures:</span> <span class="string">amd64</span></span><br><span class="line"><span class="attr">          key_id:</span> <span class="string">EC4926EA</span></span><br><span class="line"><span class="attr">          key_server:</span> <span class="string">keyserver.ubuntu.com</span></span><br><span class="line"><span class="attr">      kernel:</span></span><br><span class="line"><span class="attr">        sysctl:</span></span><br><span class="line">          <span class="string">net.ipv4.tcp_congestion_control:</span> <span class="string">yeah</span></span><br><span class="line">          <span class="string">net.ipv4.tcp_slow_start_after_idle:</span> <span class="number">0</span></span><br><span class="line">          <span class="string">net.ipv4.tcp_fin_timeout:</span> <span class="number">30</span></span><br></pre></td></tr></table></figure><p>配置文件的参数说明如下：</p><ul><li>neutron_tenant_network_types：表明openstack中将要使用的网络类型，vlan是指创建的虚拟机之间通信的网络类型；</li><li>neutron_tenant_vlan_range：openstack创建的vlan网络vlan范围，需要在物理交换机上进行配置运行该段的vlan数据包通过，否则创建的虚拟机无法进行通信；</li><li>nova_cpu_pinning：计算节点分配给openstack的cpu核心数目，本次部署使用的物理服务器核心为2（CPU）*4（core），共有8个核心，openvswitch和计算节点自身也需要占用cpu资源因此不能完全分配给openstack，同时考虑到dpdk策略下vswitch的核心独占，该项数值与compute_ovs_pmd_cpu_mask和compute_ovs_dpdk_lcore_mask是互斥的；</li><li>compute_hugepages_size：计算节点的大页内存配置，默认一个页面是2M；</li><li>compute_hugepages_count：大页内存页面个数，本次部署中计算节点的物理内存是32G，本次分配给计算资源的大页内存总数为8192*2M=16G内存；</li><li>compute_kernel_isolcpu：计算节点cpu核心隔离，设置计算节点的内核<em>不要使用</em>这些核心；</li><li>compute_dpdk_driver：dpdk使用的内核模块；</li><li>compute_ovs_pmd_cpu_mask：为了保证转发性能需要给ovs的PMD分配核心独占，CPU核心的分配采用掩码的方式，如本文中将cpu7分配给OVS，则掩码为0x80，cpu数从0开始计算，同时尽量<strong>将DPDK和OVS分配的核心在同一个NUMA节点上</strong>，关于OVS下的DPDK配置可以查阅官方手册[2];</li><li>compute_ovs_dpdk_socket_mem：分配给dpdk的大页内存数，每个NUMA节点各4个G；</li><li>compute_ovs_dpdk_lcore_mask：ovs中dpdk占用核心，同样采用掩码计算方式，最好与dpdk网卡所在NUMA节点一致，可以通过查看<code>/sys/bus/pci/devices/</code>目录下对应网卡总线的numa_node值查看，如dpdk网卡总线值为0000:42:00.0则使用命令<code>cat /sys/bus/pci/devices/0000\:42\:00.0/numa_node</code>查看所在NUMA节点；</li><li>compute_ovs_memory_channels：内存通道，对应的物理服务器内存所使用的通道数；</li></ul><p>然后修改dpdk网卡所使用的驱动，配置文件<code>mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/compute.yml</code>默认使用的是<code>igb_uio</code>[3]由于部署的系统中没有<code>igb_uio</code>驱动，因此改为使用<code>uio_pci_generic</code>驱动。</p><p>配置完上述文件后使用<code>sudo ci/deploy.sh -b file:///home/opnfv/fuel/mcp/config/ -l bii -p pod1 -s os-nosdn-ovs-ha -B br-pxe,br-ctl -D</code>命令部署即可，推荐使用下述命令部署：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nohup ci/deploy.sh -b file:///home/opnfv/fuel/mcp/config/ -l bii -p pod1 -s os-nosdn-ovs-ha -B br-pxe,br-ctl -D &gt; opnfv_install_date +%Y-%m-%d`.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>部署过程不占用终端，还可以通过<code>tail -f opnfv_install_date[date].log</code>查看部署过程。</p><p>【NOTE】当前的部署完成后存在一个BUG，网络服务的外网不正常，通过<code>service networking status</code>参看是否有错误。创建的虚拟机要想访问外网<code>float-to-ex</code>网桥需要存在，或者使用<code>route -n</code>查看是否存在能够访问外网的网关。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@cmp001:~# brctl show</span><br><span class="line">bridge namebridge idSTP enabledinterfaces</span><br><span class="line">br-ctl8000.44a84214ee66noeno3.101</span><br><span class="line">br-ex8000.1efd4c8920acnoeno2</span><br><span class="line">           float-to-ex</span><br><span class="line">virbr08000.525400b2f405yesvirbr0-nic</span><br><span class="line"></span><br><span class="line">root@cmp001:~# route -n</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">0.0.0.0         192.168.20.1    0.0.0.0         UG    0      0        0 br-ex</span><br><span class="line">10.20.0.0       0.0.0.0         255.255.255.0   U     0      0        0 eno1</span><br><span class="line">192.168.20.0    0.0.0.0         255.255.255.0   U     0      0        0 br-ex</span><br><span class="line">192.168.101.0   0.0.0.0         255.255.255.0   U     0      0        0 br-ctl</span><br><span class="line">192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0</span><br></pre></td></tr></table></figure><p>如不存在则需要重启网络服务<code>service networking restart</code></p><p>错误1：</p><p>重启网络失败，通过<code>journalctl -xe</code>查看错误原因</p><p><img src="https://i.imgur.com/QfUS2Rr.jpg" alt="重启网络失败"></p><p>先将<code>/etc/network/if-up.d/route-br-ex</code>中的路由配置注释，然后使用<code>ip addr flush dev br-ctl</code>和<code>ip addr flush dev br-ex</code>（注意若使用的是<code>mgmt</code>网络访问会导致终端连接断开，在清除<code>br-ctl</code>的网址时请使用<code>pxe</code>网络的地址连接计算节点），随后使用<code>service networking restart</code>重启网络。</p><p>错误2:</p><p>创建虚拟机错误，查看<code>vim /var/log/nova/nova-compute.log</code>显示ovs权限不足，需要修改计算节点neutron插件中ovs配置<code>/etc/neutron/plugins/ml2/openvswitch_agent.ini</code>将<code>vhostuser_socket_dir = /var/run/openvswitch</code>改为<code>vhostuser_socket_dir = /var/run/openvswitch-vhost</code></p><p>随后重启ovs服务<code>service neutron-openvswitch-agent restart</code>。</p><h2 id="3-使能第二个DPDK网口"><a href="#3-使能第二个DPDK网口" class="headerlink" title="3 使能第二个DPDK网口"></a>3 使能第二个DPDK网口</h2><p>当前Fuel部署DPDK仅支持一块网卡配置，一般来说DPDK网卡中网口个数都是成对的，因此需要手动配置第二个DPDK网口。</p><h3 id="3-1-控制节点neutron配置修改"><a href="#3-1-控制节点neutron配置修改" class="headerlink" title="3.1 控制节点neutron配置修改"></a>3.1 控制节点neutron配置修改</h3><h4 id="3-1-1-新增网络MTU修改"><a href="#3-1-1-新增网络MTU修改" class="headerlink" title="3.1.1 新增网络MTU修改"></a>3.1.1 新增网络MTU修改</h4><p>修改controller节点的<code>/etc/neutron/plugins/ml2/ml2_conf.ini</code>中</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[ml2]</span></span><br><span class="line"><span class="attr">physical_network_mtus</span> = physnet1:<span class="number">1500</span>,physnet2:<span class="number">1500</span></span><br></pre></td></tr></table></figure><p>改为<code>physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500</code></p><h4 id="3-1-2-vlan配置"><a href="#3-1-2-vlan配置" class="headerlink" title="3.1.2 vlan配置"></a>3.1.2 vlan配置</h4><p>修改controller节点的<code>/etc/neutron/plugins/ml2/ml2_conf.ini</code>中</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[ml2_type_vlan]</span></span><br><span class="line"><span class="attr">network_vlan_ranges</span> = physnet2:<span class="number">1000</span>:<span class="number">1030</span></span><br></pre></td></tr></table></figure><p>改为<code>network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060</code></p><p><strong>同时需要在物理交换机上配置1031~1060段的vlan支持。</strong></p><p>修改完成后使用<code>service neutron-server restart</code>重启neutron服务。</p><p>【Tips】因为需要修改三个控制节点，可以使用如下命令修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i 's/^physical_network_mtus =.*$/physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500/g' /etc/neutron/plugins/ml2/ml2_conf.ini</span><br><span class="line">sed -i 's/^network_vlan_ranges =.*$/network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060/g' /etc/neutron/plugins/ml2/ml2_conf.ini</span><br></pre></td></tr></table></figure><p>配合saltstack命令可以更便捷的修改三个控制节点，登录到cfg01节点使用salt命令修改控制节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@cfg01:~# salt -C "ctl*" cmd.run "sed -i 's/^physical_network_mtus =.*$/physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500/g' /etc/neutron/plugins/ml2/ml2_conf.ini"</span><br><span class="line">root@cfg01:~# salt -C "ctl*" cmd.run "sed -i 's/^network_vlan_ranges =.*$/network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060/g' /etc/neutron/plugins/ml2/ml2_conf.ini"</span><br><span class="line">root@cfg01:~# salt -C "ctl*" cmd.run "service neutron-server restart"</span><br></pre></td></tr></table></figure><h3 id="3-2-计算节点neutron配置修改"><a href="#3-2-计算节点neutron配置修改" class="headerlink" title="3.2 计算节点neutron配置修改"></a>3.2 计算节点neutron配置修改</h3><p>修改节点节点的<code>/etc/neutron/plugins/ml2/openvswitch_agent.ini</code>中ovs段</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[ovs]</span></span><br><span class="line"><span class="attr">bridge_mappings</span> = physnet1:br-floating,physnet2:br-prv</span><br></pre></td></tr></table></figure><p>改为<code>bridge_mappings = physnet1:br-floating,physnet2:br-prv,physnet3:br-prv1</code>，随后重启neutron服务<code>service neutron-openvswitch-agent restart</code></p><p>[Tips]使用如下命令修改，同样的配合saltstack的命令可以更便捷的修改两个控制节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i 's/^bridge_mappings = .*$/bridge_mappings = physnet1:br-floating,physnet2:br-prv,physnet3:br-prv1/g' /etc/neutron/plugins/ml2/openvswitch_agent.ini</span><br></pre></td></tr></table></figure><p>重启完neutron服务后通过<code>ovs-vsctl show</code>可以看到已经生成了一个br-prv1的网桥，如果没有生成，在控制节点上检查网络代理服务是否正常</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@ctl01:~# openstack network agent list</span><br><span class="line">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br><span class="line">| ID                                   | Agent Type         | Host   | Availability Zone | Alive | State | Binary                    |</span><br><span class="line">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br><span class="line">| 03ee7d4d-f17a-4ca2-b864-71decdd58bac | Metadata agent     | cmp002 | None              | True  | UP    | neutron-metadata-agent    |</span><br><span class="line">| 63b23081-2844-4712-a9d9-b5da80596558 | Open vSwitch agent | cmp001 | None              | True  | UP    | neutron-openvswitch-agent |</span><br><span class="line">| 69acde22-0890-4e90-9f26-c20e69dace43 | DHCP agent         | cmp001 | nova              | True  | UP    | neutron-dhcp-agent        |</span><br><span class="line">| 73ed4645-c22d-4150-a7aa-bd59474b5f59 | L3 agent           | cmp002 | nova              | True  | UP    | neutron-l3-agent          |</span><br><span class="line">| b8e1e749-2254-48d7-ae46-54a6223971d1 | Open vSwitch agent | cmp002 | None              | True  | UP    | neutron-openvswitch-agent |</span><br><span class="line">| bb0329cf-021b-42b4-a0b0-749889f5c619 | Metadata agent     | cmp001 | None              | True  | UP    | neutron-metadata-agent    |</span><br><span class="line">| e0c05cb5-16c8-4da4-8eb2-d22087b69402 | DHCP agent         | cmp002 | nova              | True  | UP    | neutron-dhcp-agent        |</span><br><span class="line">| ed1ed0f4-d3da-4486-828a-40f4a1759a7a | L3 agent           | cmp001 | nova              | True  | UP    | neutron-l3-agent          |</span><br><span class="line">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br></pre></td></tr></table></figure><p>br-prv1成功创建后需要手动添加dpdk网卡，首先为第二个网卡加载驱动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@cmp001:~# ifconfig enp66s0f1 down</span><br><span class="line">root@cmp001:~# dpdk-devbind -b uio_pci_generic 42:00.1</span><br><span class="line">root@cmp001:~# dpdk-devbind -s</span><br><span class="line"></span><br><span class="line">Network devices using DPDK-compatible driver</span><br><span class="line">============================================</span><br><span class="line">0000:42:00.0 '82599ES 10-Gigabit SFI/SFP+ Network Connection' drv=uio_pci_generic unused=ixgbe</span><br><span class="line">0000:42:00.1 '82599ES 10-Gigabit SFI/SFP+ Network Connection' drv=uio_pci_generic unused=ixgbe</span><br></pre></td></tr></table></figure><p>随后在ovs中配置dpdk网卡</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@cmp001:~# ovs-vsctl add-port br-prv1 dpdk1 -- set interface dpdk0 type=dpdk options:dpdk-devargs=0000:42:00.1 options:n_rxq=2</span><br><span class="line">root@cmp001:~# service openvswitch-switch restart</span><br></pre></td></tr></table></figure><p>【NOTE】在创建虚拟机时需要在虚拟机类型中额外添加大页内存特性设置，如</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ctl01:~# source keystonercv3</span><br><span class="line">root@ctl01:~# openstack flavor create m1.tiny --ram 64 --disk 0 --vcpus 1 --public</span><br><span class="line">root@ctl01:~# nova flavor-key m1.tiny set hw:mem_page_size=large</span><br></pre></td></tr></table></figure><p><a href="#jump0">返回文首</a></p><p>【参考链接】</p><p>1)<a href="https://github.com/opnfv/Fuel/blob/stable/euphrates/mcp/reclass/classes/cluster/virtual-mcp-ocata-ovs-dpdk-noha/openstack/init.yml" target="_blank" rel="noopener">dpdk配置</a></p><p>2)<a href="http://docs.openvswitch.org/en/latest/intro/install/dpdk/?highlight=pmd" target="_blank" rel="noopener">OVS中DPDK配置</a></p><p>3)<a href="https://github.com/opnfv/Fuel/blob/fe9be64738ff1a1091e7df5b04b391fb15d6abc0/mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/compute.yml#L37" target="_blank" rel="noopener">DPDK网卡驱动</a></p>]]></content>
    
    <summary type="html">
    
      OPNFV Euphrates DPDK scenario deploy
    
    </summary>
    
      <category term="OPNFV" scheme="https://louielong.github.io/categories/OPNFV/"/>
    
    
      <category term="OPNFV" scheme="https://louielong.github.io/source/tags/OPNFV/"/>
    
      <category term="Euphrates" scheme="https://louielong.github.io/source/tags/Euphrates/"/>
    
      <category term="dpdk" scheme="https://louielong.github.io/source/tags/dpdk/"/>
    
  </entry>
  
  <entry>
    <title>openstack中镜像的密码修改</title>
    <link href="https://louielong.github.io/openstack-images-password.html"/>
    <id>https://louielong.github.io/openstack-images-password.html</id>
    <published>2018-01-04T02:17:24.000Z</published>
    <updated>2018-09-12T09:51:08.845Z</updated>
    
    <content type="html"><![CDATA[<p><span id="jump0">开始</span></p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>本文主要讲解如何修改openstack中镜像的密码以及开启镜像的ssh登录。</p><p>openstack中的镜像登录方式主要有以下几种：</p><p>1）openstack的VNC终端密码登录；</p><p>2）ssh使用密匙登录；</p><p>3）ssh使用密码登录。</p><p>除了密匙登录其他两种都需要密码，而一般的镜像初始状态是不能使用密码登录或者说密码未知的，因此需要对镜像进行处理，处理方法有以下几种：</p><p>1）通过openstack的实例创建执行脚本修改；</p><p>2）通过直接修改镜像加入初始密码。</p><p>多数的系统镜像都加入了普通用户通过<code>sudo su</code>切换成root用户，原因是<code>/etc/sudoers</code>加入的<code>%sudo   ALL=(ALL:ALL) ALL</code>。</p><h2 id="2-镜像处理介绍"><a href="#2-镜像处理介绍" class="headerlink" title="2 镜像处理介绍"></a>2 镜像处理介绍</h2><h3 id="2-1-cirros"><a href="#2-1-cirros" class="headerlink" title="2.1 cirros"></a>2.1 cirros</h3><p>cirros镜像是目前openstack中测试使用非常广泛的镜像，体积较小，易于使用，下载地址：<a href="https://download.cirros-cloud.net/" target="_blank" rel="noopener">https://download.cirros-cloud.net/</a></p><p>cirros 0.3.5的镜像账号密码为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user:cirros</span><br><span class="line">pass:cubswin:)</span><br></pre></td></tr></table></figure><p>cirros 0.4.0的账号密码为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user:cirros</span><br><span class="line">password:gocubsgo</span><br></pre></td></tr></table></figure><p>不同版本的cirros的镜像密码可能不同，但是在控制台日志中都会显示，同时该镜像也默认开启了ssh登录，可以使用账号密码登录。如无法登录记得查看镜像使用的安全组是否开始ssh访问权限</p><p><img src="https://i.imgur.com/5P14D7V.jpg" alt="openstak-SR-ssh"></p><p>登录之后使用<code>sudo su</code>切换成root用户，若想直接使用root用户登录，需要拷贝密钥或者修改root用户密码，拷贝密钥的命令为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -f /home/cirros/.ssh/authorized_keys /root/.ssh/</span><br></pre></td></tr></table></figure><h3 id="2-2-ubuntu镜像"><a href="#2-2-ubuntu镜像" class="headerlink" title="2.2 ubuntu镜像"></a>2.2 ubuntu镜像</h3><p>ubuntu系统镜像的官方下载地址为：<a href="http://cloud-images.ubuntu.com" target="_blank" rel="noopener">http://cloud-images.ubuntu.com</a></p><p>trusty为ubuntu 14，xenial为ubuntu 16，根据自己的喜好下载镜像。</p><h3 id="2-2-1-修改镜像"><a href="#2-2-1-修改镜像" class="headerlink" title="2.2.1 修改镜像"></a>2.2.1 修改镜像</h3><p>使用guestfish工具直接修改镜像[1]，安装guestfish工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libguestfs-tools -y</span><br></pre></td></tr></table></figure><p>打开镜像：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo guestfish --rw -a xenial-server-cloudimg-amd64-disk1.img</span><br></pre></td></tr></table></figure><p>挂载文件系统等操作如下图所示：</p><p><img src="https://i.imgur.com/TVe8pr4.jpg" alt="guestfish change passwd"></p><p>打开<code>/etc/cloud/cloud.cfg</code>后修改一下内容：</p><p>1）增加ssh密码登录</p><p>将<code>disable_root</code>的值设为<code>false</code>即可允许root登录，增加<code>ssh_pwauth: true</code>即可允许ssh密码登录。</p><p><img src="https://i.imgur.com/Rzj5T7u.jpg" alt="openstack-passwd2"></p><p>2）增加默认用户ubuntu的密码</p><p>将<code>lock_passwd</code>设为<code>false</code>允许VNC终端密码登录，同时添加<code>plain_text_passwd: &quot;ubuntu&quot;</code>将默认用户的密码设为<code>ubuntu</code>。</p><p><img src="https://i.imgur.com/RLL7eEI.jpg" alt="openstack-passwd3"></p><p>最后，建议在<code>/etc/issue</code>中加入配置的密码，方便后续的人查看默认用户密码。根据参看链接[2]还可以修改<code>/etc/passwd</code>的第一行<code>root:x:...</code>为<code>root::...</code>达到使用root用户的VNC免密登录，但是如果是ssh登录的话，需要在<code>/etc/ssh/sshd_config</code>中将<code>PermitEmptyPasswords no</code>设置为<code>PermitEmptyPasswords yes</code>。</p><h3 id="2-2-2-通过openstack用户数据修改密码"><a href="#2-2-2-通过openstack用户数据修改密码" class="headerlink" title="2.2.2 通过openstack用户数据修改密码"></a>2.2.2 通过openstack用户数据修改密码</h3><p>如果不想修改镜像就可以使用openstack启动实例时导入用户数据的方式来修改密码，加入修改脚本如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/sh</span><br><span class="line">passwd ubuntu&lt;&lt;EOF</span><br><span class="line">ubuntu</span><br><span class="line">ubuntu</span><br><span class="line">EOF</span><br><span class="line">sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config</span><br><span class="line">service ssh restart</span><br></pre></td></tr></table></figure><p>如下图所示加入上述脚本，不同的openstack版本此处有所不同，依具体版本操作。</p><p><img src="https://i.imgur.com/wQ0HrVd.jpg" alt="openstack userdata"></p><p>此外还有修改openstack的nova.conf和dashboard配置的方式来加入修改密码选项[3]，由于openstack的版本修改该种方式不一定可行，视具体版本处理。</p><h2 id="2-3-centos镜像"><a href="#2-3-centos镜像" class="headerlink" title="2.3 centos镜像"></a>2.3 centos镜像</h2><p>centos官方的镜像地址为：<a href="http://cloud.centos.org/centos/7/images/" target="_blank" rel="noopener">http://cloud.centos.org/centos/7/images/</a></p><p>centos的镜像默认用户是”centos”，处理方式和ubuntu一样，可以通过guestfish或者在创建实例时导入脚本。</p><p>同样是使用guetsfish打开镜像然后修改<code>/etc/cloud/cloud.cfg</code>文件，如下图所示：</p><p><img src="https://i.imgur.com/mdfElHS.jpg" alt=""></p><p><img src="https://i.imgur.com/Hmlwt2w.jpg" alt=""></p><p>【参考链接】</p><p>1）<a href="http://blog.csdn.net/shuaijiasanshao/article/details/51260673" target="_blank" rel="noopener">guestfish工具修改ubuntu镜像密码</a></p><p>2）<a href="https://ask.openstack.org/en/question/5531/defining-default-user-password-for-ubuntu-cloud-image/" target="_blank" rel="noopener">密码修改</a></p><p>3）<a href="https://xiexianbin.cn/openstack/2017/03/23/OpenStack-image-password-modification" target="_blank" rel="noopener">openstack镜像密码修改</a></p><p><a href="#jump0">返回文首</a></p>]]></content>
    
    <summary type="html">
    
      openstack 镜像密码修改
    
    </summary>
    
      <category term="Openstack" scheme="https://louielong.github.io/categories/Openstack/"/>
    
    
      <category term="OPNFV" scheme="https://louielong.github.io/source/tags/OPNFV/"/>
    
      <category term="Openstack" scheme="https://louielong.github.io/source/tags/Openstack/"/>
    
  </entry>
  
  <entry>
    <title>OPNFV Euphrates install（二）</title>
    <link href="https://louielong.github.io/opnfv_Euphrates_install-02.html"/>
    <id>https://louielong.github.io/opnfv_Euphrates_install-02.html</id>
    <published>2017-12-08T06:32:24.000Z</published>
    <updated>2018-09-11T06:30:35.173Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>本文详细介绍使用OPNFV 的 Fuel部署工具部署Euphrates版本。OPNFV社区从E版本开始全面采用XCI跨社区集成[1]方式，能够最快的获取并集成上游社区项目的最新代码同时可以减少等待BUG修复的时间，2017年10月Euphrates版本首发时还是基于Openstak的Ocata版本，而Ocata是在2017年2月份发布，但是到2017年8月底最新的Pike版本也发布了，由于OPNFV的版本发布周期与Openstack版本的发布周期不一致，也就意味着OPNFV的新版本永远是基于Openstack的上一个版本，OPNFV社区的测试项目将会一直滞后于Openstack的版本，在OPNFV社区引入XCI后我们看到在17年的11月份OPNFV已经支持Pike版本的虚拟POD安装。</p><p><img src="https://i.imgur.com/QEuXwvy.png" alt="OPNFV XCI"></p><p>在Danube版本时Fuel还是可视化的界面安装对于新接触OPNFV的新手或多或少还能慢慢学习研究。但是E版本的Fuel完全使用脚本命令的方式，无疑是加大了新手的入门难度以及学习难度，在研究Fuel的安装过程中遇到了许多坑也确实也学到了许多东西。</p><h2 id="2-安装环境准备"><a href="#2-安装环境准备" class="headerlink" title="2 安装环境准备"></a>2 <span id="jump0">安装环境准备</span></h2><p>社区在Fuel的安装指导[2]里介绍了如何使用Fuel安装Euphrates，但是这里不得不吐槽一下写这个wiki的人肯定认为阅读文档的人跟他一样是大神，文档写的太简单了，即使是一个环境配置的PDF（pod describe file）如果没有一定了解也是无从下手。</p><p>官方推荐的jumphost系统版本为 Ubuntu Xenial或 CentOS 7，本文采用的ubuntu 16.04 64b server版本，若采用CentOS软件安装的命令及版本名会稍有不同请自行搜索解决。</p><p>Fuel安装代码仓库：<a href="https://git.opnfv.org/fuel" target="_blank" rel="noopener">https://git.opnfv.org/fuel</a></p><p><strong>Note</strong>：部署时一定要选用最新的<code>stable/euphrates</code>稳定分支代码，该分支会持续修改部分部署BUG。</p><h3 id="2-1-POD配置文件-PDF"><a href="#2-1-POD配置文件-PDF" class="headerlink" title="2.1 POD配置文件-PDF"></a>2.1 POD配置文件-PDF</h3><p>官方给的参考POD文件是Fuel仓库里的LF(Linux Foundation)的pod1在<code>fuel/mcp/config/labs/local</code>目录下，接下来笔者以自己部署的baremetal POD来讲解PDF的内容。PDF采用Yaml格式，包含两部分文件，一部分是IDF用来描述<del>部署工具节点也叫jumphost</del>（这个地方的理解错误导致我出现了文末的<a href="#jump1">部署问题2</a>）节点的网络描述，内容相对简单，<strong>需要注意</strong>的是网卡名应与<strong>节点</strong>的网卡名称一致，一般是enoX或enpXs0，如果使用了DPDK则需要正确填写busaddr信息；另一部分是描述整个OPNFV各节点的详细网络、硬件资源等配置信息内容相对多。不熟悉Yaml格式的可以先预习一下Yaml格式：<a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/07/yaml.html</a></p><p>本次安装的PDF文件下载链接为：<a href="https://wiki.opnfv.org/download/attachments/10296292/idf-pod1.yaml?api=v2" target="_blank" rel="noopener">idf-pod1.yaml</a>，<a href="https://wiki.opnfv.org/download/attachments/10296292/pod1.yaml?api=v2" target="_blank" rel="noopener">pod1.yaml</a></p><p><code>fuel/mcp/config/labs/bii/idf-pod1.yaml</code>的内容如下，网桥的配置与后续安装执行的命令相关，网桥名字可以任取但是需要与安装时的命令参数保持一致。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># Copyright (c) 2017 BII-CFIEC, Mirantis Inc., Enea AB and others.</span></span><br><span class="line"><span class="comment"># All rights reserved. This program and the accompanying materials</span></span><br><span class="line"><span class="comment"># are made available under the terms of the Apache License, Version 2.0</span></span><br><span class="line"><span class="comment"># which accompanies this distribution, and is available at</span></span><br><span class="line"><span class="comment"># http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">### BII POD 1 installer descriptor file ###</span></span><br><span class="line"></span><br><span class="line"><span class="attr">idf:</span></span><br><span class="line"><span class="attr">  version:</span> <span class="number">0.1</span></span><br><span class="line"><span class="attr">  fuel:</span></span><br><span class="line"><span class="attr">    jumphost:</span></span><br><span class="line"><span class="attr">      bridges:</span></span><br><span class="line"><span class="attr">        admin:</span> <span class="string">'br-pxe'</span></span><br><span class="line"><span class="attr">        mgmt:</span> <span class="string">'br-ctl'</span></span><br><span class="line"><span class="attr">        private:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">        public:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    network:</span></span><br><span class="line"><span class="attr">      node:</span></span><br><span class="line">        <span class="comment"># Ordered-list, index should be in sync with node index in PDF</span></span><br><span class="line"><span class="attr">        - interfaces:</span> <span class="meta">&amp;interfaces</span></span><br><span class="line">            <span class="comment"># Ordered-list, index should be in sync with interface index in PDF</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'eno1'</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'eno2'</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'eno3'</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'eno4'</span></span><br><span class="line"><span class="attr">          busaddr:</span> <span class="meta">&amp;busaddr</span></span><br><span class="line">            <span class="comment"># Bus-info reported by `ethtool -i ethX`</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'0000:01:00.0'</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'0000:01:00.1'</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'0000:02:00.0'</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'0000:02:00.1'</span></span><br><span class="line"><span class="attr">        - interfaces:</span> <span class="meta">*interfaces</span></span><br><span class="line"><span class="attr">          busaddr:</span> <span class="meta">*busaddr</span></span><br><span class="line"><span class="attr">        - interfaces:</span> <span class="meta">*interfaces</span></span><br><span class="line"><span class="attr">          busaddr:</span> <span class="meta">*busaddr</span></span><br><span class="line"><span class="attr">        - interfaces:</span> <span class="meta">*interfaces</span></span><br><span class="line"><span class="attr">          busaddr:</span> <span class="meta">*busaddr</span></span><br><span class="line"><span class="attr">        - interfaces:</span> <span class="meta">*interfaces</span></span><br><span class="line"><span class="attr">          busaddr:</span> <span class="meta">*busaddr</span></span><br></pre></td></tr></table></figure><p><code>fuel/mcp/config/labs/bii/pod1.yaml</code>的内容如下，<em>detail</em>部分的描述属于非必填内容，<em>net_config</em>中的内容为各节点的描述信息，非常重要。可以配合拓扑图一起查看，部分配置的可选参数参考官方的<a href="https://github.com/opnfv/pharos/blob/master/config/pdf/pod1.yaml" target="_blank" rel="noopener">示例文件</a>。</p><ul><li><p><em>oob</em>指的的服务器的电源管理IP地址，Fuel安装过程中使用了Maas服务需要通过该地址去对服务器进行裸机管理，包括重启、开关机管理的，Maas是<a href="https://docs.ubuntu.com/maas/2.1/en/" target="_blank" rel="noopener">ubuntu社区</a>开发的裸机管理工具支持IPMI、虚拟机管理等，有兴趣的可以研究一下。这里也提一点这是NFV架构中针对PIM（Physical Infrastructure Management）物理基础设施的管理与Openstack的VIM(Virtual Infrastructure Management)虚拟设施管理相对。本次安装的服务器使用的是IPMI的2.0版本，这里有一个坑①是注意查看服务器的IPMI LAN 是否启用，对于DELL服务器在<code>iDRAC config-&gt;networking-&gt;IPMI config</code>，如果未开启安装时将会出现mas01节点无法连接其他节点（Ps. 这个坑我爬了三天才发现）；</p></li><li><p><em>interface</em>参数指的的该段网络使用的是哪个网卡，与<strong>idf-pod1.yaml</strong>中的<code>interfaces</code>网卡顺序以及<code>busaddr</code>严格匹配，但是oob的interface不受此参数控制；</p></li><li><p><em>vlan</em>标记该网络是否有vlan tag，如果没有则用’native’标记；</p></li><li><p><em>remote_params</em>是前面提到的IPMI管理，填入相应的IP、用户名、密码、mac地址，实际安装中该项的mac地址并没有使用到，该项的另一个参数是AMT，是英特尔的远端管理方式；</p></li><li><p>网卡特征中支持的参数是sriov和dpdk，笔者使用的服务器较老因此没有这些特性就选择空着；</p><p>剩下的一些服务器类型相关的信息，依据实际的服务器参数填写即可。需要指明的是节点的角色并不是按照配置文件中的命名来的，是按照节点的顺序来分配的依次是kvm01~03，cmp01~02，同时目前的安装方式对于节点的IP都是在指定的CIDR内随机分配的参看脚本<a href="https://github.com/opnfv/pharos/blob/master/config/installers/fuel/pod_config.yml.j2" target="_blank" rel="noopener">pod_config.yml.j2</a>。</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">### This is a BII POD1 descriptor file ###</span></span><br><span class="line"></span><br><span class="line"><span class="attr">details:</span></span><br><span class="line">  <span class="string">pod</span> <span class="attr">owner:</span> <span class="string">ylong</span></span><br><span class="line"><span class="attr">  contact:</span> <span class="string">ylong@biigroup.cn,</span> <span class="string">zjtang@biigroup.cn</span></span><br><span class="line"><span class="attr">  lab:</span> <span class="string">BII</span> <span class="string">Pharos</span> <span class="string">LAB</span></span><br><span class="line"><span class="attr">  location:</span> <span class="string">BDA,</span> <span class="string">Beijing,</span> <span class="string">China</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">development</span></span><br><span class="line"><span class="attr">  link:</span> <span class="attr">https://wiki.opnfv.org/display/pharos/BII</span></span><br><span class="line"><span class="comment">###################################################</span></span><br><span class="line"><span class="attr">net_config:</span></span><br><span class="line"><span class="attr">  oob:</span>                     <span class="comment"># IPMI management network</span></span><br><span class="line"><span class="attr">    interface:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">    ip-range:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.201</span><span class="bullet">-192.168</span><span class="number">.20</span><span class="number">.205</span></span><br><span class="line"><span class="attr">    vlan:</span> <span class="string">native</span></span><br><span class="line"><span class="attr">  admin:</span></span><br><span class="line"><span class="attr">    interface:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">    vlan:</span> <span class="string">native</span></span><br><span class="line"><span class="attr">    network:</span> <span class="number">10.20</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">    mask:</span> <span class="number">24</span></span><br><span class="line"><span class="attr">  mgmt:</span></span><br><span class="line"><span class="attr">    interface:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">    vlan:</span> <span class="number">101</span></span><br><span class="line"><span class="attr">    network:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.0</span></span><br><span class="line"><span class="attr">    mask:</span> <span class="number">24</span></span><br><span class="line"><span class="attr">  private:</span></span><br><span class="line"><span class="attr">    interface:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">    vlan:</span> <span class="number">102</span></span><br><span class="line"><span class="attr">    network:</span> <span class="number">192.168</span><span class="number">.102</span><span class="number">.0</span></span><br><span class="line"><span class="attr">    mask:</span> <span class="number">24</span></span><br><span class="line"><span class="comment">#  storage:</span></span><br><span class="line"><span class="comment">#    interface: 3</span></span><br><span class="line"><span class="comment">#    vlan: 103</span></span><br><span class="line"><span class="comment">#    network: 192.168.103.0</span></span><br><span class="line"><span class="comment">#    mask: 24</span></span><br><span class="line"><span class="attr">  public:</span></span><br><span class="line"><span class="attr">    interface:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    vlan:</span> <span class="string">native</span></span><br><span class="line"><span class="attr">    network:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.0</span></span><br><span class="line"><span class="attr">    mask:</span> <span class="number">24</span></span><br><span class="line"><span class="attr">    gateway:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span></span><br><span class="line"><span class="attr">    dns:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">114.114</span><span class="number">.114</span><span class="number">.114</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line"><span class="comment">###################################################</span></span><br><span class="line"><span class="attr">jumphost:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">fuel</span></span><br><span class="line"><span class="attr">  node:</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">baremetal</span>               <span class="comment"># can be virtual or baremetal</span></span><br><span class="line"><span class="attr">    vendor:</span> <span class="string">Dell</span> <span class="string">Inc.</span></span><br><span class="line"><span class="attr">    model:</span> <span class="string">powerEdge</span> <span class="number">720</span></span><br><span class="line"><span class="attr">    arch:</span> <span class="string">x86_64</span></span><br><span class="line"><span class="attr">    cpus:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">    cpu_cflags:</span> <span class="string">hasewell</span>          <span class="comment"># add values based on CFLAGS in GCC</span></span><br><span class="line"><span class="attr">    cores:</span> <span class="number">4</span>                      <span class="comment"># physical cores, not including hyper-threads</span></span><br><span class="line"><span class="attr">    memory:</span> <span class="number">16</span><span class="string">G</span></span><br><span class="line"><span class="attr">  disks:</span>                          <span class="comment"># disk list</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">'disk1'</span>               <span class="comment"># first disk</span></span><br><span class="line"><span class="attr">      disk_capacity:</span> <span class="number">1100</span><span class="string">G</span>        <span class="comment"># volume</span></span><br><span class="line"><span class="attr">      disk_type:</span> <span class="string">hdd</span>              <span class="comment"># several disk types possible</span></span><br><span class="line"><span class="attr">      disk_interface:</span> <span class="string">sas</span>         <span class="comment"># several interface types possible</span></span><br><span class="line"><span class="attr">      disk_rotation:</span> <span class="number">15000</span>        <span class="comment"># define rotation speed of disk</span></span><br><span class="line"><span class="attr">  os:</span> <span class="string">ubuntu-16.04</span>                <span class="comment">#operation system installed</span></span><br><span class="line"><span class="attr">  remote_params:</span> <span class="meta">&amp;remote_params</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">ipmi</span></span><br><span class="line"><span class="attr">    versions:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">2.0</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    pass:</span> <span class="string">*****</span></span><br><span class="line"><span class="attr">  remote_management:</span></span><br><span class="line">    <span class="string">&lt;&lt;:</span> <span class="meta">*remote_params</span></span><br><span class="line"><span class="attr">    address:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.200</span></span><br><span class="line"><span class="attr">    mac_address:</span> <span class="string">"44:A8:42:1A:68:78"</span></span><br><span class="line"><span class="attr">  interfaces:</span>                               <span class="comment"># physical interface list</span></span><br><span class="line"><span class="attr">    - mac_address:</span> <span class="string">"44:a8:42:15:10:03"</span></span><br><span class="line"><span class="attr">      speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">      features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    - mac_address:</span> <span class="string">"44:a8:42:15:10:04"</span></span><br><span class="line"><span class="attr">      speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">      features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    - mac_address:</span> <span class="string">"44:a8:42:15:10:05"</span></span><br><span class="line"><span class="attr">      speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">      features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    - mac_address:</span> <span class="string">"44:a8:42:15:10:06"</span></span><br><span class="line"><span class="attr">      speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">      features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">  fixed_ips:</span></span><br><span class="line"><span class="attr">    admin:</span> <span class="number">10.10</span><span class="number">.0</span><span class="number">.2</span></span><br><span class="line"><span class="attr">    mgmt:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.2</span></span><br><span class="line"><span class="attr">    public:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.235</span></span><br><span class="line"><span class="comment">###################################################</span></span><br><span class="line"><span class="attr">nodes:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">controller1</span></span><br><span class="line"><span class="attr">    node:</span> <span class="meta">&amp;nodeparas</span></span><br><span class="line"><span class="attr">      type:</span> <span class="string">baremetal</span></span><br><span class="line"><span class="attr">      vendor:</span> <span class="string">Dell</span> <span class="string">Inc.</span></span><br><span class="line"><span class="attr">      model:</span> <span class="string">powerEdge</span> <span class="number">720</span></span><br><span class="line"><span class="attr">      arch:</span> <span class="string">x86_64</span></span><br><span class="line"><span class="attr">      cpus:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">      cpu_cflags:</span> <span class="string">hasewell</span>        <span class="comment"># add values based on CFLAGS in GCC</span></span><br><span class="line"><span class="attr">      cores:</span> <span class="number">4</span>                    <span class="comment"># physical cores, not including hyper-threads</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">32</span><span class="string">G</span></span><br><span class="line"><span class="attr">    disks:</span> <span class="meta">&amp;disks_A</span>               <span class="comment"># disk list</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">'disk1'</span>             <span class="comment"># first disk</span></span><br><span class="line"><span class="attr">        disk_capacity:</span> <span class="number">128</span><span class="string">G</span>       <span class="comment"># volume</span></span><br><span class="line"><span class="attr">        disk_type:</span> <span class="string">ssd</span>            <span class="comment"># several disk types possible</span></span><br><span class="line"><span class="attr">        disk_interface:</span> <span class="string">sas</span>       <span class="comment"># several interface types possible</span></span><br><span class="line"><span class="attr">        disk_rotation:</span> <span class="number">15000</span>      <span class="comment"># define rotation speed of disk</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">'disk2'</span>             <span class="comment"># second disk</span></span><br><span class="line"><span class="attr">        disk_capacity:</span> <span class="number">2400</span><span class="string">G</span></span><br><span class="line"><span class="attr">        disk_type:</span> <span class="string">hdd</span></span><br><span class="line"><span class="attr">        disk_interface:</span> <span class="string">sas</span></span><br><span class="line"><span class="attr">        disk_rotation:</span> <span class="number">15000</span></span><br><span class="line"><span class="attr">    remote_management:</span></span><br><span class="line">      <span class="string">&lt;&lt;:</span> <span class="meta">*remote_params</span></span><br><span class="line"><span class="attr">      address:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.203</span></span><br><span class="line"><span class="attr">      mac_address:</span> <span class="string">"44:A8:42:1A:49:A5"</span></span><br><span class="line"><span class="attr">    interfaces:</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:cd:0d"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:cd:0e"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        feature:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:cd:0f"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        feature:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:cd:10"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        feature:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    fixed_ips:</span></span><br><span class="line"><span class="attr">      admin:</span> <span class="number">10.20</span><span class="number">.0</span><span class="number">.16</span></span><br><span class="line"><span class="attr">      mgmt:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.16</span></span><br><span class="line"><span class="attr">      public:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.16</span></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">controller2</span></span><br><span class="line"><span class="attr">    node:</span> <span class="meta">*nodeparas</span></span><br><span class="line"><span class="attr">    disks:</span> <span class="meta">*disks_A</span></span><br><span class="line"><span class="attr">    remote_management:</span></span><br><span class="line">      <span class="string">&lt;&lt;:</span> <span class="meta">*remote_params</span></span><br><span class="line"><span class="attr">      address:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.204</span></span><br><span class="line"><span class="attr">      mac_address:</span> <span class="string">"44:A8:42:1A:76:2C"</span></span><br><span class="line"><span class="attr">    interfaces:</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:15:1b:e6"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:15:1b:e7"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        feature:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:15:1b:e8"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        feature:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:15:1b:e9"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        feature:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    fixed_ips:</span></span><br><span class="line"><span class="attr">      admin:</span> <span class="number">10.20</span><span class="number">.0</span><span class="number">.17</span></span><br><span class="line"><span class="attr">      mgmt:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.17</span></span><br><span class="line"><span class="attr">      public:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.17</span></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">controller3</span></span><br><span class="line"><span class="attr">    node:</span> <span class="meta">*nodeparas</span></span><br><span class="line"><span class="attr">    disks:</span> <span class="meta">*disks_A</span></span><br><span class="line"><span class="attr">    remote_management:</span></span><br><span class="line">      <span class="string">&lt;&lt;:</span> <span class="meta">*remote_params</span></span><br><span class="line"><span class="attr">      address:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.205</span></span><br><span class="line"><span class="attr">      mac_address:</span> <span class="string">"44:A8:42:13:D5:1B"</span></span><br><span class="line"><span class="attr">    interfaces:</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:fc:1a"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:fc:1b"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        feature:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:fc:1c"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        feature:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:fc:1d"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        feature:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    fixed_ips:</span></span><br><span class="line"><span class="attr">      admin:</span> <span class="number">10.20</span><span class="number">.0</span><span class="number">.18</span></span><br><span class="line"><span class="attr">      mgmt:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.18</span></span><br><span class="line"><span class="attr">      public:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.18</span></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">compute1</span></span><br><span class="line"><span class="attr">    node:</span> <span class="meta">*nodeparas</span></span><br><span class="line"><span class="attr">    disks:</span> <span class="meta">*disks_A</span></span><br><span class="line"><span class="attr">    remote_management:</span></span><br><span class="line">      <span class="string">&lt;&lt;:</span> <span class="meta">*remote_params</span></span><br><span class="line"><span class="attr">      address:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.201</span></span><br><span class="line"><span class="attr">      mac_address:</span> <span class="string">"44:A8:42:1A:70:BE"</span></span><br><span class="line"><span class="attr">    interfaces:</span>                           <span class="comment"># physical interface list</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:ee:64"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:ee:65"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:ee:66"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:ee:67"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    fixed_ips:</span></span><br><span class="line"><span class="attr">      admin:</span> <span class="number">10.10</span><span class="number">.0</span><span class="number">.14</span></span><br><span class="line"><span class="attr">      mgmt:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.14</span></span><br><span class="line"><span class="attr">      public:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.14</span></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">compute2</span></span><br><span class="line"><span class="attr">    node:</span> <span class="meta">*nodeparas</span></span><br><span class="line"><span class="attr">    disks:</span> <span class="meta">*disks_A</span></span><br><span class="line"><span class="attr">    remote_management:</span></span><br><span class="line">      <span class="string">&lt;&lt;:</span> <span class="meta">*remote_params</span></span><br><span class="line"><span class="attr">      address:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.202</span></span><br><span class="line"><span class="attr">      mac_address:</span> <span class="string">"44:A8:42:1A:76:26"</span></span><br><span class="line"><span class="attr">    interfaces:</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:cb:31"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:cb:32"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:cb:33"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">      - mac_address:</span> <span class="string">"44:a8:42:14:cb:34"</span></span><br><span class="line"><span class="attr">        speed:</span> <span class="number">1</span><span class="string">gb</span></span><br><span class="line"><span class="attr">        features:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    fixed_ips:</span></span><br><span class="line"><span class="attr">      admin:</span> <span class="number">10.20</span><span class="number">.0</span><span class="number">.15</span></span><br><span class="line"><span class="attr">      mgmt:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.15</span></span><br><span class="line"><span class="attr">      public:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.15</span></span><br></pre></td></tr></table></figure><p><em>坑①</em>：如下图所示：</p><p><img src="https://i.imgur.com/CCTp99A.jpg" alt="IPMI设置"></p><p>需要开启IPMI的LAN，另外还有一点关于密钥的，我的某一台服务器的不是<code>0000000000000000000000000000000000000000</code>，出现过maas无法连接节点的情况。</p><p>本次安装的拓扑图如下</p><p><img src="https://wiki.opnfv.org/download/attachments/10296292/Pharos-topo.jpg?api=v2" alt="topo"></p><h3 id="2-2-安装过程"><a href="#2-2-安装过程" class="headerlink" title="2.2 安装过程"></a>2.2 安装过程</h3><h4 id="2-2-1-网桥配置"><a href="#2-2-1-网桥配置" class="headerlink" title="2.2.1 网桥配置"></a>2.2.1 网桥配置</h4><p>配置jumphost的网桥保证运行其上的虚拟机与其它物理节点的联通，必要的网桥是pxe和ctl，public的网桥可以不用设置，脚本会主动添加nat转换。可以直接在<code>/etc/network/interfaces</code>中配置网桥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and how to activate them. For more information, see interfaces(5).</span></span><br><span class="line"></span><br><span class="line">source /etc/network/interfaces.d/*</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The loopback network interface</span></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet manual</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The primary network interface</span></span><br><span class="line">auto eth1</span><br><span class="line">iface eth1 inet static</span><br><span class="line">address 192.168.20.5</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">network 192.168.20.0</span><br><span class="line">broadcast 192.168.20.255</span><br><span class="line">gateway 192.168.20.1</span><br><span class="line"><span class="meta">#</span><span class="bash"> dns-* options are implemented by the resolvconf package, <span class="keyword">if</span> installed</span></span><br><span class="line">dns-nameservers 114.114.114.114</span><br><span class="line">iface eth1 inet6 auto</span><br><span class="line"></span><br><span class="line">auto eth2</span><br><span class="line">iface eth2 inet manual</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">auto eth3</span></span><br><span class="line"><span class="meta">#</span><span class="bash">iface eth3 inet manual</span></span><br><span class="line"></span><br><span class="line">auto br-pxe</span><br><span class="line">iface br-pxe inet static</span><br><span class="line">address 10.20.0.1</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">bridge_ports eth0</span><br><span class="line">bridge_fd 0</span><br><span class="line"></span><br><span class="line">auto br-ctl</span><br><span class="line">iface br-ctl inet manual</span><br><span class="line">bridge_ports eth2</span><br><span class="line">bridge_fd 0</span><br></pre></td></tr></table></figure><p>网桥拓扑如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bridge namebridge id STP enabledinterfaces</span><br><span class="line">br-ctl8000.000c2948cc74no    eth2</span><br><span class="line">br-pxe8000.000c2948cc60no    eth0</span><br></pre></td></tr></table></figure><p><em>PS</em>：之前采用过在EXSI虚拟机之上安装ubuntu16.04作为jumphost然后进行部署，部署过程中出现过mas01的dhcp应答node节点无法收到的情况导致安装一直不成功，最后不得使用裸机安装ubuntu16.04然后在进行部署（这个坑爬了一个星期，因为一直怀疑是自己的网桥配置错误），这里并不确认是否在虚拟机上一定无法部署成功只是写出来留意一下。</p><h4 id="2-2-2-运行部署脚本"><a href="#2-2-2-运行部署脚本" class="headerlink" title="2.2.2 运行部署脚本"></a>2.2.2 运行部署脚本</h4><p>将准备好的PDF文件放置在<code>opnfv/fuel/mcp/config</code>下的目录中，安装脚本会自动查找相应PDF文件，可以使用<code>ci/deploy.sh -h</code>命令来查看个参数的含义，上一篇文章也讲解了各参数的含义。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ci/deploy.sh -D -b file:///home/opnfv/fuel/mcp/config/ \</span><br><span class="line">-l bii -p pod1 -s os-odl-nofeature-ha -B br-pxe,br-ctl</span><br></pre></td></tr></table></figure><p>部署策略的配置在<code>mcp/config/scenario/baremetal</code>目录中查看，默认分配给安装时的虚拟机cfg01和mas01的资源是4核、6G内存，若jumphost的资源较足可以适当扩大安装虚拟机分配的资源。Fuel的安装过程中会调用<code>fuel/mcp/scripts</code>下的相关脚本完成具体的安装任务，其中<code>lisb.sh</code>负责相关的网络配置等，<code>globals.sh</code>是一个全局变量配置文件，由于之前使用Danube版本的fuel安装时习惯了将openstack各节点的管理IP分配到10.20.0.0/24段因此为了避免与Fuel安装过程中的虚拟机冲突这里修改了默认的mcpcontrol虚拟机网络段。</p><p>安装过程中jumphost的cfg01(10.0.0.2)是用来下发安装时的相关配置的以及同步文件，mas01(10.0.0.3)是用来进行裸机管理的。使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.3</span><br></pre></td></tr></table></figure><p>可以查看安装过程的状态，尤其是mas01的裸机管理，如果相应的配置没有设置好需要在这里排错，在mas01的<code>/var/lib/maas</code>目录下（若无该目录说明Maas服务未安装，需要等待一段时间），当Maas服务安装后可以使用<code>tail -f /var/log/maas/maas.log</code>查看各节点的安装状态，同时可以登录Maas的web界面查看各节点的状态。登录方式有<strong>两种</strong>：</p><p>1) jumphost中做NAT转发</p><p>关于nat转发不熟悉的可以查看这篇<a href="http://xstarcd.github.io/wiki/Linux/iptables_forward_internetshare.html" target="_blank" rel="noopener">博客</a>，博客中关于ipatables讲解十分详细。本文中192.168.20.5为jumphost的public IP，既可以访问外网也可以与局域网其他主机访问，10.20.0.1/24为jumphost 部署OPNFV环境的PXE网桥地址，仅限OPNFV环境的各节点访问。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -d 192.168.20.5 -p tcp --dport 80 -j DNAT --to 10.20.0.3:80</span><br><span class="line">iptables -A FORWARD -d 10.20.0.3 -p tcp --dport 80 -j ACCEPT</span><br><span class="line">iptables -t nat -A POSTROUTING -d 10.20.0.3 -p tcp --dport 80 -j SNAT --to 10.20.0.1</span><br></pre></td></tr></table></figure><p>在本机上访问<a href="http://192.168.20.5:8000/MAAS" target="_blank" rel="noopener">http://192.168.20.5:8000/MAAS</a></p><p>账号/密码：opnfv/opnfv_secret,即可查看。</p><p>2) 终端开启隧道</p><p>该方式如上一篇虚拟安装中讲解到，添加一个本机的80端口到mas01的80端口映射即可。访问本机的<a href="http://localhost/MAAS/" target="_blank" rel="noopener">http://localhost/MAAS/</a></p><p><img src="https://i.imgur.com/jBeEhzU.jpg" alt="Maas端口映射"></p><p>MAAS的dashboard会显示安装过程以及各节点的信息。</p><p><img src="https://i.imgur.com/5U7FW5X.jpg" alt="安装过程"></p><h4 id="2-2-3-修改虚拟机登录密码"><a href="#2-2-3-修改虚拟机登录密码" class="headerlink" title="2.2.3 修改虚拟机登录密码"></a>2.2.3 修改虚拟机登录密码</h4><p>1）简单的修改密码</p><p>部署过程中生成的虚拟机只能使用ssh+key的方式登录，因此需要修改一下密码方便后续的登录，使用下面的命令修改密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.3 "sudo passwd root&lt;&lt;EOF</span><br><span class="line">r00tme</span><br><span class="line">r00tme</span><br><span class="line">EOF"</span><br></pre></td></tr></table></figure><p>2）修改密码和运行ssh密码登录</p><p>登录脚本准备<code>cat node_init.sh</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">########################################################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> File Name: ubuntu_init_conf.sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Author: louie.long</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Mail: ylong@biigroup.cn</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Created Time: Thu 26 Oct 2017 11:09:05 AM CST</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Description: 这个脚本用于修改新建ubuntu系统的配置，</span></span><br><span class="line"><span class="meta">#</span><span class="bash">              包括：root密码（r00tme），允许ssh密码登录</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">########################################################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh -e</span></span><br><span class="line"></span><br><span class="line">sudo su</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#######################################################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Begin of check file exist and backup file</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line">check_file_and_backup() &#123;</span><br><span class="line">    if [ ! -f "$1" ]; then</span><br><span class="line">        echo "$1 is not exist"</span><br><span class="line">        return 0</span><br><span class="line">    else</span><br><span class="line">        cp $1 $1-backup`date +%y%m%d_%H%M`</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># End of check file exist and backup file</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#######################################################################</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#######################################################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Begin of modify ssh config</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line">modify_ssh_conf() &#123;</span><br><span class="line">    check_file_and_backup /etc/ssh/sshd_config</span><br><span class="line">    ret=$?</span><br><span class="line">    if [ $ret -eq 1 ]; then</span><br><span class="line">        sed -i 's/^.*PermitRootLogin.*$/PermitRootLogin yes/g' \</span><br><span class="line">            /etc/ssh/sshd_config</span><br><span class="line">        sed -i 's/^.*PasswordAuthentication.*$/PasswordAuthentication yes/g' \</span><br><span class="line">            /etc/ssh/sshd_config</span><br><span class="line">        service ssh restart</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># End of modify ssh config</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#######################################################################</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#######################################################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Begin of change root passwd to 'r00tme'</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line">change_root_passwd()</span><br><span class="line">&#123;</span><br><span class="line">passwd root&lt;&lt;EOF</span><br><span class="line">r00tme</span><br><span class="line">r00tme</span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># End of change root passwd to 'r00tme'</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#######################################################################</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#######################################################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Begin of main</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">set</span> -x</span></span><br><span class="line">modify_ssh_conf</span><br><span class="line">change_root_passwd</span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># End of main</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#######################################################################</span></span></span><br></pre></td></tr></table></figure><p>然后运行以下命令后，即可直接使用密码进行ssh登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.2 &lt; node_init.sh</span><br></pre></td></tr></table></figure><p>各虚拟机的IP可以在<code>fuel/mcp/deploy/images/pod_config.yml</code>中查看或在任意虚拟机的<code>/etc/hosts</code>中查看，登陆http://<proxy vip="">:8090页面也可查看各节点及相关服务的信息，<code>Proxy vip</code>与openstack的dashboard访问IP一致。</proxy></p><h3 id="2-3-部署中出现的问题"><a href="#2-3-部署中出现的问题" class="headerlink" title="2.3 部署中出现的问题"></a>2.3 部署中出现的问题</h3><p>部署过程中如果发现不太正常的情况可以对比一下OPNFV官方<a href="https://build.opnfv.org/ci/view/fuel/job/fuel-deploy-baremetal-daily-euphrates/" target="_blank" rel="noopener">Jeklins</a>的构建历史日志，便于确认问题所在。</p><p><img src="https://i.imgur.com/pzsiLmn.jpg" alt=""></p><p>1)部署超时</p><p>如果部署过程中在maas.log中出现部署超时如下所示，可能是软件安装未完成或者其他安装操作耗时超过设置的15分钟</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Dec 13 09:27:00 mas01 maas.node: [error] kvm01: Marking node failed: Node operation &apos;Deploying&apos; timed out after 15 minutes.</span><br></pre></td></tr></table></figure><p>可以修改<code>mcp/patches/0010-maas-region-allow-timeout-override.patch</code>文件第46行适当延长deploy时间，如果延长时间仍然有问题这需要依据maas.log再次排查错误了。</p><p><em>2018年1月20日更新</em>：官方已经将此处的部署时间做了适当延长，<code>git show f25c19f7a3f90</code>查看。</p><p>2)<span id="jump1">节点网卡名配置</span></p><p><em>2017年12月21日更新</em></p><p>部署过程中脚本提示如下信息，经过对比官方的构建历史日志，如下信息输出是正常的，但是等待时间太长，就可能出现问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmp002.baremetal-mcp-ocata-odl-ha.local:</span><br><span class="line">    Minion did not return. [Not connected]</span><br><span class="line">.kvm01.baremetal-mcp-ocata-odl-ha.local:</span><br><span class="line">    Minion did not return. [Not connected]</span><br><span class="line">kvm03.baremetal-mcp-ocata-odl-ha.local:</span><br><span class="line">    Minion did not return. [Not connected]</span><br></pre></td></tr></table></figure><p>登录到相应节点（<del>需要注意的是节点的登录与mas01的登录一样是使用密钥登录的，不能通过密码直接登录，因此需要在节点安装系统时就尝试登录进去修改密码，否则一旦出现上述错误可能没法通过ssh登录只能在终端输入用户密码登录</del>，此时还可以通过在cfg01节点上用salt-stack的命令来查看各节点信息，如<code>salt -C &quot;ctl* or cmp*&quot; cmd.run &quot;ifconfig -a&quot;</code>）查看网卡信息，本次出现的问题是节点在自动配置网络后没有PXE/admin的IP，打开<code>/etc/network/interfaces</code>发现其配置的网卡名为<code>ethX</code>而节点的网卡名为<code>enoX</code>，因此需要修改部署PDF中idf-pod1.yaml中的网卡名称，</p><p>3）openstack的dashboard无法访问</p><p>部署完成后再访问dashboard时出现无法访问的情况，查找了一下发现是代理虚拟机prx不正常，尝试ssh登录prx，无法访问（原因是代理虚拟机内没有传入密钥）。登录到相应的控制节点上使用virsh list查看虚拟机名称，尝试通过<code>virsh reboot prx02.baremetal-mcp-ocata-odl-ha.local</code>后发现可以访问dashboard。至于prx的访问可以使用<code>virsh console prx02.baremetal-mcp-ocata-odl-ha.local</code>免密访问。</p><p><strong>安装完成就可以愉快的玩耍了，初次安装会有一些麻烦，一旦安装完成后续的重新部署就会简单许多。</strong></p><p><a href="#jump0">返回文首</a></p><p>参考文献：</p><p>1)<a href="http://docs.opnfv.org/en/latest/submodules/releng-xci/docs/xci-overview.html#xci-overview" target="_blank" rel="noopener">OPNFV XCI 介绍</a></p><p>2)<a href="http://docs.opnfv.org/en/stable-euphrates/submodules/fuel/docs/release/installation/installation.instruction.html#top-of-the-rack-tor-configuration-requirements" target="_blank" rel="noopener">Fuel install guide</a></p>]]></content>
    
    <summary type="html">
    
      OPNFV Euphrates on baremetal
    
    </summary>
    
      <category term="OPNFV" scheme="https://louielong.github.io/categories/OPNFV/"/>
    
    
      <category term="OPNFV" scheme="https://louielong.github.io/source/tags/OPNFV/"/>
    
      <category term="Euphrates" scheme="https://louielong.github.io/source/tags/Euphrates/"/>
    
  </entry>
  
  <entry>
    <title>OPNFV Euphrates 安装（一）</title>
    <link href="https://louielong.github.io/opnfv_Euphrates_install-01.html"/>
    <id>https://louielong.github.io/opnfv_Euphrates_install-01.html</id>
    <published>2017-10-31T07:05:57.000Z</published>
    <updated>2018-09-12T09:51:08.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Euphrates新特性介绍"><a href="#1-Euphrates新特性介绍" class="headerlink" title="1 Euphrates新特性介绍"></a>1 Euphrates新特性介绍</h2><p>OPNFV社区于2017年10月24发布的第五个版本Euphrates（幼发拉底河，位于亚洲），新版本增加了对<strong><em>Kubernetes</em></strong>容器技术的支持，也就是说OPNFV的底层VIM不再仅仅是Openstack架构了，同时社区采用了<strong><em><a href="http://docs.opnfv.org/en/latest/submodules/releng-xci/docs/xci-overview.html#xci-overview" target="_blank" rel="noopener">XCI</a></em></strong>（cross community continuous integration）跨社区持续集成技术，能够更快更好的使用上游社区最新的版本和代码，在MANO管理层集成了ETSI NFV的<strong><em>Open Baton</em></strong>项目。E版本的详细新特性如下[1][2]：</p><ul><li>底层架构增加：OPNFV即将开启容器之旅。Euphrates将Kubernetes和容器集成到端到端堆栈的多个组件，以及通过Kolla部署容器化OpenStack的能力，Kolla提供生产就绪的容器和部署工具，用于运行可扩展、快速、可靠的OpenStack云，并使用社区最佳实践升级。这些增强功能可以更轻松地管理基础设施、支持NFV中的原生云网络应用，以及轻权重控制平面功能，为运营商支持5G和IoT奠定基础。</li><li>XCI持续集成：能够与最新的上游开源项目集成。在OPNFV第四个版本Danube中持续集成/持续部署（CI/CD）集成工作的基础上，Euphrates在OPNFV、OpenStack、OpenDaylight和FD.io中引入了XCI集成CI/CD管道的实现。OPNFVC CI管道并不需要官方的稳定版本，而是集成了上游项目的最新代码，以更快地解决错误并验证功能。这减少了新功能反馈和错误修复的时间，大大提升了创新的速度。XCI还可实现多分布式支持，促进开发人员之间的联系。</li><li>电信级功能。通过整合Calipso项目，运营商现在可以对其复杂的虚拟网络进行可视化操作。结合现有的Barometer and Doctor项目中的遥测增强功能，用户可以获得强大的服务保障架构。Euphrates还包括ARM架构的性能改进，以及FD.io的3层性能。此外，Euphrates通过Moon给用户带来新的安全的管理功能，持续改进了服务功能链（SFC）、FD.io、EVPN性能。Euphrates还将OVN网络虚拟化项目以及最新版本的其他上游项目整合在一起，为网络控制提供额外的选择。</li><li>测试和集成功能增强：OPNFV集成和测试工作提供广泛的工具来测试NFV云、VNF和完整的网络服务方面取得了重大进展。包括Sample VNF在内的新项目提供对VIM/NFVI层的测试，以及接近实际应用工作负载的应用程序。NFVBench项目提供了端到端数据平台基准测试架构。</li></ul><h2 id="2-Euphrates-安装"><a href="#2-Euphrates-安装" class="headerlink" title="2 Euphrates 安装"></a>2 Euphrates 安装</h2><h3 id="2-1-配置要求"><a href="#2-1-配置要求" class="headerlink" title="2.1 配置要求"></a>2.1 配置要求</h3><p>官方对于虚拟部署的配置要求如下</p><table><thead><tr><th>硬件</th><th>配置需求</th></tr></thead><tbody><tr><td>1 Jumpserver</td><td>1个物理的节点用于安装Salt Master虚拟机和其他节点的虚拟机</td></tr><tr><td>CPU</td><td>最少一个插槽并且支持虚拟化</td></tr><tr><td>RAM</td><td>最小32G内存（与VNF的工作负载有关）</td></tr><tr><td>Disk</td><td>最小100G（SSD或者HDD（15k rpm最佳））</td></tr></tbody></table><p>本文采用fuel部署脚本在一个服务器上部署虚拟POD，硬件配置及系统如下</p><ul><li>Dell R720服务器，8核E5-2609，24G内存</li><li>ubuntu 16.06 server，8 cpu，24G内存，300G磁盘</li></ul><p>本文中将称ubuntu 16.04系统为host。</p><h3 id="2-1-部署前准备"><a href="#2-1-部署前准备" class="headerlink" title="2.1 部署前准备"></a>2.1 部署前准备</h3><h4 id="2-1-1-CPU开启KVM虚拟化"><a href="#2-1-1-CPU开启KVM虚拟化" class="headerlink" title="2.1.1 CPU开启KVM虚拟化"></a>2.1.1 CPU开启KVM虚拟化</h4><p>本次安装使用的是在ESXI上安装的虚拟机，需要开启CPU的KVM虚拟化支持</p><p><img src="https://i.imgur.com/Xo9eSSj.jpg" alt=""></p><h4 id="2-1-2-虚拟机管理工具virsh"><a href="#2-1-2-虚拟机管理工具virsh" class="headerlink" title="2.1.2 虚拟机管理工具virsh"></a>2.1.2 虚拟机管理工具virsh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -y install libvirt-bin</span><br></pre></td></tr></table></figure><p><em>2017年12月12日更新</em>：社区最新的代码中已经添加了libvirt的安装，将安装过程调整为先安装libvirt后做<code>virsh list</code>的检查，因此该步骤安装可以省略。</p><p><em>可选步骤</em>：在国内为了加快部署进度，可以修改host上软件源将软件源替换为<a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/" title=" 清华源" target="_blank" rel="noopener">清华源</a></p><p>修改<code>/etc/apt/source.list</code>文件内容全部替换为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>替换完成之后运行<code>sudo apt-get update</code></p><h3 id="2-2-fuel脚本部署Euphrates"><a href="#2-2-fuel脚本部署Euphrates" class="headerlink" title="2.2 fuel脚本部署Euphrates"></a>2.2 fuel脚本部署Euphrates</h3><p>下载x86版本fuel部署脚本并切换至5.02版本分支[3]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://git.opnfv.org/fuel</span><br><span class="line">git checkout opnfv-5.0.2</span><br></pre></td></tr></table></figure><p><em>2017年12月12日更新</em>：由于XCI的特性，社区的代码实时更新，使用<code>git fetch origin stable/euphrates &amp;&amp; git checkout stable/euphrates</code>切换至Euphrates的最新稳定版代码，然后再部署。</p><p><em>Note</em>：最开始尝试部署时由于内存只有8G出现过未部署成功，因此需要适当削减部署时的配置，修改<code>fuel/mcp/config/scenario/defaults-x86_64.yaml</code>中ram的大小，以及<code>mcp/config/scenario/virtual/os-nosdn-nofeature-noha.yaml</code>中ram的大小，甚至可以减少一个计算节点<code>cmp02</code>。</p><p>最简单的虚拟部署方式命令如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ci/deploy.sh -D -p virtual_kvm -l localhost -s os-nosdn-nofeature-noha</span><br></pre></td></tr></table></figure><p>使用<code>deploy -h</code>可以常看使用帮助，常用的参数说明如下</p><table><thead><tr><th>-b</th><th>指定部署配置的目录可以使用本地文件和远程链接，配置文件的路径格式为<code>&lt;base-uri&gt;/labs/&lt;lab-name&gt;/&lt;pod-name&gt;.yaml</code>,默认路径为<code>./mcp/config</code></th></tr></thead><tbody><tr><td>-l</td><td>指明使用配置目录下哪个实验室的配置文件，如<code>-l lf</code>为使用linux基金会实验室的配置文件。当使用虚拟部署时甚至<code>-l</code>参数都可以不使用</td></tr><tr><td>-p</td><td>指明使用实验室下的哪一个POD，如<code>-p pod2</code></td></tr><tr><td>-s</td><td>指明使用哪种部署场景，如<code>-s os-nosdn-nofeature-noha</code>指使用openstack作为VIM，不采用sdn控制器，无其他特性，不使用ha。其他场景可以在<code>fuel/mcp/config/scenario/</code>下看到</td></tr></tbody></table><p>使用ssh登录到生成的虚拟机中,登录虚拟机后使用<code>sudo su</code>命令即可切换成root用户。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.20.0.2</span><br></pre></td></tr></table></figure><p>本次部署过程中并未指定节点的相关信息因此诸如控制节点、计算节点等信息是随机生成，在接下来的第二篇详细介绍。</p><h3 id="2-3-dashboard的访问"><a href="#2-3-dashboard的访问" class="headerlink" title="2.3 dashboard的访问"></a>2.3 dashboard的访问</h3><p>由于部署的是虚拟环境，各网络都是内部网络（internal network）因此需要做路由转换才能够正常访问。</p><p>首先需要找到控制节点的IP通过登录到配置节点cfg01查找其他节点，使用<code>arp -a</code>命令可以看到其他节点的IP。</p><p><img src="https://i.imgur.com/t09x2yW.jpg" alt="其它节点IP"></p><p>登录到ctl01节点上查看文件<code>/etc/apache2/conf-available/openstack-dashboard.conf</code>可以得知dashboard页面的监听端口为8078。</p><p>访问dashboard的方式有<strong>两种</strong>，第一种是在host上做端口映射；第二种是通过putty、xshell等终端登录工具做隧道。不管哪种方式由于fuel在部署时防火墙的配置中多了一些选项需要先对iptables做一些修改。</p><p>首先在host上备份防火墙规则<code>iptables-save &gt; rule.v4</code>,然后打开rule.v4修改<code>-A FORWARD -d 10.20.0.0/24 -o mcpcontrol -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</code>为<code>-A FORWARD -d 10.20.0.0/24 -o mcpcontrol -j ACCEPT</code>，随后重新加载防火墙规则<code>iptables-restore rule.v4</code>。</p><h4 id="2-3-1-隧道方式访问"><a href="#2-3-1-隧道方式访问" class="headerlink" title="2.3.1 隧道方式访问"></a>2.3.1 隧道方式访问</h4><p>打开终端的配置页面增加隧道条目，如图所示将本机的8000端口映射到控制节点的8078端口</p><p><img src="https://i.imgur.com/D1CDnUI.jpg" alt="隧道配置"></p><p>随后在本机的浏览器输入<code>127.0.0.1:8000</code>即可访问dashboard，<strong>账户/密码：admin/opnfv_secret</strong>。密码存放在控制节点的<code>/etc/keystone/keystone.conf</code>文件中，为<code>admin_token</code>参数的值。</p><h4 id="2-3-2-host端口映射方式访问"><a href="#2-3-2-host端口映射方式访问" class="headerlink" title="2.3.2 host端口映射方式访问"></a>2.3.2 host端口映射方式访问</h4><p>在host上的防火墙规则中添加一个端口映射，<code>iptables -t nat -A PREROUTING -d 192.168.2.235 -p tcp --dport 8000 -j DNAT --to-destination 10.20.0.118:8078</code>，随后直接访问host主机的8000端口即可登录dashboard。</p><p><strong>参考链接</strong>：</p><p>1)<a href="https://www.opnfv.org/software" target="_blank" rel="noopener">OPNFV官方WIKI</a></p><p>2)<a href="http://www.sdnlab.com/20009.html" target="_blank" rel="noopener">OPNFV 第五个版本发布</a></p><p>3)<a href="http://docs.opnfv.org/en/stable-euphrates/submodules/fuel/docs/release/installation/installation.instruction.html" target="_blank" rel="noopener">Euphrates安装手册</a></p>]]></content>
    
    <summary type="html">
    
      OPNFV Euphrates
    
    </summary>
    
      <category term="OPNFV" scheme="https://louielong.github.io/categories/OPNFV/"/>
    
    
      <category term="OPNFV" scheme="https://louielong.github.io/source/tags/OPNFV/"/>
    
      <category term="Euphrates" scheme="https://louielong.github.io/source/tags/Euphrates/"/>
    
  </entry>
  
  <entry>
    <title>CVP 项目说明</title>
    <link href="https://louielong.github.io/OPNFV%E6%B5%8B%E8%AF%95%E9%A1%B9%E7%9B%AE-Dovetail.html"/>
    <id>https://louielong.github.io/OPNFV测试项目-Dovetail.html</id>
    <published>2017-09-27T09:10:13.000Z</published>
    <updated>2018-09-12T09:51:08.845Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>NOTE</em></strong>：本文以 CVP  dovetail的0.6版本为例来讲解dovetail项目的使用，随着dovetail版本的升级使用的命令和配置会有所改变。（2017年9月8日）</p><p>修改1：0.6版本升级到0.9，部分内容作出更新（2017年11月13日）</p><p><strong>摘要</strong>:本文主要介绍如何使用OPNFV的Dovetail项目进行NFV基础设施NFVI&amp;VIM的测试。</p><a id="more"></a><p>OPNFV的CVP（Compliance Verification Program）一致性认证项目</p><h2 id="1-Dovetail-安装"><a href="#1-Dovetail-安装" class="headerlink" title="1.Dovetail 安装"></a>1.Dovetail 安装</h2><p>dovetail 可以运行在实体机(bare metal)，可以运行在虚拟机中。dovetail可以使用源码来安装也可以使用docker环境，建议使用docker来安装。为了环境部署方便以及更快的熟悉该项目，本文采用 docker 环境来安装和使用 dovetail 。</p><h3 id="1-1-准备相应的测试代码"><a href="#1-1-准备相应的测试代码" class="headerlink" title="1.1 准备相应的测试代码"></a>1.1 准备相应的测试代码</h3><p>由于dovetail测试项目需要使用OPNFV中的其他测试项目代码，因此还需要functest、yardstick等项目。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker pull opnfv/dovetail:cvp.0.6.0</span><br><span class="line">docker pull opnfv/functest:cvp.0.5.0</span><br><span class="line">docker pull opnfv/yardstick:danube.3.2</span><br><span class="line">docker pull opnfv/bottlenecks:cvp.0.4.0</span><br><span class="line">wget -nc http://artifacts.opnfv.org/sdnvpn/ubuntu-16.04-server-cloudimg-amd64-disk1.img -P .</span><br><span class="line">wget -nc http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img -P .</span><br></pre></td></tr></table></figure><p>dovetail可以在离线环境下进行测试，前提是需要先保存以上的docker镜像。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker save -o dovetail.tar opnfv/dovetail:cvp.0.6.0 opnfv/functest:cvp.0.5.0 \</span><br><span class="line">opnfv/yardstick:danube.3.2 opnfv/bottlenecks:cvp.0.4.0</span><br></pre></td></tr></table></figure><h3 id="1-2-配置-dovetail-运行环境"><a href="#1-2-配置-dovetail-运行环境" class="headerlink" title="1.2 配置 dovetail 运行环境"></a>1.2 配置 dovetail 运行环境</h3><p>首先创建一个dovetail的相关文件存放的目录<code>${DOVETAIL_HOME}/pre_config</code>，这里以<code>/root/dovetail</code>为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export DOVETAIL_HOME=/home/dovetail</span><br></pre></td></tr></table></figure><p>将之前的镜像文件保存在<code>pre_config</code>目录下，并在该目录下创建<code>env_config.sh</code>文件，并填入一下内容。需要指出的是dovetail CVP中不在需要<code>INSTALL_IP</code>之类的参数，相关警告可以忽略，详见</p><p><a href="https://jira.opnfv.org/browse/DOVETAIL-371" target="_blank" rel="noopener">https://jira.opnfv.org/browse/DOVETAIL-371</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Project-level authentication scope (name or ID), recommend admin project.</span><br><span class="line">export OS_PROJECT_NAME=admin</span><br><span class="line"><span class="meta">#</span> Authentication username, belongs to the project above, recommend admin user.</span><br><span class="line">export OS_USERNAME=admin</span><br><span class="line"><span class="meta">#</span> Authentication password. Use your own password</span><br><span class="line">export OS_PASSWORD=admin</span><br><span class="line"><span class="meta">#</span> Authentication URL, one of the endpoints of keystone service. If this is v3 version,</span><br><span class="line"><span class="meta">#</span> there need some extra variables as follows.</span><br><span class="line">export OS_AUTH_URL='http://192.168.20.11:5000/'</span><br><span class="line"><span class="meta">#</span> Default is 2.0. If use keystone v3 API, this should be set as 3.</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line"><span class="meta">#</span> Domain name or ID containing the user above.</span><br><span class="line"><span class="meta">#</span> Command to check the domain: openstack user show &lt;OS_USERNAME&gt;</span><br><span class="line">export OS_USER_DOMAIN_NAME=default</span><br><span class="line"><span class="meta">#</span> Domain name or ID containing the project above.</span><br><span class="line"><span class="meta">#</span> Command to check the domain: openstack project show &lt;OS_PROJECT_NAME&gt;</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=default</span><br><span class="line"><span class="meta">#</span> Home directory for dovetail</span><br><span class="line">export DOVETAIL_HOME=/root/dovetail</span><br></pre></td></tr></table></figure><p>导入该环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source env_config.sh</span><br></pre></td></tr></table></figure><h3 id="1-3-运行-dovetail-容器"><a href="#1-3-运行-dovetail-容器" class="headerlink" title="1.3 运行 dovetail 容器"></a>1.3 运行 dovetail 容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run --privileged=true -it \</span><br><span class="line">             -e DOVETAIL_HOME=$DOVETAIL_HOME \</span><br><span class="line">             -v $DOVETAIL_HOME:$DOVETAIL_HOME \</span><br><span class="line">             -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">             --name dovetail opnfv/dovetail:cvp.0.6.0 /bin/bash</span><br></pre></td></tr></table></figure><p>上述命令中<code>-v $DOVETAIL_HOME:$DOVETAIL_HOME</code>是指明host与container之间目录映射，此处不一致会导致后续的测试结果存储出现问题。在后续拍错时可以使用<code>docker inspect dovetail</code>命令检查容器的相关配置。运行完成后会直接进入到dovetail容器中.</p><p>为了方便的看清目录和文件，增加一些配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alias l='ls -CF'</span><br><span class="line">alias la='ls -A'</span><br><span class="line">alias ll='ls -alF'</span><br><span class="line">alias ls='ls --color=auto'</span><br></pre></td></tr></table></figure><h2 id="2-执行测试"><a href="#2-执行测试" class="headerlink" title="2. 执行测试"></a>2. 执行测试</h2><h3 id="2-1-简单用例测试"><a href="#2-1-简单用例测试" class="headerlink" title="2.1 简单用例测试"></a>2.1 简单用例测试</h3><p>使用命令查看有哪些dovetail测试例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dovetail list</span><br></pre></td></tr></table></figure><p>运行 dovetail 测试</p><p>当dovetail正式版本发布时使用下列命令执行整个测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dovetail run --testsuite CVP_1_0_0 --testarea ipv6 --debug | tee test.txt</span><br></pre></td></tr></table></figure><p>目前dovetail测试版本使用下列命令执行测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dovetail run -d --testsuite proposed_tests --testarea ha --offline | tee $DOVETAIL_HOME/test.txt-20170912_0954-HA</span><br></pre></td></tr></table></figure><p><code>testarea</code>指明测试域，在dovetail容器的<code>conf</code>目录中<code>dovetail.yml</code>可以查看相关测试域</p><blockquote><p>testarea_supported:</p><ul><li>defcore</li><li>example</li><li>ha</li><li>ipv6</li><li>sdnvpn</li><li>vping</li><li>resiliency</li><li>tempest</li></ul></blockquote><p>或者使用<code>dovetail list proposed_tests</code>命令来查看有哪些<code>testarea</code>和具体的<code>testarea</code>下包含的测试例是什么。</p><h3 id="2-2-其他测试配置文件"><a href="#2-2-其他测试配置文件" class="headerlink" title="2.2 其他测试配置文件"></a>2.2 其他测试配置文件</h3><h3 id="2-2-1-HA测试配置"><a href="#2-2-1-HA测试配置" class="headerlink" title="2.2.1 HA测试配置"></a>2.2.1 HA测试配置</h3><p>HA测试的配置文件为<code>${DOVETAIL_HOME}/pre_config/pod.yaml</code>，可以参考<code>dovetail/userconfig/pod.yaml.sample</code>配置内容如下,只需要列出HA的控制节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">nodes:</span><br><span class="line">-</span><br><span class="line">    # This can not be changed and must be node1.</span><br><span class="line">    name: node1</span><br><span class="line"></span><br><span class="line">    # This must be controller.</span><br><span class="line">    role: Controller</span><br><span class="line"></span><br><span class="line">    # This is the install IP of a controller node.</span><br><span class="line">    ip: xx.xx.xx.xx</span><br><span class="line"></span><br><span class="line">    # User name of this node. This user must have sudo privileges.</span><br><span class="line">    user: root</span><br><span class="line"></span><br><span class="line">    # Password of the user.</span><br><span class="line">    password: root</span><br><span class="line">    </span><br><span class="line">    # Private key of this node. It must be /root/.ssh/id_rsa</span><br><span class="line">    # Dovetail will move the key file from $DOVETAIL_HOME/pre_config/id_rsa</span><br><span class="line">    # to /root/.ssh/id_rsa of Yardstick container</span><br><span class="line">    key_filename: /root/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>需要注意的是节点的名字必须是<code>node1</code>、<code>node2</code>格式，主要是该项测试调用了functest的相关测试，而functest做了相关配置要求，IP地址为<strong>测试机</strong>能够访问节点的IP，HA测试会需要ssh登录到节点中关闭/重启openstack的nova、glance等相应服务，也需要提供能够访问其他节点的密匙文件。</p><h4 id="2-2-2-tempest测试配置"><a href="#2-2-2-tempest测试配置" class="headerlink" title="2.2.2 tempest测试配置"></a>2.2.2 tempest测试配置</h4><p>配置文件需要存放在<code>$DOVETAIL_HOME/pre_config/tempest_conf.yaml</code>,依据待测环境配置相应的信息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">validation:</span><br><span class="line">    image_ssh_user: cirros</span><br><span class="line">    ssh_timeout: 300</span><br><span class="line"></span><br><span class="line">compute:</span><br><span class="line">    min_compute_nodes: 2</span><br><span class="line"><span class="meta">#</span>    volume_device_name: vdb</span><br></pre></td></tr></table></figure><p>测试过程中使用的是cirros的镜像，cirros的初始账户为：cirros，设置登录超时时间，设置计算节点个数，对于compass的环境新添加的系统云盘名称为vdb因此需要指定（默认为vdc）。</p><h2 id="3-测试结果"><a href="#3-测试结果" class="headerlink" title="3. 测试结果"></a>3. 测试结果</h2><p>dovetail的测试结果存放在<code>$DOVETAIL_HOME/results</code>目录下，具体的每个测试域也有对应的详细存储结果目录。如IPv6测试详细结果存放在<code>ipv6_logs/dovetail.ipv6.tcXXX.log</code>，可以查看执行失败的原因。</p><p><strong>参考链接</strong></p><p>1）<a href="http://artifacts.opnfv.org/dovetail/docs/testing_user_userguide/index.html" target="_blank" rel="noopener">dovetail 用户手册</a></p>]]></content>
    
    <summary type="html">
    
      OPNFV Dovetail 使用
    
    </summary>
    
      <category term="OPNFV" scheme="https://louielong.github.io/categories/OPNFV/"/>
    
    
      <category term="Dovetail" scheme="https://louielong.github.io/source/tags/Dovetail/"/>
    
      <category term="OPNFV" scheme="https://louielong.github.io/source/tags/OPNFV/"/>
    
      <category term="NFV" scheme="https://louielong.github.io/source/tags/NFV/"/>
    
      <category term="CVP" scheme="https://louielong.github.io/source/tags/CVP/"/>
    
  </entry>
  
  <entry>
    <title>如何搭建 hexo 博客</title>
    <link href="https://louielong.github.io/hexo_blog_build.html"/>
    <id>https://louielong.github.io/hexo_blog_build.html</id>
    <published>2017-06-09T07:20:08.000Z</published>
    <updated>2018-09-12T09:51:08.845Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要</strong>:本文主要介绍如何使用hexo建立自己的博客。</p><a id="more"></a><h2 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1 安装node.js"></a>1 安装node.js</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装完成后执行：<code>nvm install stable</code>, 即可安装node.js。</p><p>使用npm命令安装hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完成之后，使用<code>hexo --version</code>查看hexo是否正确安装。</p><p><img src="http://i.imgur.com/OsK3uSC.jpg" alt="hexo 安装"></p><p>【PS】目前npm官方源在国内访问并不稳定，如果无法直接安装，请更换国内npm源。执行以下命令更换淘宝npm源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2 安装git"></a>2 安装git</h2><p>已经安装过git跳过此步骤</p><p>debian/ubuntu使用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-core</span><br></pre></td></tr></table></figure><h2 id="3-hexo使用"><a href="#3-hexo使用" class="headerlink" title="3 hexo使用"></a>3 hexo使用</h2><h3 id="3-1-初始化一个站点"><a href="#3-1-初始化一个站点" class="headerlink" title="3.1 初始化一个站点"></a>3.1 初始化一个站点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init louie_blog</span><br></pre></td></tr></table></figure><p>此命令用于执行站点的初始化。执行后，folder文件夹会成为一个Hexo站点文件夹，执行过程中涉及安装多个nodejs模块包以及git clone操作。</p><p><img src="http://i.imgur.com/zzPkjDZ.jpg" alt="hexo初始化站点"></p><p>在初始化一个hexo站点文件夹之后，该文件夹的目录结构如下：</p><p><img src="http://i.imgur.com/72R8bGc.jpg" alt="hexo目录结构"></p><p>详细说明如下：</p><ul><li>1、<code>_config.yml</code>是YAML格式文件，也是Hexo的站点配置文件（敲黑板！重点重点！）</li><li>2、node_modules包含使用Hexo需要的其他node.js模块，以后安装的hexo相关模块也放在这里</li><li>3、package.json配置hexo运行需要的node.js包，不用手动更改（PS：通常不需要干预它，不过其中有一条”name”: “hexo-site”起着告诉hexo该文件夹是hexo站点的作用，因此更加不要修改该文件内容，安装hexo其他模块也依赖该文件）</li><li>4、scaffolds是模板文件夹，不过这里的“模板”概念没有那么高端。这个“模板”就是指新建的markdown文件的模板，每新建一个markdown文件（由于Hexo使用markdown语法，在渲染生成静态HTML页面之前，源文件都是markdown文件），就会包含对应模板的内容。该文件夹内有三个模板：draft.md，草稿的模板page.md，页面的模板post.md，文章的模板</li><li>5、source是源文件文件夹，此处存有渲染生成静态页面需要的所有源文件，包括markdown文件、图片文件。默认此文件夹下只有一个<code>_post</code>文件夹，存放文章的markdown源文件。每个页面有一个以该页面命名的文件夹，也存放在source文件夹下。该文件夹下除了<code>_post</code>外，所有以下划线开头的或以.开头的文件夹都会被忽略。</li><li>6、themes是主题文件夹，Hexo的主题作用与WordPress相同。</li><li>7、public文件夹，默认没有，存放生成的静态文件。</li></ul><p>打开<code>_config.yml</code> 修改配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="comment">#站点的标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="comment">#站点的副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="comment">#站点的描述，写一段话来介绍你的博客吧:)，主要为SEO使用</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">John</span> <span class="string">Doe</span> <span class="comment">#显示的文章作者名字，例如我配置的是fourstring</span></span><br><span class="line"><span class="attr">language:</span> <span class="comment">#语言。简体中文是zh-Hans</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="comment">#时区，可以不配置，默认以本地时区为准</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">http://yoursite.com</span> <span class="comment">#你的站点地址，如果是全站HTTPS记得写成https://domain.com</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span> <span class="comment">#如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。（引用自官方文档）</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span> <span class="comment">#固定链接格式。这项配置的格式为：变量1/变量2/变量3...，其中合法的变量格式为“:变量名”（注意，:是变量的组成部分！）这样生成的效果为/2016/08/10/文章标题。默认的固定链接格式存在一些问题，下文讲解</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span> <span class="comment">#设置每页文章篇数，设为0可以关闭分页功能</span></span><br><span class="line"><span class="attr">theme:</span> <span class="comment">#使用的主题。下文讲解</span></span><br><span class="line"><span class="attr">deploy:</span> <span class="comment">#部署配置，其值是一个杂凑表，注意缩进，下文详细讲解</span></span><br></pre></td></tr></table></figure><h3 id="3-2-更换主题"><a href="#3-2-更换主题" class="headerlink" title="3.2 更换主题"></a>3.2 更换主题</h3><p>Hexo的主题存储在<code>louie_blog/themes</code>目录下</p><p>hexo主题星级排名<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">https://www.zhihu.com/question/24422335</a></p><p>推荐n4l.pw使用的Hexo主题：Next，功能极其强大，是目前github上star第一的Hexo主题：<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a>。官方文档讲解非常详细，鉴于篇幅，这里只提一个小技巧，在文章中加入<code>&lt;!--more--&gt;</code>标签，主题会自动将标签之前的内容截取作为文章摘要输出在首页。（可见下图效果，点击放大）。</p><p><img src="http://i.imgur.com/uvNNid6.jpg" alt="hexo_theme"></p><h3 id="3-3-写作"><a href="#3-3-写作" class="headerlink" title="3.3 写作"></a>3.3 写作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post "Test"</span><br></pre></td></tr></table></figure><p>可以新建一篇文章。post参数可以省略，_config.yml中的default_layout:设置了默认类型，默认值是post，你可以改成draft来默认存储为草稿。</p><p>然后用任意你喜欢的编辑器打开home/source/_post/标题.md文件就可以写作了。（PS：Windows下markdown编辑器可以使用MakdownPad2，OS X下可以使用MWeb，功能非常强大）。</p><p>【MarkdownPad2】<br>下载地址：<a href="http://markdownpad.com/" target="_blank" rel="noopener">http://markdownpad.com/</a><br>注册码：<br><a href="http://www.jianshu.com/p/9e5cd946696d" target="_blank" rel="noopener">http://www.jianshu.com/p/9e5cd946696d</a></p><pre><code>邮箱：Soar360@live.com授权秘钥：GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</code></pre><p><strong>自定义链接格式太蠢 </strong></p><p>可能语言不是很严谨，不过给我的第一感觉就是这样。由于链接最后没有带上.html后缀名，而且生成文件的MIME类型似乎不太对，导致用默认链接格式的话，nginx web server会直接进行文件下载。。。能不能像WordPress那样，为每篇文章自定义一个简短的英文名称作为链接呢？</p><p>我们需要用到Hexo的permalinkFront-matter选项。先编辑模板文件home/scaffolds/post.md，在其Front-matter中加入permalink:即可。</p><p><strong>分类和标签</strong></p><p>默认的主题菜单栏是没有标签和分类两个页面的。而且默认的模板中Front-matter也只有tags选项，没有分类选项。是不是Hexo没有这些功能呢？答案是否定的。</p><p>PS：这两个选项的值都是一个清单，注意缩进。</p><p>编辑模板文件home/scaffolds/post.md，加入categories:，如图所示：</p><p><img src="http://i.imgur.com/AHaOcCJ.jpg" alt="hexo format"></p><p>然后执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p><img src="http://i.imgur.com/bUOdTY8.jpg" alt="hexo format 设置"></p><p>创建标签和分类页面，如果你的主题支持，它们不需要填充任何内容，主题会自动生成这两个页面的内容，你只需要将它们加入菜单栏即可。（这并不意味着不用生成这两个页面）<br>默认主题菜单栏修改方法如下：<br>编辑<code>home/themes/landscape/_config.yml</code>文件，在<code>menu:</code>项下加入显示名称: 路径即可，如下图所示：</p><p><strong> 评论功能 </strong></p><p>这个主要看主题是否支持。例如我使用的next主题，支持多说和disqus两套系统。特别提醒，由于本身是静态化的，所以必须依靠第三方服务提供评论功能。</p><p>如果想让某篇文章禁用评论功能，next主题需要在Front-matter中加入：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comment:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>一般来说页面都不需要评论功能，可以编辑home/scaffolds/page.md，在Front-matter中加入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comment:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>编辑<code>source/_posts/Test.md</code>文件，使用markdown语法撰写自己的博客。</p><h3 id="3-4-预览"><a href="#3-4-预览" class="headerlink" title="3.4 预览"></a>3.4 预览</h3><p>执行<code>hexo generate</code>生成静态文件，执行<code>hexo server</code>，本地开启服务器，然后浏览器访问<code>http://localhost:4000</code>即可看到预览效果了。</p><p><img src="http://i.imgur.com/AvHMXXg.jpg" alt=""></p><h2 id="4-部署"><a href="#4-部署" class="headerlink" title="4 部署"></a>4 部署</h2><p>最后一个重点难点内容，如何将public文件夹下的内容发布到服务器上。</p><ul><li><p>1.Github Pages<br>这个服务允许github用户发布静态页面，无限空间流量，适合轻度用户。我没有采用这种方法，限于篇幅也不会介绍，如果你需要，Google之。</p></li><li><p>2.直接复制<br>理论上可行的方法。毕竟public下的文件到哪里都能直接变成一个可运行的站点。但是这种方法太蠢了，看似可行，其实蕴含着一大堆问题，比如，无效流量、重复文件……</p></li><li><p>3.Git版本控制系统<br>官方支持的部署方式之一。利用Git版本控制系统的强大功能，通过ssh上传文件。这也是我采用并且下文讲解的方法。</p></li><li><p>4.Heroku<br>没有了解过这个方式。</p></li><li><p>5.Openshift<br>Openshift是著名厂商Red Hat的PaaS服务，功能十分强大。关于如何使用该服务的教程网上已经很多，限于篇幅不再介绍。（如果各位有需要，我会考虑另开文章讲解，毕竟这个平台是相当好用的，请留言）</p></li><li><p>6.rsync<br>利用强大的同步工具rsync进行同步，这种同步方式只需要用户提供一个能访问bash的Linux用户，并且服务器上安装了rsync软件包，其余一切涉及rsync命令的操作都由hexo自动完成，更加简单。推荐新手使用这种方式。</p></li><li><p>7.FTPsync<br>直接通过FTP协议进行同步。如果购买了虚拟主机，可以考虑这种方式。然而这个插件写得也很蠢。第一次使用必须自己手动上传所有文件，否则会无限报连接被重置错误（我就不配图了，工作量有点大）。</p></li></ul><p>基于上述方式的优缺点，本文将讲解如何使用Git和rsync进行服务端部署。</p><h3 id="4-1-Git版本控制系统"><a href="#4-1-Git版本控制系统" class="headerlink" title="4.1 Git版本控制系统"></a>4.1 Git版本控制系统</h3><p>服务端配置</p><p>4.1.1 编译安装nginx</p><p><strong> 这里跳过 </strong></p><p>执行<code>sudo nginx -V</code>测试是否安装成功。</p><p><img src="http://i.imgur.com/lEEJxHH.jpg" alt="nginx 版本"></p><p>4.1.2 配置Git仓库</p><p>选择合适的路径，建立文件夹：</p><p>这里选择根目录下的<code>/web</code><br>​<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /web</span><br></pre></td></tr></table></figure></p><p>并更改所有者为自己<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R louie:louie /web</span><br></pre></td></tr></table></figure></p><p>建立目录<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /web/blog/hexo  #Git仓库，不存储网站文件</span><br><span class="line">mkdir -p /web/blog/hexo_blog.git #实际存储网站文件目录</span><br></pre></td></tr></table></figure></p><p>执行如下命令，初始化空的Git仓库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init --bare hexo_blog.git</span><br></pre></td></tr></table></figure><p><img src="http://i.imgur.com/E9XzzzZ.jpg" alt="hexo_blog git仓库初始化"></p><p>然后进入该仓库，配置<code>post-receive hooks</code>。</p><pre><code>钩子(hooks)是一些在”$GIT-DIR/hooks”目录的脚本, 在被特定的事件(certain points)触发后被调用 。当”git init”命令被调用后, 一些非常有用的示例钩子文件(hooks)被拷到新仓库的hooks目录中; 但是在默认情况下这些钩子(hooks)是不生效的 。 把这些子文件(hooks)的”.sample”文件名后缀去掉就可以使它们生效了。需要关注的是post-receive的钩子，当push操作完成之后这个钩子就会被调用。</code></pre><p>进入到hooks目录</p><p>建立<code>post-receive</code>文件，输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/sh</span><br><span class="line">git --work-tree=/web/blog/hexo --git-dir=/web/blog/hexo.git checkout -f</span><br></pre></td></tr></table></figure><p>赋予可执行权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x post-receive</span><br></pre></td></tr></table></figure><p><img src="http://i.imgur.com/0UwN6HX.jpg" alt="git hooks"></p><p>本文使用的是自己搭建的Gitolite，已经添加了无密码登陆权限。</p><p>4.1.3 nginx web server配置<br>首先建立虚拟主机配置文件夹：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      hexo 建立博客
    
    </summary>
    
      <category term="hexo" scheme="https://louielong.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://louielong.github.io/source/tags/hexo/"/>
    
      <category term="blog" scheme="https://louielong.github.io/source/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>OPNFV 测试项目 -- Yardstick</title>
    <link href="https://louielong.github.io/OPNFV%E6%B5%8B%E8%AF%95%E9%A1%B9%E7%9B%AE-yardstick.html"/>
    <id>https://louielong.github.io/OPNFV测试项目-yardstick.html</id>
    <published>2017-06-09T07:20:08.000Z</published>
    <updated>2018-09-12T09:51:08.845Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要</strong>:本文主要介绍如何使用OPNFV的Yardstick测试项目的使用。</p><a id="more"></a><h2 id="1-使用-Docker-安装-Yardstick"><a href="#1-使用-Docker-安装-Yardstick" class="headerlink" title="1.使用 Docker 安装 Yardstick"></a>1.使用 Docker 安装 Yardstick</h2><p><strong>官方推荐 Docker 运行 Yardstick 测试</strong></p><h3 id="1-1安装-Docker"><a href="#1-1安装-Docker" class="headerlink" title="1.1安装 Docker"></a>1.1安装 Docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure><p>拉取 Yardstick 最新版</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull opnfv/yardstick:latest</span><br></pre></td></tr></table></figure><p>查看下载的 Docker 镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h2 id="2-准备-Yardstick-测试所需要的磁盘和镜像"><a href="#2-准备-Yardstick-测试所需要的磁盘和镜像" class="headerlink" title="2.准备 Yardstick 测试所需要的磁盘和镜像"></a>2.准备 Yardstick 测试所需要的磁盘和镜像</h2><p><em>NOTE</em>:当需要使用 openstack 的接口时必须先导入环境变量</p><p>将下列配置将保存到 openrc 文本中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default</span><br><span class="line">export OS_PROJECT_NAME=admin</span><br><span class="line">export OS_USERNAME=admin</span><br><span class="line">export OS_PASSWORD=admin</span><br><span class="line">export OS_AUTH_URL=http://192.168.20.11:5000     #yardstick API接口的IP</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line">export OS_IMAGE_API_VERSION=2</span><br><span class="line">export EXTERNAL_NETWORK=admin_floating_net       #外网的网络名</span><br></pre></td></tr></table></figure><p>使用 <code>source openrc</code>导入环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source openrc</span><br></pre></td></tr></table></figure><p>在 Yardstick 容器中，Yardstick 存储库位于 /home/opnfv/repos 目录中。Yardstick 提供了一个 CLI 来准备 OpenStack 环境变量并自动创建 Yardstick 风格和访客镜像：</p><h3 id="2-1手动创建-Yardstick-falvor-和-guest-images"><a href="#2-1手动创建-Yardstick-falvor-和-guest-images" class="headerlink" title="2.1手动创建 Yardstick falvor 和 guest images"></a>2.1手动创建 Yardstick falvor 和 guest images</h3><p>在执行 Yardstick 测试用例之前，请确保在 OpenStack 中提供了 Yardstick falvor 和 guest images。有关创建 Yardstick falvor 和 guest images 的详细步骤，如下。</p><p>使用如下命令创建一个名称为 yardstick-flavor ，编号为100，内存为512M，3G磁盘，1个cpu的主机配置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nova flavor-create yardstick-flavor 100 512 3 1</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">100</td><td style="text-align:center">创建镜像的ID</td></tr><tr><td style="text-align:center">512</td><td style="text-align:center">内存大小</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">磁盘大小 (G)</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">CPU数量</td></tr></tbody></table><p><img src="http://i.imgur.com/EhW1nuk.jpg" alt=""></p><h3 id="2-2创建用于-Yardstick-测试的访客镜像"><a href="#2-2创建用于-Yardstick-测试的访客镜像" class="headerlink" title="2.2创建用于 Yardstick 测试的访客镜像"></a>2.2创建用于 Yardstick 测试的访客镜像</h3><p>首先安装额外的工具包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install -y qemu-utils kpartx</span><br></pre></td></tr></table></figure><p>使用 Git 拉取 Yardstick 源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gerrit.opnfv.org/gerrit/yardstick</span><br></pre></td></tr></table></figure><p>使用 Yardstick 工具生成镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd yardstick</span><br><span class="line">sudo ./tools/yardstick-img-modify tools/ubuntu-server-cloudimg-modify.sh</span><br></pre></td></tr></table></figure><p>生成的镜像也加入到 Openstack 环境中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">glance --os-image-api-version 1 image-create \</span><br><span class="line">--name yardstick-image --is-public true \</span><br><span class="line">--disk-format qcow2 --container-format bare \</span><br><span class="line">--file /tmp/workspace/yardstick/yardstick-image.img</span><br></pre></td></tr></table></figure><p>一些 Yardstick 的测试用例使用 Cirros 0.3.5 或者 Ubuntu 16.04 的镜像，也可以将这些镜像加入到 Openstack 环境中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">openstack image create \</span><br><span class="line">--disk-format qcow2 \</span><br><span class="line">--container-format bare \</span><br><span class="line">--file $cirros_image_file \</span><br><span class="line">cirros-0.3.5</span><br><span class="line"></span><br><span class="line">openstack image create \</span><br><span class="line">--disk-format qcow2 \</span><br><span class="line">--container-format bare \</span><br><span class="line">--file $ubuntu_image_file \</span><br><span class="line">Ubuntu-16.04</span><br></pre></td></tr></table></figure><h2 id="3-运行-Yardstick"><a href="#3-运行-Yardstick" class="headerlink" title="3.运行 Yardstick"></a>3.运行 Yardstick</h2><h3 id="3-1启动-Yardstick-镜像"><a href="#3-1启动-Yardstick-镜像" class="headerlink" title="3.1启动 Yardstick 镜像"></a>3.1启动 Yardstick 镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --privileged -v /var/run/docker.sock:/var/run/docker.sock -p 8888:5000 -e INSTALLER_IP=192.168.20.5 -e INSTALLER_TYPE=fuel --name yardstick opnfv/yardstick:latest</span><br></pre></td></tr></table></figure><p><strong>参数说明</strong></p><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">-itd</td><td style="text-align:center">-i：交互式，即使不附加STDIN也会打开。 -t：分配伪TTY。 -d：在分离模式下，在后台运行容器。</td></tr><tr><td style="text-align:center">–privileged</td><td style="text-align:center">使容器内的root用户拥有真正的root权限</td></tr><tr><td style="text-align:center">-e INSTALLER_IP=192.168.20.5 <br> -e INSTALLER_TYPE=fuel</td><td style="text-align:center">INSTALLER_TYPE可选参数为Apex，Compass，Fuel和Joid。 如果使用其他安装程序（如devstack），则可以忽略这些参数。</td></tr><tr><td style="text-align:center">-p 8888:5000</td><td style="text-align:center">如果需要在yardstick外使用yardstick容器需要加入该参数，将yardstick容器内的5000端口映射到宿主机的8888端口，如果宿主机的8888端口被占用可以换一个端口</td></tr><tr><td style="text-align:center">-v /var/run/docker.sock:/var/run/docker.sock</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">–name yardstick</td><td style="text-align:center">创建的容器名称</td></tr></tbody></table><h3 id="3-2配置-Yardstick-容器环境"><a href="#3-2配置-Yardstick-容器环境" class="headerlink" title="3.2配置 Yardstick 容器环境"></a>3.2配置 Yardstick 容器环境</h3><p>首先需要先进入到 Yardstick 容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it yardstick /bin/bash</span><br></pre></td></tr></table></figure><p>随后开始配置环境</p><p>引入环境配置将一下内容保存到 openrc 文件中，然后使用 <code>source openrc</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default</span><br><span class="line">export OS_PROJECT_NAME=admin</span><br><span class="line">export OS_USERNAME=admin</span><br><span class="line">export OS_PASSWORD=admin</span><br><span class="line">export OS_AUTH_URL=http://192.168.20.11:5000     #yardstick API接口的IP</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line">export OS_IMAGE_API_VERSION=2</span><br><span class="line">export EXTERNAL_NETWORK=admin_floating_net       #外网的网络名</span><br></pre></td></tr></table></figure><h3 id="3-3运行一个简单的测试例"><a href="#3-3运行一个简单的测试例" class="headerlink" title="3.3运行一个简单的测试例"></a>3.3运行一个简单的测试例</h3><p>修改 ping.ymal文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/repos/yardstick</span><br><span class="line">vim samples/ping.yaml</span><br></pre></td></tr></table></figure><p><img src="http://i.imgur.com/rvEEYJv.jpg" alt=""></p><p>主要关注下图中绿色框内容，<em>image</em> 为测试的镜像名称，<em>flavor</em> 为生成的虚拟机配置，<em>user</em> 为虚拟机系统的登录用户名(cirros 镜像默认的用户名和密码为”user:cirros  pass:cubswin:)”，ubuntu 镜像用户名默认为”ubuntu”)，测试用的vm实例创建后会使用创建时的密匙登录，因此也是不需要密码的，但是系统用户名必须一致。<em>network</em> 指生成的虚拟机所在的网段，即内网的网络。<br><img src="http://i.imgur.com/ataU1pE.jpg" alt="ping 配置文件"></p><p>配置完 <code>ping.ymal</code>文件后，使用命令启动测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yardstick -d task start samples/ping.yaml</span><br></pre></td></tr></table></figure><p>测试结果会输出在<code>/tmp/yardstick.out</code>中，为了方便的查看测试结果，使用 influxdb 数据库和 Grafana 工具。</p><h2 id="4-安装-InfluxDB-和-Grafana"><a href="#4-安装-InfluxDB-和-Grafana" class="headerlink" title="4.安装 InfluxDB 和 Grafana"></a>4.安装 InfluxDB 和 Grafana</h2><p>官方给出的 <code>yardstick env influxdb</code> 和 <code>yardstick env grafana</code> 使用版本较低，建议手动安装和启动这两项服务</p><p>完整的操作过程为:</p><h3 id="4-1配置-InfluxDB-环境"><a href="#4-1配置-InfluxDB-环境" class="headerlink" title="4.1配置 InfluxDB 环境"></a>4.1配置 InfluxDB 环境</h3><p>使用 docker 安装并使用最新的 influxdb 版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull tutum/influxdb</span><br></pre></td></tr></table></figure><p>启动 influxdb 的 docker 环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name influxdb -p 8083:8083 -p 8086:8086 --expose 8090 --expose 8099 tutum/influxdb</span><br><span class="line">docker exec -it influxdb bash  #进入 influxdb 的 docker 环境</span><br></pre></td></tr></table></figure><p>配置 influxdb 数据库，增加 yardstick 表，便于后续存储 yardstick 测试结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">influx</span><br><span class="line"><span class="meta">&gt;</span>CREATE USER root WITH PASSWORD 'root' WITH ALL PRIVILEGES</span><br><span class="line"><span class="meta">&gt;</span>CREATE DATABASE yardstick;</span><br><span class="line"><span class="meta">&gt;</span>use yardstick;</span><br><span class="line"><span class="meta">&gt;</span>show MEASUREMENTS;</span><br></pre></td></tr></table></figure><p>在 Yardstick 的docker容器中使用如下命令测试 influxdb 数据库是否可用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X POST  http://192.168.20.14:8086/query --data-urlencode "q=CREATE DATABASE mydb"</span><br></pre></td></tr></table></figure><p><code>192.168.20.14</code>为 influxdb 运行所在的宿主机 IP 地址，上述命令的功能是使用 influxdb 的 http API 在数据库中创建一个数据库</p><p><strong>NOTE</strong>如果上述命令执行失败，则需要查看宿主机的 防火墙规则，使用<code>iptables -L -nv</code>查看 <code>Chain INPUT</code>规则，如果是 drop 则使用<code>iptables -P INPUT ACCEPT</code>将其改为accept</p><h3 id="4-2配置-Grafana-环境"><a href="#4-2配置-Grafana-环境" class="headerlink" title="4.2配置 Grafana 环境"></a>4.2配置 Grafana 环境</h3><p>拉取 Grafana 在 docker 上的最新版</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull grafana/grafana</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name grafana -p 3000:3000 grafana/grafana</span><br></pre></td></tr></table></figure><p>之后就可以在 <a href="http://host_ip:3000" target="_blank" rel="noopener">http://host_ip:3000</a> (admin/admin) 查看</p><p>如下图所示为三个环境容器都已经启动，因8888端口冲突所以将 Yardstick 的宿主机端口改为45678<br><img src="http://i.imgur.com/OKtO9SO.jpg" alt=""></p><p>4.3配置 Yardstick 测试结果输出到 influxdb 数据库</p><p>进入到 Yardstick 容器的环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it yardstick bash</span><br></pre></td></tr></table></figure><p>拷贝并修改 Yardstick 的配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp yardstick/etc/yardstick/yardstick.conf.sample /etc/yardstick/yardstick.conf</span><br><span class="line">vim /etc/yardstick/yardstick.conf</span><br></pre></td></tr></table></figure><p><img src="http://i.imgur.com/13WSHjN.jpg" alt=""></p><p>修改<em>dispatcher</em>为<em>influxdb</em>，同时修改<em>influxdb</em>的IP地址，数据库名已经账号密码皆为4.1节所创建的。</p><p>配置完成后运行<code>yardstick -d task start samples/ping.yaml</code></p><h3 id="4-4在-Grafana-的web页面查看"><a href="#4-4在-Grafana-的web页面查看" class="headerlink" title="4.4在 Grafana 的web页面查看"></a>4.4在 Grafana 的web页面查看</h3><p>在浏览器输入 <a href="http://192.168.20.14:3000" target="_blank" rel="noopener">http://192.168.20.14:3000</a> (admin/admin)(本例中的 Grafana 宿主机地址是 192.168.20.14)</p><p>点击左上角图标配置 data source，随后创建 dashboard 查看数据即可。</p><p><img src="http://i.imgur.com/teplLiT.jpg" alt=""></p><h2 id="5-删除-Yardstick-容器"><a href="#5-删除-Yardstick-容器" class="headerlink" title="5.删除 Yardstick 容器"></a>5.删除 Yardstick 容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop yardstick &amp;&amp; docker rm yardstick</span><br></pre></td></tr></table></figure><p>参考链接：</p><p>1)<a href="https://docs.opnfv.org/en/stable-danube/submodules/yardstick/docs/testing/user/userguide/index.html" target="_blank" rel="noopener">https://docs.opnfv.org/en/stable-danube/submodules/yardstick/docs/testing/user/userguide/index.html</a></p>]]></content>
    
    <summary type="html">
    
      OPNFV Yardstick 使用
    
    </summary>
    
      <category term="OPNFV" scheme="https://louielong.github.io/categories/OPNFV/"/>
    
    
      <category term="OPNFV" scheme="https://louielong.github.io/source/tags/OPNFV/"/>
    
      <category term="Yardstick" scheme="https://louielong.github.io/source/tags/Yardstick/"/>
    
      <category term="Openstack" scheme="https://louielong.github.io/source/tags/Openstack/"/>
    
  </entry>
  
</feed>
