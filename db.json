{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/uploads/favicon-16x16.ico","path":"uploads/favicon-16x16.ico","modified":0,"renderable":0},{"_id":"source/uploads/favicon-32x32.ico","path":"uploads/favicon-32x32.ico","modified":0,"renderable":0},{"_id":"source/uploads/favicon-48x48.ico","path":"uploads/favicon-48x48.ico","modified":0,"renderable":0},{"_id":"source/uploads/cc.png","path":"uploads/cc.png","modified":0,"renderable":0},{"_id":"source/uploads/wechatpay.jpg","path":"uploads/wechatpay.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/uploads/shadian.png","path":"uploads/shadian.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","path":"lib/canvas-nest/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/README.md","path":"lib/canvas-nest/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/README.md","path":"lib/pace/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/shadian.png","path":"images/shadian.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/images/mountain.png","path":"images/mountain.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"32efd6f8964dba9db332966d3e70939e642096c9","modified":1523612089403},{"_id":"source/CNAME","hash":"29130e73906aad89258d00ef49ab579d85928519","modified":1523611944579},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1523612109824},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1523611944583},{"_id":"themes/next/.gitignore","hash":"d06d635af73e36fdd235a2e7fa6938f078664af8","modified":1523612109824},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1523611944583},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1523612109824},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1523611944583},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1523612089407},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1523612089407},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1523612089407},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1523611944583},{"_id":"themes/next/README.md","hash":"81c51e4b0fe5eaab6becfc0d6ef342bdd749a781","modified":1523612109824},{"_id":"themes/next/_config.yml","hash":"d3c571976a2258806f3f53acbe5a5daf4e66330d","modified":1523612109824},{"_id":"themes/next/bower.json","hash":"3f8f416899ab12c48a5cc936265d475fa99ce9fe","modified":1523612109824},{"_id":"themes/next/crowdin.yml","hash":"fe22a450cc1272b7ac5476e6b33a999f8b8a2034","modified":1523612089407},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1523612109824},{"_id":"themes/next/package.json","hash":"f27fff901d4e34f53cf98cb120d365a8b66c6fd3","modified":1523612109828},{"_id":"source/_drafts/NFV介绍.md","hash":"666db9cecb458a9e22e345fb1816c8caec6e5565","modified":1523611944579},{"_id":"source/_drafts/openstack-version.md","hash":"bf6cd6f081e1292dc1ca63952bc0cf5abec6080a","modified":1523611944579},{"_id":"source/_posts/IPAM_install.md","hash":"53c5e24213e3a6c553bd0996147b6f3c12e28a73","modified":1523611944579},{"_id":"source/_posts/MAAS+ubuntu-local-repo.md","hash":"c57022bf3caede568eb711e082b53ec307c849dd","modified":1523611944579},{"_id":"source/_posts/OPNFV测试项目-Dovetail.md","hash":"440de7613cf9e1f5ebd9d822cf2bb7754ea024fd","modified":1523611944579},{"_id":"source/_posts/OPNFV测试项目-yardstick.md","hash":"7dc6e4c5e4c0fe94afb0aed039765a8035a40b95","modified":1523611944579},{"_id":"source/_posts/hexo_blog_build.md","hash":"802e1ef309cccb23609d1ba988644e0a1c337623","modified":1523611944579},{"_id":"source/_posts/keadhcp-usage.md","hash":"8b38669d4b940802f4b82dc048acffbf81166606","modified":1523611944579},{"_id":"source/_posts/openstack-images-password.md","hash":"d730413be680a87adaec00946ab7b003eb8f6894","modified":1523611944579},{"_id":"source/_posts/mysql-ha.md","hash":"3625a8abb167781724eba6bebdf445232f26066c","modified":1523611944579},{"_id":"source/_posts/opnfv-Euphrates-install-03.md","hash":"d54d6fc522ebd04337e6ae8ca4a953f5f2d2fa79","modified":1523611944579},{"_id":"source/_posts/opnfv_Euphrates_install-01.md","hash":"b311bae429fec320376f073f48708ddd51b79984","modified":1523611944579},{"_id":"source/about/index.md","hash":"492099a65dbfed67743b290635ccbcf8c246df26","modified":1523612134400},{"_id":"source/categories/index.md","hash":"e59c31249747c16ab710f2f8a0d7263d20d5092d","modified":1523612134400},{"_id":"source/tags/index.md","hash":"92b80b598d5c346ef7247db015c7b595b2515a16","modified":1523612134400},{"_id":"source/uploads/favicon-16x16.ico","hash":"cc466c86eccdd03cb30073c65d34bc25f0c9ea69","modified":1523612089403},{"_id":"source/uploads/favicon-32x32.ico","hash":"da8d1ed7e93f42362d6ba0ebdf7c8f52bbacaa2c","modified":1523612089403},{"_id":"source/_posts/opnfv_Euphrates_install-02.md","hash":"8b3f8fd6f3b8e74be1e8b0611ade307bc258ba52","modified":1523611944579},{"_id":"source/uploads/favicon-48x48.ico","hash":"079eab6611de3e43df1b9a51138ec57e33becff4","modified":1523612089403},{"_id":"source/uploads/cc.png","hash":"a2076f8accb33a93a1050d2fda587b3ac15eb944","modified":1523611944579},{"_id":"source/uploads/wechatpay.jpg","hash":"09f717f06dc17b640fdafe854172156b35a0b952","modified":1523612089403},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1523612089407},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1523612089407},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1523612089407},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1523612089407},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"bbd5aa9a79cac0f630b666bc6db87025e08fb1ac","modified":1523612089407},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1523612089407},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1523612089407},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1523612089407},{"_id":"themes/next/docs/MATH.md","hash":"d047b8a3d9aa49b478a33e5a326195d460cb4589","modified":1523612089407},{"_id":"themes/next/languages/_en.yml","hash":"2397256c752276df666c1ff579902abb367b2380","modified":1523612089407},{"_id":"themes/next/languages/bg.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/ar.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/bn.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/da.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/de.yml","hash":"31022b4e7caa10ad7551919159fb37c820788398","modified":1523612109824},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1523611944583},{"_id":"themes/next/languages/el.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1523611944583},{"_id":"themes/next/languages/es.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/et.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/fa.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/fi.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1523611944583},{"_id":"themes/next/languages/fr.yml","hash":"059d66eea84757a2c330e865262cbf5d22e384ca","modified":1523612089407},{"_id":"themes/next/languages/he.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/hi.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/hr.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/hu.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/id.yml","hash":"6aedba65605a6b63451767f6ac4359c7ca72b4b5","modified":1523612109824},{"_id":"themes/next/languages/it.yml","hash":"2f183ebc0e26c0ce899e57f1b98b0d1727f8ac06","modified":1523612089407},{"_id":"themes/next/languages/ja.yml","hash":"7ff7c14c97291e2e29ad1e10fa96bcab8fe35a18","modified":1523612109824},{"_id":"themes/next/languages/jv.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/ko.yml","hash":"e8f29cb1684262cc7de8807f70f22ce25b68ae4e","modified":1523612109824},{"_id":"themes/next/languages/lt.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/lv.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/ms.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/nl.yml","hash":"b9e752c19a2fa8b9b24ab382c903da3fcefb48df","modified":1523612089407},{"_id":"themes/next/languages/no.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/pa.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/pl.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/pt-BR.yml","hash":"08a9d21e2ed1c7871ad2e4c14f57cd5d21fecb20","modified":1523612109824},{"_id":"themes/next/languages/pt.yml","hash":"bc1e2b1857b3dbf15632950bd3c06971b9eb7b17","modified":1523612109824},{"_id":"themes/next/languages/ro.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/ru.yml","hash":"13af9d32b823628453ac732e888e95b80ba03c0a","modified":1523612109828},{"_id":"themes/next/languages/sl.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/sr.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/sv.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/th.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/tr.yml","hash":"65b9d8ef239de9d449ff47ed9ba543d2b7665885","modified":1523612089407},{"_id":"themes/next/languages/uk.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/languages/vi.yml","hash":"946a5cf34dd0595cd5a4f41706dfb742264f4a27","modified":1523612089411},{"_id":"themes/next/languages/zh-CN.yml","hash":"9c4ec37748281d24b133c35a0be8bf0b0c6ab8f0","modified":1523612089411},{"_id":"themes/next/languages/zh-HK.yml","hash":"40f3543ec83f15d4d6f5af1782a0424c0cd8a009","modified":1523612089411},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1523611944583},{"_id":"themes/next/languages/zh-TW.yml","hash":"475359a40f23133d33da29f161239f180e208ace","modified":1523612089411},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1523611944583},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1523611944583},{"_id":"themes/next/layout/_layout.swig","hash":"5803acd1f338db83a3b8d99eebbf163083e02520","modified":1523612109828},{"_id":"themes/next/layout/archive.swig","hash":"833a2213d31be45a12b8e4e5e609073978bd251b","modified":1523612109828},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1523612109828},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1523612109828},{"_id":"themes/next/layout/page.swig","hash":"3f9b2444f12251727ebbc28159f02e9e9489742e","modified":1523612109828},{"_id":"themes/next/layout/post.swig","hash":"8e2d079b46076996cc9343213d5bf7da8178d32d","modified":1523612109828},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1523612089411},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1523612109828},{"_id":"themes/next/scripts/merge-configs.js","hash":"ca9845dc76f5710b4c6fba5fe25ff0d2fcf0adaa","modified":1523612109828},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1523612089411},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1523611944607},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1523611944607},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1523611944607},{"_id":"themes/next/languages/cs.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1523612089407},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523611944591},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1523612089407},{"_id":"themes/next/docs/ru/README.md","hash":"fd2ee8e3f5afed406f11f24b13e3174dd0d40611","modified":1523612089407},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1523612089407},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1523612089407},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1523612089407},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1523612089407},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1523612089407},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"98ef4dc1a7a12320211ffb36d264cd86ffcce0dd","modified":1523612089407},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1523612089407},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"0bc0c3eb909f137c859f38c5c66dcb7c29f76ead","modified":1523612089407},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"1c7df019737656fdfd8d124c7c045a64ac8a2a8d","modified":1523612089407},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c561c6e3ce4d0941d60d1217c597b19eb00095ff","modified":1523612089407},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"c1ba919f70efe87a39e6217883e1625af0b2c23c","modified":1523612089407},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1523612089411},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1523612089411},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1523612089411},{"_id":"themes/next/layout/_macro/custome-cc.swig","hash":"a29cb2dea2b1464f27c0e5fd470de590902628b0","modified":1523612089411},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"044b31de76f7b4a7071f65fd2ea79f5965a8a6a8","modified":1523612109828},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1523612109828},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"464082e431ea5b06df782d5f312ee25be9e5f169","modified":1523612089411},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1523612089411},{"_id":"themes/next/layout/_macro/post.swig","hash":"7998f7dc581c26f18f65c7770ba70013d6fdf39f","modified":1523612109828},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"fea45ab314b9ea23edab25c2b8620f909d856b1d","modified":1523612109828},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1523612089411},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5df32b286a8265ba82a4ef5e1439ff34751545ad","modified":1523612109828},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1523611944583},{"_id":"themes/next/layout/_partials/footer.swig","hash":"68cba789892441f3f772baea5ef1f28dc1e9f75c","modified":1523612109828},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"355ddd5b8af696f7bffb183addd7e84c0a4e2123","modified":1523612109828},{"_id":"themes/next/layout/_partials/head.swig","hash":"d6a60187d695e1c0f13c6210ace531df340b1d98","modified":1523611944583},{"_id":"themes/next/layout/_partials/header.swig","hash":"6bdae92508fb5009b023386341f3b161a4ac6c70","modified":1523612109828},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1523612089411},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1523612109828},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1523612109828},{"_id":"themes/next/layout/_partials/sub-menu.swig","hash":"9783a9569fe8344ed287013156e52ca1b0a25544","modified":1523612089411},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1523611944587},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1523611944587},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1523611944587},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1523612089411},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1523612109828},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1523612089411},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1523612089411},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1523612089411},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1523612089411},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1523612089411},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1523612089411},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1523612089411},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1523612089411},{"_id":"themes/next/scripts/tags/button.js","hash":"5a61c2da25970a4981fbd65f4a57c5e85db4dcda","modified":1523612089411},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"db70a841e7c1708f95ca97b44413b526b267fa9b","modified":1523612109828},{"_id":"themes/next/scripts/tags/exturl.js","hash":"2b3a4dc15dea33972c0b6d46a1483dabbf06fb5b","modified":1523612089415},{"_id":"themes/next/scripts/tags/full-image.js","hash":"a98fc19a90924f2368e1982f8c449cbc09df8439","modified":1523612109828},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"1b97b1b5364945b8ab3e50813bef84273055234f","modified":1523612109828},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"b7600f6b868d8f4f7032126242d9738cd1e6ad71","modified":1523612089415},{"_id":"themes/next/scripts/tags/label.js","hash":"621004f2836040b12c4e8fef77e62cf22c561297","modified":1523612089415},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"460e5e1f305847dcd4bcab9da2038a85f0a1c273","modified":1523612089415},{"_id":"themes/next/scripts/tags/note.js","hash":"4975d4433e11161b2e9a5744b7287c2d667b3c76","modified":1523612089415},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1523612089415},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1523612110688},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1523612089415},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1523612089415},{"_id":"themes/next/layout/_macro/reward.swig","hash":"aa620c582143f43ba1cb1a5e59240041a911185b","modified":1523612109828},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1523611944591},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1523611944591},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1523611944591},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1523611944591},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1523611944591},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1523611944591},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1523611944591},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1523611944591},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1523612089415},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1523612089415},{"_id":"themes/next/source/images/favicon.ico","hash":"f5dc5360aae06aaae6c1d7158cca54fc4d38413b","modified":1523611944591},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1523611944591},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1523611944591},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1523612089415},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1523611944591},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1523611944591},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1523611944591},{"_id":"source/uploads/shadian.png","hash":"13568e633f7fdcd2d84984b3a0c7a458a7311181","modified":1523611944583},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523611944587},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523611944587},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523611944591},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523611944591},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523611944591},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523611944591},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523612110688},{"_id":"themes/next/layout/_macro/menu/menu-badge-1.swig","hash":"7ffc5c159ab566805ceda6b8c7a4149a7e296116","modified":1523612089411},{"_id":"themes/next/layout/_macro/menu/menu-badge-2.swig","hash":"7b96a0e6079e845573338523cea4437817a4b1e1","modified":1523612089411},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"6a04cd1ef9ebac103d86b61505fa9b0f26268fdc","modified":1523612089411},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1523611944583},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"cd7e3331a61939c820e0437bf5d815cb0a42fefb","modified":1523612089411},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"9f7aa33a620aea6ede1fb907b61fd071c018c525","modified":1523612089411},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1523612109828},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1523611944583},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1523611944587},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1523611944587},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1523611944587},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1523611944587},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1523612109828},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1523611944587},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1523612089411},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"60a51a33416e2b86ac9fbefc86b80f2f5f60e1c0","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1523611944587},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1523612089411},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"2fbee33a4ccd7c8217c73e85a9a1488170e05629","modified":1523612089411},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1523612089411},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"17a54796f6e03fc834880a58efca45c286e40e40","modified":1523612089411},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"40e3cacbd5fa5f2948d0179eff6dd88053e8648e","modified":1523612089411},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"6f340d122a9816ccdf4b45b662880a4b2d087671","modified":1523612089411},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"c0eb6123464d745ac5324ce6deac8ded601f432f","modified":1523612089411},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"42f62695029834d45934705c619035733762309e","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"94b26dfbcd1cf2eb87dd9752d58213338926af27","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"cee047575ae324398025423696b760db64d04e6f","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1523612089411},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1523612089411},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1523612089411},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1523612089411},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"011ae6303afacddabc4ddf570fe3dd227569cd4f","modified":1523612089411},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1523612089411},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1523612089411},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1523612089411},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1523612089411},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"f0b130289f29cec0dd677dcabde6065e26d81751","modified":1523612110684},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1523612089415},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1523612110684},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"81ca13d6d0beff8b1a4b542a51e3b0fb68f08efd","modified":1523612110684},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"7a2706304465b9e673d5561b715e7c72a238437c","modified":1523612089415},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1523612110688},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"32392d213f5d05bc26b2dc452f2fc6fea9d44f6d","modified":1523612110688},{"_id":"themes/next/source/css/_variables/base.styl","hash":"cfb03ec629f13883509eac66e561e9dba562333f","modified":1523612110688},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1523612089415},{"_id":"themes/next/source/lib/canvas-nest/README.md","hash":"bf7819cbb879bb82ec1097513d8f799df8835e0f","modified":1523612089415},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"ad36e46b0cc69785adf17d018bf1d2533c4a13ab","modified":1523612089415},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1523612089415},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1523612089415},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1523612089415},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1523612089415},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1523612089415},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1523611944595},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1523612089415},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"531cdedd7fbe8cb1dab2e4328774a9f6b15b59da","modified":1523612110688},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1523612089415},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1523611944595},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1523612089415},{"_id":"themes/next/source/js/src/motion.js","hash":"50e57f8acb6924c6999cdcc664ddd3f0730d2061","modified":1523612110688},{"_id":"themes/next/source/js/src/post-details.js","hash":"d1333fb588d4521b4d1e9c69aef06e0ad1bf0b12","modified":1523612110688},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1523612089415},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1523611944595},{"_id":"themes/next/source/js/src/utils.js","hash":"9543f124adba1f6e3c93d61f85e3e6f74ed5fff4","modified":1523612110688},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1523612089423},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1523612089423},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1523612089423},{"_id":"themes/next/source/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1523612089419},{"_id":"themes/next/source/lib/pace/README.md","hash":"33b87ed998d59f117dc329f999a4ffc744b41e79","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1523612089419},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1523612089419},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1523611944603},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1523611944595},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1523611944595},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1523611944595},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1523611944595},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1523611944595},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1523611944595},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1523611944595},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1523611944595},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1523611944595},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1523611944603},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1523611944603},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1523611944603},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1523611944603},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1523611944603},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1523611944603},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1523611944603},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1523611944603},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1523611944603},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1523611944607},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1523611944607},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1523612089419},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1523612089419},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1523611944603},{"_id":"themes/next/source/images/shadian.png","hash":"13568e633f7fdcd2d84984b3a0c7a458a7311181","modified":1523611944595},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1523611944587},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1523611944587},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1523612089411},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1523612089411},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1523612109828},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1523612109828},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1523612109828},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1523612109832},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1523611944587},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1523611944587},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1523612110684},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1523612110684},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1523612089415},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1523611944591},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1523612110684},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"f362fbc791dafb378807cabbc58abf03e097af6d","modified":1523612089415},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1523611944591},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"cb338bb433648be76cf27dc6c0b6a62b5008a0a9","modified":1523612089459},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1523611944591},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1523611944591},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1523611944591},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1523611944591},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1523611944591},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"ba1842dbeb97e46c6c4d2ae0e7a2ca6d610ada67","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1523611944591},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"a863f2c8bae1fbccdc181a5d178b808cd80c5b5e","modified":1523612089415},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1523612110688},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1523612089415},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1523612089415},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1523612089415},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1523612110688},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1523612089423},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1523612089423},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1523611944595},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1523611944595},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1523611944595},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1523611944595},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1523611944595},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1523611944595},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1523611944603},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1523611944603},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1523611944603},{"_id":"themes/next/source/images/mountain.png","hash":"8c95e349ee3316a8b0232e8f145dc108da3891f4","modified":1523611944591},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1523612089419},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1523612089419},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1523612089423},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1523611944599},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1523611944599},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1523611944603},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1523611944603},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1523612109828},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1523612109828},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1523612109828},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1523612109832},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1523612109832},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1523612109832},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1523612109832},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1523612109832},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1523612109832},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"0b57ca04dc3998cf70bb90d777b0db05f3928b82","modified":1523612109952},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1523612109952},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"74e1bae03445ba52b6b2b57c1081494005b63f27","modified":1523612109952},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1523612109952},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8bf095377d28881f63a30bd7db97526829103bf2","modified":1523612109952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1523612109952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1523612109952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1523612109952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1523612109952},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1523612109952},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"5d15cc8bbefe44c77a9b9f96bf04a6033a4b35b8","modified":1523612109952},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1523612110684},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1523612110684},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1523611944587},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1523612110684},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1523612089415},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c06be422bc41fd35e5c7948cdea2c09961207f6","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1523611944591},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1523612110684},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1523612110684},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1523612089419},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1523611944595},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1523611944595},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1523611944603},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1523611944599},{"_id":"public/atom.xml","hash":"83c666909f3eab93f04c32c57cb65a6a024abb61","modified":1523802137646},{"_id":"public/404.html","hash":"5ebb7e8cf77c9074ecb6551d8ee96b083393f9a1","modified":1523802137704},{"_id":"public/about/index.html","hash":"49c4c0d126869055f67d08eab346817c7f25140e","modified":1523802137704},{"_id":"public/categories/index.html","hash":"cfbe6db1aa7aa216a5eb6424a56d132a072e11e2","modified":1523802137704},{"_id":"public/tags/index.html","hash":"c4d431d147c2da604d79f564f3d09677e30349f3","modified":1523802137704},{"_id":"public/mysql-ha.html","hash":"461b99ad4738b598c6eda7fd49e5ef1c93a12661","modified":1523802137704},{"_id":"public/keadhcp-usage.html","hash":"6b21a724ddbda807ee316eedb553d05b0da5199a","modified":1523802137704},{"_id":"public/IPAM_install.html","hash":"6d923743e699c0332218b7d596393ae7caa6ed0a","modified":1523802137705},{"_id":"public/MAAS+ubuntu-local-repo.html","hash":"f42dae17b05b67db8606d6c3a7462aa10a803ead","modified":1523802137705},{"_id":"public/opnfv-Euphrates-install-03.html","hash":"a13a15280ba983127fdeb66a5f7a320586fc5a7f","modified":1523802137705},{"_id":"public/openstack-images-password.html","hash":"438c3d9600621eb1fec3c283c75365df7f75c25e","modified":1523802137705},{"_id":"public/opnfv_Euphrates_install-02.html","hash":"183243cd9f6fcf01c8362d588200c9fab81ca588","modified":1523802137705},{"_id":"public/opnfv_Euphrates_install-01.html","hash":"b88dc6d192a3bf587b8012ebc4617d6f2067f5b1","modified":1523802137705},{"_id":"public/OPNFV测试项目-Dovetail.html","hash":"81820e3657833486c8a3b45c12ceb550053e04fb","modified":1523802137705},{"_id":"public/OPNFV测试项目-yardstick.html","hash":"89a7af552ec7da09baac93c9078fe4977bb7f0c7","modified":1523802137705},{"_id":"public/hexo_blog_build.html","hash":"66903db23c67a35f9416cc6db49f06f2a8856325","modified":1523802137705},{"_id":"public/archives/index.html","hash":"a30acebaa646bb070fd7a4825f5587d8a5ab0870","modified":1523802137706},{"_id":"public/archives/2017/index.html","hash":"16511f6197738b43797c30f776a7ea6dd9f8875d","modified":1523802137706},{"_id":"public/archives/2017/06/index.html","hash":"38161f4370d5c42c1e2fe3127217b91830a408d7","modified":1523802137706},{"_id":"public/archives/2017/09/index.html","hash":"47af67251a82c9ba0ec0be0531450db313cedb15","modified":1523802137706},{"_id":"public/archives/2017/10/index.html","hash":"4c9696e942e52874a4cde1c261e7213d9741e7a3","modified":1523802137706},{"_id":"public/archives/2017/12/index.html","hash":"bd4455488dd23b9084e7d4a8274a51ad719322ec","modified":1523802137706},{"_id":"public/archives/2018/index.html","hash":"f283d5cced477a7fc35b859dd9d80b698ccff209","modified":1523802137706},{"_id":"public/archives/2018/01/index.html","hash":"21b12a3bc812dfc8cf591f504d484591cf3926d5","modified":1523802137706},{"_id":"public/archives/2018/03/index.html","hash":"c189a56a585b0b824877b989f6930066f79d0382","modified":1523802137706},{"_id":"public/archives/2018/04/index.html","hash":"f75e36c2a35d41b99d00bcdfa2d711b9a6b10fe9","modified":1523802137706},{"_id":"public/categories/ubuntu/index.html","hash":"be9bb78986ea075baa046ddf132dcb29322c45d7","modified":1523802137706},{"_id":"public/categories/OPNFV/index.html","hash":"8bef5d42a2d80bc56087ddeff373de79861cb16f","modified":1523802137707},{"_id":"public/categories/hexo/index.html","hash":"e14731608055191700e2e549b6f7a19f6051ef34","modified":1523802137707},{"_id":"public/categories/Openstack/index.html","hash":"6930e356a69af92a10966ee02abf79251c535e01","modified":1523802137707},{"_id":"public/index.html","hash":"ffa7f4cfc5a94b162f6ffa6ccb2ab22bb922a68e","modified":1523802137707},{"_id":"public/page/2/index.html","hash":"e73fd8d13ad8ec6535b3260ab0a3fc62cb732861","modified":1523802137707},{"_id":"public/source/tags/IPAM/index.html","hash":"57f7ac8b6075b5ddf5970d65d7431fe6c8ae3b7f","modified":1523802137707},{"_id":"public/source/tags/ubuntu/index.html","hash":"d5aaa528918ab8065bff66f92c887b1d6fe4dbe2","modified":1523802137707},{"_id":"public/source/tags/MAAS/index.html","hash":"406bd0bbc0ebd74676f94f2694dad47e1b31baa0","modified":1523802137707},{"_id":"public/source/tags/Dovetail/index.html","hash":"85bb52dd5b75eb406656d45ee521c460764a3d42","modified":1523802137707},{"_id":"public/source/tags/OPNFV/index.html","hash":"485d11b59ac304acee4d7ef26946158cb9a4e20a","modified":1523802137707},{"_id":"public/source/tags/NFV/index.html","hash":"c4f7374a595942d1d30c8c790e19d59b7cdfae27","modified":1523802137707},{"_id":"public/source/tags/CVP/index.html","hash":"338e621afe7dd0be43da4be17e6e0952ea4d966e","modified":1523802137707},{"_id":"public/source/tags/Yardstick/index.html","hash":"1e877cd6f49834207a7c6f6fbfb39fd955c958d7","modified":1523802137708},{"_id":"public/source/tags/Openstack/index.html","hash":"5c6f0e933154e21caa4ffa6aa2b995b074e00917","modified":1523802137708},{"_id":"public/source/tags/hexo/index.html","hash":"41148810281300af90f140e3ad755df6a206c502","modified":1523802137708},{"_id":"public/source/tags/blog/index.html","hash":"522a9a523eef583a8b3286a7798718b7eb0599c8","modified":1523802137708},{"_id":"public/source/tags/KEA/index.html","hash":"2b1b065bca33b9610bf916743f32c686fa90dabc","modified":1523802137708},{"_id":"public/source/tags/Euphrates/index.html","hash":"af85e24965d04a13155d10e15eac9351ef0115be","modified":1523802137708},{"_id":"public/source/tags/dpdk/index.html","hash":"087fc6bf209f65ce82d935e26b1f698567ed781e","modified":1523802137708},{"_id":"public/source/tags/mysql/index.html","hash":"04171d228c321525c02de059cce02668e4edf3f3","modified":1523802137708},{"_id":"public/source/tags/keepalived/index.html","hash":"31114c21cac4e916341d4cbe166d990fc86792fc","modified":1523802137708},{"_id":"public/CNAME","hash":"29130e73906aad89258d00ef49ab579d85928519","modified":1523802137820},{"_id":"public/uploads/favicon-16x16.ico","hash":"cc466c86eccdd03cb30073c65d34bc25f0c9ea69","modified":1523802137820},{"_id":"public/uploads/favicon-32x32.ico","hash":"da8d1ed7e93f42362d6ba0ebdf7c8f52bbacaa2c","modified":1523802137820},{"_id":"public/uploads/favicon-48x48.ico","hash":"079eab6611de3e43df1b9a51138ec57e33becff4","modified":1523802137820},{"_id":"public/uploads/cc.png","hash":"a2076f8accb33a93a1050d2fda587b3ac15eb944","modified":1523802137820},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1523802137820},{"_id":"public/uploads/wechatpay.jpg","hash":"09f717f06dc17b640fdafe854172156b35a0b952","modified":1523802137820},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1523802137821},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1523802137821},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1523802137821},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1523802137821},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1523802137821},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1523802137821},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1523802137821},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1523802137821},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1523802137821},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1523802137821},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1523802137821},{"_id":"public/images/favicon.ico","hash":"f5dc5360aae06aaae6c1d7158cca54fc4d38413b","modified":1523802137821},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1523802137821},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1523802137822},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1523802137822},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1523802137822},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1523802137822},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1523802137822},{"_id":"public/lib/canvas-nest/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1523802137822},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1523802137822},{"_id":"public/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1523802137822},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1523802137822},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1523802137822},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1523802137822},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1523802137822},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1523802137822},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1523802137822},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1523802137822},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1523802137823},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1523802137823},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1523802137823},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1523802137823},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1523802137824},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"e3644659f1f5914ee4f29d7d8a44a88c897af6b8","modified":1523802137825},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"eb9898e05f6ccd702580e6f16c46beb36688f162","modified":1523802137825},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1523802138772},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1523802138831},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1523802138838},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1523802138838},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1523802138838},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"87045d5d9a528c0b1cbf030b3c7d23c7be02cae2","modified":1523802138838},{"_id":"public/lib/canvas-nest/README.html","hash":"9bb29b415d0859e097fdfcc6689b235c0e699224","modified":1523802138855},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"ad36e46b0cc69785adf17d018bf1d2533c4a13ab","modified":1523802138855},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1523802138855},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1523802138855},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1523802138856},{"_id":"public/js/src/bootstrap.js","hash":"531cdedd7fbe8cb1dab2e4328774a9f6b15b59da","modified":1523802138856},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1523802138856},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1523802138856},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1523802138856},{"_id":"public/js/src/motion.js","hash":"50e57f8acb6924c6999cdcc664ddd3f0730d2061","modified":1523802138857},{"_id":"public/js/src/post-details.js","hash":"d1333fb588d4521b4d1e9c69aef06e0ad1bf0b12","modified":1523802138857},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1523802138857},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1523802138857},{"_id":"public/js/src/utils.js","hash":"9543f124adba1f6e3c93d61f85e3e6f74ed5fff4","modified":1523802138857},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1523802138857},{"_id":"public/lib/pace/README.html","hash":"58f2105ada5cc52dff5aabcecb92569ee84493a0","modified":1523802138857},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1523802138857},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1523802138857},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1523802138857},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1523802138857},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1523802138857},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1523802138857},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1523802138857},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1523802138858},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1523802138858},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1523802138858},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1523802138858},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1523802138858},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1523802138859},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1523802138859},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1523802138859},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1523802138859},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1523802138859},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1523802138859},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1523802138859},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1523802138859},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1523802138861},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1523802138862},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1523802138862},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1523802138862},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1523802138862},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1523802138862},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1523802138862},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1523802138862},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1523802138862},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1523802138862},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1523802138862},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1523802138863},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1523802138863},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1523802138863},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1523802138863},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1523802138863},{"_id":"public/css/main.css","hash":"814aaf84774f72de7b618b1144918c0114cc87bd","modified":1523802138863},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1523802138863},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1523802138863},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1523802138863},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1523802138863},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1523802138864},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1523802138864},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1523802138864},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1523802138864},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1523802138864},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1523802138864},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1523802138864},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1523802138864},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1523802138864},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1523802138864},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1523802138864},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1523802138864},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1523802138864},{"_id":"public/assets/algolia/algoliasearch.js","hash":"66feb37bd549311faeae1bd4eb7a0fb42b17bf84","modified":1523802138865},{"_id":"public/uploads/shadian.png","hash":"13568e633f7fdcd2d84984b3a0c7a458a7311181","modified":1523802138869},{"_id":"public/images/shadian.png","hash":"13568e633f7fdcd2d84984b3a0c7a458a7311181","modified":1523802138869},{"_id":"public/images/mountain.png","hash":"8c95e349ee3316a8b0232e8f145dc108da3891f4","modified":1523802138877},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1523802138878}],"Category":[{"name":"ubuntu","_id":"cjg0wg2vz00086ijxnpkbxkhb"},{"name":"OPNFV","_id":"cjg0wg2wj000h6ijxnfcf9n67"},{"name":"hexo","_id":"cjg0wg2ws000v6ijx7xgzdpsc"},{"name":"Openstack","_id":"cjg0wg2wt00116ijxzganb7le"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - arao'blog</title>\n    <meta name=\"description\" content=\"404����ҳ�治���ڣ�\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - arao'blog</title>\n    <meta name=\"description\" content=\"404����ҳ�治���ڣ�\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","date":"2018-04-13T09:34:49.403Z","updated":"2018-04-13T09:34:49.403Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjg0wg2si00006ijxrfymhvzf","content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - arao'blog</title>\n    <meta name=\"description\" content=\"404����ҳ�治���ڣ�\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - arao'blog</title>\n    <meta name=\"description\" content=\"404����ҳ�治���ڣ�\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"},{"title":"about","date":"2017-09-27T11:02:04.000Z","comments":0,"_content":"\n\n\n\n# 联系方式：\nEmail：longyu805@163.com\n\n# 个人简介：\n一只会说6666的程序媛鼓励师\n\n# 技能清单\n\n- NFV研究\n  目前致力于NFV领域的测试研究，混迹于OPNFV、ONAP社区学习，研究OPNFV的测试项目。\n\n- 嵌入式开发工程师\n  做过几年嵌入式开发，做过过内核移植、网关开发、驱动移植、wifi快连等。\n\n- 编程语言\n  C/C++，shell，python\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-09-27 19:02:04\ncomments: false\n---\n\n\n\n\n# 联系方式：\nEmail：longyu805@163.com\n\n# 个人简介：\n一只会说6666的程序媛鼓励师\n\n# 技能清单\n\n- NFV研究\n  目前致力于NFV领域的测试研究，混迹于OPNFV、ONAP社区学习，研究OPNFV的测试项目。\n\n- 嵌入式开发工程师\n  做过几年嵌入式开发，做过过内核移植、网关开发、驱动移植、wifi快连等。\n\n- 编程语言\n  C/C++，shell，python\n","updated":"2018-04-13T09:35:34.400Z","path":"about/index.html","layout":"page","_id":"cjg0wg2vl00026ijxxchz5rxg","content":"<h1 id=\"联系方式：\"><a href=\"#联系方式：\" class=\"headerlink\" title=\"联系方式：\"></a>联系方式：</h1><p>Email：<a href=\"mailto:longyu805@163.com\" target=\"_blank\" rel=\"noopener\">longyu805@163.com</a></p>\n<h1 id=\"个人简介：\"><a href=\"#个人简介：\" class=\"headerlink\" title=\"个人简介：\"></a>个人简介：</h1><p>一只会说6666的程序媛鼓励师</p>\n<h1 id=\"技能清单\"><a href=\"#技能清单\" class=\"headerlink\" title=\"技能清单\"></a>技能清单</h1><ul>\n<li><p>NFV研究<br>目前致力于NFV领域的测试研究，混迹于OPNFV、ONAP社区学习，研究OPNFV的测试项目。</p>\n</li>\n<li><p>嵌入式开发工程师<br>做过几年嵌入式开发，做过过内核移植、网关开发、驱动移植、wifi快连等。</p>\n</li>\n<li><p>编程语言<br>C/C++，shell，python</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"联系方式：\"><a href=\"#联系方式：\" class=\"headerlink\" title=\"联系方式：\"></a>联系方式：</h1><p>Email：<a href=\"mailto:longyu805@163.com\" target=\"_blank\" rel=\"noopener\">longyu805@163.com</a></p>\n<h1 id=\"个人简介：\"><a href=\"#个人简介：\" class=\"headerlink\" title=\"个人简介：\"></a>个人简介：</h1><p>一只会说6666的程序媛鼓励师</p>\n<h1 id=\"技能清单\"><a href=\"#技能清单\" class=\"headerlink\" title=\"技能清单\"></a>技能清单</h1><ul>\n<li><p>NFV研究<br>目前致力于NFV领域的测试研究，混迹于OPNFV、ONAP社区学习，研究OPNFV的测试项目。</p>\n</li>\n<li><p>嵌入式开发工程师<br>做过几年嵌入式开发，做过过内核移植、网关开发、驱动移植、wifi快连等。</p>\n</li>\n<li><p>编程语言<br>C/C++，shell，python</p>\n</li>\n</ul>\n"},{"title":"分类","date":"2018-04-13T09:35:34.400Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 日期\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-04-13T09:35:34.400Z","path":"categories/index.html","layout":"page","_id":"cjg0wg2vo00046ijxbexzaryf","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2018-04-13T09:35:34.400Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 分类\ndate: 日期\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-04-13T09:35:34.400Z","path":"tags/index.html","layout":"page","_id":"cjg0wg2vw00066ijxq5l96seg","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"NFV介绍","date":"2017-09-29T08:40:53.000Z","keywords":null,"description":null,"summary_img":null,"_content":"","source":"_drafts/NFV介绍.md","raw":"---\ntitle: NFV介绍\ndate: 2017-09-29 16:40:53\ntags:\nkeywords:\ncategories:\ndescription:\nsummary_img:\n---\n","slug":"NFV介绍","published":0,"updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2ve00016ijxyntr9kke","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"---\ntitle: 如何查看Openstack的版本\ndate: 2017-11-14 11:43:06\ntags:\n  - Openstack\nkeywords:\n  - Openstack version\ncategories:\n  - Openstack\ndescription: 如何确定一个已经安装的Openstack环境是属于什么版本\nsummary_img:\n--\n\n\n\nOpenstack从2010年发布首个版本Austin\n\n![](https://i.imgur.com/AMrpqx8.jpg)\n\n\n\n在openstack的版本发布链接中查询\n\nhttps://releases.openstack.org/teams/nova.html\n\n\n\n\n\n\n\n【参考链接】\n\n1)[openstack 版本查询](https://zhidao.baidu.com/question/245308826039199324.html?fr=iks&word=openstack+%B0%E6%B1%BE&ie=gbk)\n","source":"_drafts/openstack-version.md","raw":"---\ntitle: 如何查看Openstack的版本\ndate: 2017-11-14 11:43:06\ntags:\n  - Openstack\nkeywords:\n  - Openstack version\ncategories:\n  - Openstack\ndescription: 如何确定一个已经安装的Openstack环境是属于什么版本\nsummary_img:\n--\n\n\n\nOpenstack从2010年发布首个版本Austin\n\n![](https://i.imgur.com/AMrpqx8.jpg)\n\n\n\n在openstack的版本发布链接中查询\n\nhttps://releases.openstack.org/teams/nova.html\n\n\n\n\n\n\n\n【参考链接】\n\n1)[openstack 版本查询](https://zhidao.baidu.com/question/245308826039199324.html?fr=iks&word=openstack+%B0%E6%B1%BE&ie=gbk)\n","slug":"openstack-version","published":0,"date":"2018-04-13T09:32:24.579Z","updated":"2018-04-13T09:32:24.579Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2vm00036ijxgb1n1711","content":"<hr>\n<p>title: 如何查看Openstack的版本<br>date: 2017-11-14 11:43:06<br>tags:</p>\n<ul>\n<li>Openstack<br>keywords:</li>\n<li>Openstack version<br>categories:</li>\n<li>Openstack<br>description: 如何确定一个已经安装的Openstack环境是属于什么版本<h2 id=\"summary-img\"><a href=\"#summary-img\" class=\"headerlink\" title=\"summary_img:\"></a>summary_img:</h2></li>\n</ul>\n<p>Openstack从2010年发布首个版本Austin</p>\n<p><img src=\"https://i.imgur.com/AMrpqx8.jpg\" alt=\"\"></p>\n<p>在openstack的版本发布链接中查询</p>\n<p><a href=\"https://releases.openstack.org/teams/nova.html\" target=\"_blank\" rel=\"noopener\">https://releases.openstack.org/teams/nova.html</a></p>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://zhidao.baidu.com/question/245308826039199324.html?fr=iks&amp;word=openstack+%B0%E6%B1%BE&amp;ie=gbk\" target=\"_blank\" rel=\"noopener\">openstack 版本查询</a></p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>title: 如何查看Openstack的版本<br>date: 2017-11-14 11:43:06<br>tags:</p>\n<ul>\n<li>Openstack<br>keywords:</li>\n<li>Openstack version<br>categories:</li>\n<li>Openstack<br>description: 如何确定一个已经安装的Openstack环境是属于什么版本<h2 id=\"summary-img\"><a href=\"#summary-img\" class=\"headerlink\" title=\"summary_img:\"></a>summary_img:</h2></li>\n</ul>\n<p>Openstack从2010年发布首个版本Austin</p>\n<p><img src=\"https://i.imgur.com/AMrpqx8.jpg\" alt=\"\"></p>\n<p>在openstack的版本发布链接中查询</p>\n<p><a href=\"https://releases.openstack.org/teams/nova.html\" target=\"_blank\" rel=\"noopener\">https://releases.openstack.org/teams/nova.html</a></p>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://zhidao.baidu.com/question/245308826039199324.html?fr=iks&amp;word=openstack+%B0%E6%B1%BE&amp;ie=gbk\" target=\"_blank\" rel=\"noopener\">openstack 版本查询</a></p>\n"},{"title":"IP地址管理(IPAM)","date":"2018-03-30T10:23:56.000Z","keywords":["IPAM"],"description":["IP地址管理环境搭建"],"summary_img":null,"_content":"\n\n\n## 1 前言\n\nIPAM：IP Address Management  ，及IP地址管理，用于发现、监视、审核和管理企业网络上使用的 IP 地址空间。目前开源的IPAM有许多，根据维基百科[IPAM](https://en.wikipedia.org/wiki/IP_address_management)介绍有十多种IPAM类软件，在研究了一下活跃的项目后发现phpIPAM相当的不错，尝试把玩了一下。\n\n![phpipam](https://phpipam.net/css/images/old/phpipam_logo_small.png)\n\n## 2 快速搭建\n\nphpIPAM的官方有一个demo可以访问：https://demo.phpipam.net/login/，登录的用户名和密码为：Admin / ipamadmin，在首页也可以查看。\n\n查找了下发现docker hub中有相关的镜像[1]，直接从docker上拉取一个镜像作为快速搭建体验。\n\n### 2.1 拉取相关镜像\n\n安装phpIPAM需要mysql数据库作为存储，首先获取mysql数据库\n\n```shell\nroot@ubuntu:~# docker pull mysql:5.6\n```\n\n启动mysql数据库，将`my-secret-pw`换成自己的数据库密码，同时需要映射数据库存储路径`/my_dir/phpipam`\n\n```shell\nroot@ubuntu:~# docker run --name phpipam-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -v /my_dir/phpipam:/var/lib/mysql -d mysql:5.6\n```\n\n获取phpIPAM的镜像\n\n```shell\nroot@ubuntu:~# docker pull pierrecdn/phpipam\n```\n\n启动phpIPAM镜像，需要将docker镜像内的80端口映射到本机的80端口\n\n```shell\nroot@ubuntu:~# docker run -ti -d -p 80:80 --name ipam --link phpipam-mysql:mysql pierrecdn/phpipam\n```\n\n### 2.2 phpIPAM配置\n\n随后登录http://<HOST_IP>:80即可以访问phpIPAM的页面，首次登录需要安装数据库，主要是导入phpIPAM的数据库表\n\n1)自动导入数据库\n\n点击“Automatic database installtion”\n\n![phpIPAM自动导入数据库](https://cloud.githubusercontent.com/assets/4225738/8746785/01758b9e-2c8d-11e5-8643-7f5862c75efe.png)\n\n2)输入数据库密码\n\n输入2.1节中设置的数据库密码，随后点击“Install phpipam database”\n\n![输入数据库密码](https://cloud.githubusercontent.com/assets/4225738/8746789/0ad367e2-2c8d-11e5-80bb-f5093801e139.png)\n\n3)重新设置访问密码\n\n输入新密码后点击\"Save setting\"，重新登录即可进入页面\n\n![重置访问密码](https://cloud.githubusercontent.com/assets/4225738/8746790/0c434bf6-2c8d-11e5-9ae7-b7d1021b7aa0.png)\n\n一个phpIPAM的环境就快速搭建起来了，可以随意操作玩耍了。\n\n## 3 完整搭建\n\n如果想完整的搭建一个phpIPAM在本地同时做一些自定义的修改就需要下载源码并搭建，过程也不复杂官方文档也有详细描述[2]。\n\nphpIPAM当前仅支持IPv4的主机扫描，并不支持IPv6的主机扫描，对于该项需求在github上已经有人提出了但是当前仍没有解决[3]。\n\n接下来以ubuntu16.04为例讲解如何搭建phpIPAM环境。\n\n### 3.1 安装必要软件包\n\n```shell\nroot@ubuntu:~# apt-get install apache2 mariadb-server php php-pear php7.0-gmp php7.0-mysql php7.0-mbstring php7.0-gd php7.0-mcrypt php7.0-curl git cron\n```\n\n安装过程需要配置mysql root用户密码，安装完成后拉取phpIPAM的代码\n\n```shell\nroot@ubuntu:~# cd /var/www/html/\nroot@ubuntu:/var/www/html# git clone https://github.com/phpipam/phpipam.git .\nroot@ubuntu:/var/www/html# git checkout 1.3.1\n```\n\n### 3.2 配置相应软件\n\n1) 配置mysql数据库\n\n启动mysql(MariaDB) 数据库，并配置mysql的root账户\n\n```shell\nroot@ubuntu:~# /etc/init.d/mysql restart\nroot@ubuntu:~# mysql_secure_installation\nNOTE: RUNNING ALL PARTS OF THIS SCRIPT ISRECOMMENDED FOR ALL MariaDB\n\n      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!\nIn order to log into MariaDB to secure it,we'll need the current\n\npassword for the root user.  If you've just installed MariaDB, and\n\nyou haven't set the root password yet, thepassword will be blank,\n\nso you should just press enter here.\nEnter current password for root (enter fornone): \n\nOK, successfully used password, movingon...\n\nSetting the root password ensures thatnobody can log into the MariaDB\n\nroot user without the proper authorisation.\nSet root password? [Y/n] y\n\nNew password: \n\nRe-enter new password: \n\nPassword updated successfully!\n\nReloading privilege tables..\n\n ...Success!\nBy default, a MariaDB installation has ananonymous user, allowing anyone\n\nto log into MariaDB without having to havea user account created for\n\nthem. This is intended only for testing, and to make the installation\n\ngo a bit smoother.  You should remove them before moving into a\n\nproduction environment.\nRemove anonymous users? [Y/n] y\n\n ...Success!\nNormally, root should only be allowed toconnect from 'localhost'.  This\n\nensures that someone cannot guess at theroot password from the network.\nDisallow root login remotely? [Y/n] n\n\n ...skipping.\nBy default, MariaDB comes with a databasenamed 'test' that anyone can\n\naccess. This is also intended only for testing, and should be removed\n\nbefore moving into a productionenvironment.\n\nRemove test database and access to it?[Y/n] y\n\n -Dropping test database...\n\n ...Success!\n\n -Removing privileges on test database...\n\n ...Success!\n\nReloading the privilege tables will ensurethat all changes made so far\n\nwill take effect immediately.\n\nReload privilege tables now? [Y/n] y\n\n ...Success!\n\nCleaning up...\n\nAll done! If you've completed all of the above steps, your MariaDB\n\ninstallation should now be secure.\n\nThanks for using MariaDB!\n```\n\n2) 配置apache代理\n\n配置`/etc/apache2/apache2.conf`\n\n```\n<Directory \"/var/www/html\">\n\tOptions FollowSymLinks\n\tAllowOverride all\n\tOrder allow,deny\n\tAllow from all\n</Directory>\n```\n\n设置apache时区\n\n```shell\nroot@ubuntu:~# grep timezone /etc/php/7.0/apache2/php.ini\n; Defines the default timezone used by the date functions\n; http://php.net/date.timezone\ndate.timezone = Asia/Shanghai\n```\n\n使能apache重写\n\n```shell\nroot@ubuntu:~# a2enmod rewrite\n```\n\n重启apapche2服务\n\n```shell\nroot@ubuntu:~# /etc/init.d/apache2 start\n```\n\n3) 配置phpIPAM\n\n首先拷贝配置文件\n\n```shell\nroot@ubuntu:/var/www/html# cp config.dist.php config.php\n```\n\n修改配置文件的数据库信息\n\n```php\n$db['host'] = 'localhost';\n$db['user'] = \"root\";\n$db['pass'] = \"r00tme\";\n$db['name'] = 'phpipam';\n$db['port'] = 3306;\n```\n\n配置ipam的v4主机定时检查\n\n```shell\n# update host statuses exery 15minutes\"    \n*/15 * * * * /usr/bin/php/opt/cfiec/6dnsnetm/ipam/functions/scripts/pingCheck.php\";\n*/15 * * * * /usr/bin/php/opt/cfiec/6dnsnetm/ipam/functions/scripts/discoveryCheck.php\";\n```\n\n配置ipam数据库每天备份和自动删除10天以上的数据备份\n\n```shell\n@daily /usr/bin/mysqldump -uroot -pr00tmephpipam > /opt/cfiec/6dnsnetm/ipam/db/bkp/phpipam_bkp_$(date+\"%y%m%d\").db\";\n@daily /usr/bin/find/opt/cfiec/6dnsnetm/ipam/db/bkp/ -ctime +10 -exec rm {} \\;\n```\n\n可以通过crontab -l 查看配置是否正确\n\n重启cron服务\n\n```shell\nroot@ubuntu:/var/www/html# /etc/init.d/cron restart\n```\n\n随后打开网页访问相应的IP地址即可进入到安装界面。\n\n\n\n\n\n【参考链接】\n\n1)[phpIPAM docker 主页](https://hub.docker.com/r/clinta/phpipam/)\n\n2)[phpIPAM官网](https://phpipam.net/documents/installation/)\n\n3)[phpIPAM IPv6主机扫描](https://github.com/phpipam/phpipam/issues/777)\n\n\n\n\n\n","source":"_posts/IPAM_install.md","raw":"---\ntitle: IP地址管理(IPAM)\ndate: 2018-03-30 18:23:56\ntags:\n  - IPAM\n  - ubuntu\nkeywords:\n  - IPAM\ncategories:\n  - ubuntu\ndescription:\n  - IP地址管理环境搭建\nsummary_img:\n---\n\n\n\n## 1 前言\n\nIPAM：IP Address Management  ，及IP地址管理，用于发现、监视、审核和管理企业网络上使用的 IP 地址空间。目前开源的IPAM有许多，根据维基百科[IPAM](https://en.wikipedia.org/wiki/IP_address_management)介绍有十多种IPAM类软件，在研究了一下活跃的项目后发现phpIPAM相当的不错，尝试把玩了一下。\n\n![phpipam](https://phpipam.net/css/images/old/phpipam_logo_small.png)\n\n## 2 快速搭建\n\nphpIPAM的官方有一个demo可以访问：https://demo.phpipam.net/login/，登录的用户名和密码为：Admin / ipamadmin，在首页也可以查看。\n\n查找了下发现docker hub中有相关的镜像[1]，直接从docker上拉取一个镜像作为快速搭建体验。\n\n### 2.1 拉取相关镜像\n\n安装phpIPAM需要mysql数据库作为存储，首先获取mysql数据库\n\n```shell\nroot@ubuntu:~# docker pull mysql:5.6\n```\n\n启动mysql数据库，将`my-secret-pw`换成自己的数据库密码，同时需要映射数据库存储路径`/my_dir/phpipam`\n\n```shell\nroot@ubuntu:~# docker run --name phpipam-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -v /my_dir/phpipam:/var/lib/mysql -d mysql:5.6\n```\n\n获取phpIPAM的镜像\n\n```shell\nroot@ubuntu:~# docker pull pierrecdn/phpipam\n```\n\n启动phpIPAM镜像，需要将docker镜像内的80端口映射到本机的80端口\n\n```shell\nroot@ubuntu:~# docker run -ti -d -p 80:80 --name ipam --link phpipam-mysql:mysql pierrecdn/phpipam\n```\n\n### 2.2 phpIPAM配置\n\n随后登录http://<HOST_IP>:80即可以访问phpIPAM的页面，首次登录需要安装数据库，主要是导入phpIPAM的数据库表\n\n1)自动导入数据库\n\n点击“Automatic database installtion”\n\n![phpIPAM自动导入数据库](https://cloud.githubusercontent.com/assets/4225738/8746785/01758b9e-2c8d-11e5-8643-7f5862c75efe.png)\n\n2)输入数据库密码\n\n输入2.1节中设置的数据库密码，随后点击“Install phpipam database”\n\n![输入数据库密码](https://cloud.githubusercontent.com/assets/4225738/8746789/0ad367e2-2c8d-11e5-80bb-f5093801e139.png)\n\n3)重新设置访问密码\n\n输入新密码后点击\"Save setting\"，重新登录即可进入页面\n\n![重置访问密码](https://cloud.githubusercontent.com/assets/4225738/8746790/0c434bf6-2c8d-11e5-9ae7-b7d1021b7aa0.png)\n\n一个phpIPAM的环境就快速搭建起来了，可以随意操作玩耍了。\n\n## 3 完整搭建\n\n如果想完整的搭建一个phpIPAM在本地同时做一些自定义的修改就需要下载源码并搭建，过程也不复杂官方文档也有详细描述[2]。\n\nphpIPAM当前仅支持IPv4的主机扫描，并不支持IPv6的主机扫描，对于该项需求在github上已经有人提出了但是当前仍没有解决[3]。\n\n接下来以ubuntu16.04为例讲解如何搭建phpIPAM环境。\n\n### 3.1 安装必要软件包\n\n```shell\nroot@ubuntu:~# apt-get install apache2 mariadb-server php php-pear php7.0-gmp php7.0-mysql php7.0-mbstring php7.0-gd php7.0-mcrypt php7.0-curl git cron\n```\n\n安装过程需要配置mysql root用户密码，安装完成后拉取phpIPAM的代码\n\n```shell\nroot@ubuntu:~# cd /var/www/html/\nroot@ubuntu:/var/www/html# git clone https://github.com/phpipam/phpipam.git .\nroot@ubuntu:/var/www/html# git checkout 1.3.1\n```\n\n### 3.2 配置相应软件\n\n1) 配置mysql数据库\n\n启动mysql(MariaDB) 数据库，并配置mysql的root账户\n\n```shell\nroot@ubuntu:~# /etc/init.d/mysql restart\nroot@ubuntu:~# mysql_secure_installation\nNOTE: RUNNING ALL PARTS OF THIS SCRIPT ISRECOMMENDED FOR ALL MariaDB\n\n      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!\nIn order to log into MariaDB to secure it,we'll need the current\n\npassword for the root user.  If you've just installed MariaDB, and\n\nyou haven't set the root password yet, thepassword will be blank,\n\nso you should just press enter here.\nEnter current password for root (enter fornone): \n\nOK, successfully used password, movingon...\n\nSetting the root password ensures thatnobody can log into the MariaDB\n\nroot user without the proper authorisation.\nSet root password? [Y/n] y\n\nNew password: \n\nRe-enter new password: \n\nPassword updated successfully!\n\nReloading privilege tables..\n\n ...Success!\nBy default, a MariaDB installation has ananonymous user, allowing anyone\n\nto log into MariaDB without having to havea user account created for\n\nthem. This is intended only for testing, and to make the installation\n\ngo a bit smoother.  You should remove them before moving into a\n\nproduction environment.\nRemove anonymous users? [Y/n] y\n\n ...Success!\nNormally, root should only be allowed toconnect from 'localhost'.  This\n\nensures that someone cannot guess at theroot password from the network.\nDisallow root login remotely? [Y/n] n\n\n ...skipping.\nBy default, MariaDB comes with a databasenamed 'test' that anyone can\n\naccess. This is also intended only for testing, and should be removed\n\nbefore moving into a productionenvironment.\n\nRemove test database and access to it?[Y/n] y\n\n -Dropping test database...\n\n ...Success!\n\n -Removing privileges on test database...\n\n ...Success!\n\nReloading the privilege tables will ensurethat all changes made so far\n\nwill take effect immediately.\n\nReload privilege tables now? [Y/n] y\n\n ...Success!\n\nCleaning up...\n\nAll done! If you've completed all of the above steps, your MariaDB\n\ninstallation should now be secure.\n\nThanks for using MariaDB!\n```\n\n2) 配置apache代理\n\n配置`/etc/apache2/apache2.conf`\n\n```\n<Directory \"/var/www/html\">\n\tOptions FollowSymLinks\n\tAllowOverride all\n\tOrder allow,deny\n\tAllow from all\n</Directory>\n```\n\n设置apache时区\n\n```shell\nroot@ubuntu:~# grep timezone /etc/php/7.0/apache2/php.ini\n; Defines the default timezone used by the date functions\n; http://php.net/date.timezone\ndate.timezone = Asia/Shanghai\n```\n\n使能apache重写\n\n```shell\nroot@ubuntu:~# a2enmod rewrite\n```\n\n重启apapche2服务\n\n```shell\nroot@ubuntu:~# /etc/init.d/apache2 start\n```\n\n3) 配置phpIPAM\n\n首先拷贝配置文件\n\n```shell\nroot@ubuntu:/var/www/html# cp config.dist.php config.php\n```\n\n修改配置文件的数据库信息\n\n```php\n$db['host'] = 'localhost';\n$db['user'] = \"root\";\n$db['pass'] = \"r00tme\";\n$db['name'] = 'phpipam';\n$db['port'] = 3306;\n```\n\n配置ipam的v4主机定时检查\n\n```shell\n# update host statuses exery 15minutes\"    \n*/15 * * * * /usr/bin/php/opt/cfiec/6dnsnetm/ipam/functions/scripts/pingCheck.php\";\n*/15 * * * * /usr/bin/php/opt/cfiec/6dnsnetm/ipam/functions/scripts/discoveryCheck.php\";\n```\n\n配置ipam数据库每天备份和自动删除10天以上的数据备份\n\n```shell\n@daily /usr/bin/mysqldump -uroot -pr00tmephpipam > /opt/cfiec/6dnsnetm/ipam/db/bkp/phpipam_bkp_$(date+\"%y%m%d\").db\";\n@daily /usr/bin/find/opt/cfiec/6dnsnetm/ipam/db/bkp/ -ctime +10 -exec rm {} \\;\n```\n\n可以通过crontab -l 查看配置是否正确\n\n重启cron服务\n\n```shell\nroot@ubuntu:/var/www/html# /etc/init.d/cron restart\n```\n\n随后打开网页访问相应的IP地址即可进入到安装界面。\n\n\n\n\n\n【参考链接】\n\n1)[phpIPAM docker 主页](https://hub.docker.com/r/clinta/phpipam/)\n\n2)[phpIPAM官网](https://phpipam.net/documents/installation/)\n\n3)[phpIPAM IPv6主机扫描](https://github.com/phpipam/phpipam/issues/777)\n\n\n\n\n\n","slug":"IPAM_install","published":1,"updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2vv00056ijxylibtj0s","content":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 前言</h2><p>IPAM：IP Address Management  ，及IP地址管理，用于发现、监视、审核和管理企业网络上使用的 IP 地址空间。目前开源的IPAM有许多，根据维基百科<a href=\"https://en.wikipedia.org/wiki/IP_address_management\" target=\"_blank\" rel=\"noopener\">IPAM</a>介绍有十多种IPAM类软件，在研究了一下活跃的项目后发现phpIPAM相当的不错，尝试把玩了一下。</p>\n<p><img src=\"https://phpipam.net/css/images/old/phpipam_logo_small.png\" alt=\"phpipam\"></p>\n<h2 id=\"2-快速搭建\"><a href=\"#2-快速搭建\" class=\"headerlink\" title=\"2 快速搭建\"></a>2 快速搭建</h2><p>phpIPAM的官方有一个demo可以访问：<a href=\"https://demo.phpipam.net/login/，登录的用户名和密码为：Admin\" target=\"_blank\" rel=\"noopener\">https://demo.phpipam.net/login/，登录的用户名和密码为：Admin</a> / ipamadmin，在首页也可以查看。</p>\n<p>查找了下发现docker hub中有相关的镜像[1]，直接从docker上拉取一个镜像作为快速搭建体验。</p>\n<h3 id=\"2-1-拉取相关镜像\"><a href=\"#2-1-拉取相关镜像\" class=\"headerlink\" title=\"2.1 拉取相关镜像\"></a>2.1 拉取相关镜像</h3><p>安装phpIPAM需要mysql数据库作为存储，首先获取mysql数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker pull mysql:5.6</span><br></pre></td></tr></table></figure>\n<p>启动mysql数据库，将<code>my-secret-pw</code>换成自己的数据库密码，同时需要映射数据库存储路径<code>/my_dir/phpipam</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker run --name phpipam-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -v /my_dir/phpipam:/var/lib/mysql -d mysql:5.6</span><br></pre></td></tr></table></figure>\n<p>获取phpIPAM的镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker pull pierrecdn/phpipam</span><br></pre></td></tr></table></figure>\n<p>启动phpIPAM镜像，需要将docker镜像内的80端口映射到本机的80端口</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker run -ti -d -p 80:80 --name ipam --link phpipam-mysql:mysql pierrecdn/phpipam</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-phpIPAM配置\"><a href=\"#2-2-phpIPAM配置\" class=\"headerlink\" title=\"2.2 phpIPAM配置\"></a>2.2 phpIPAM配置</h3><p>随后登录http://&lt;HOST_IP&gt;:80即可以访问phpIPAM的页面，首次登录需要安装数据库，主要是导入phpIPAM的数据库表</p>\n<p>1)自动导入数据库</p>\n<p>点击“Automatic database installtion”</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/4225738/8746785/01758b9e-2c8d-11e5-8643-7f5862c75efe.png\" alt=\"phpIPAM自动导入数据库\"></p>\n<p>2)输入数据库密码</p>\n<p>输入2.1节中设置的数据库密码，随后点击“Install phpipam database”</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/4225738/8746789/0ad367e2-2c8d-11e5-80bb-f5093801e139.png\" alt=\"输入数据库密码\"></p>\n<p>3)重新设置访问密码</p>\n<p>输入新密码后点击”Save setting”，重新登录即可进入页面</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/4225738/8746790/0c434bf6-2c8d-11e5-9ae7-b7d1021b7aa0.png\" alt=\"重置访问密码\"></p>\n<p>一个phpIPAM的环境就快速搭建起来了，可以随意操作玩耍了。</p>\n<h2 id=\"3-完整搭建\"><a href=\"#3-完整搭建\" class=\"headerlink\" title=\"3 完整搭建\"></a>3 完整搭建</h2><p>如果想完整的搭建一个phpIPAM在本地同时做一些自定义的修改就需要下载源码并搭建，过程也不复杂官方文档也有详细描述[2]。</p>\n<p>phpIPAM当前仅支持IPv4的主机扫描，并不支持IPv6的主机扫描，对于该项需求在github上已经有人提出了但是当前仍没有解决[3]。</p>\n<p>接下来以ubuntu16.04为例讲解如何搭建phpIPAM环境。</p>\n<h3 id=\"3-1-安装必要软件包\"><a href=\"#3-1-安装必要软件包\" class=\"headerlink\" title=\"3.1 安装必要软件包\"></a>3.1 安装必要软件包</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt-get install apache2 mariadb-server php php-pear php7.0-gmp php7.0-mysql php7.0-mbstring php7.0-gd php7.0-mcrypt php7.0-curl git cron</span><br></pre></td></tr></table></figure>\n<p>安装过程需要配置mysql root用户密码，安装完成后拉取phpIPAM的代码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# cd /var/www/html/</span><br><span class=\"line\">root@ubuntu:/var/www/html# git clone https://github.com/phpipam/phpipam.git .</span><br><span class=\"line\">root@ubuntu:/var/www/html# git checkout 1.3.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-配置相应软件\"><a href=\"#3-2-配置相应软件\" class=\"headerlink\" title=\"3.2 配置相应软件\"></a>3.2 配置相应软件</h3><p>1) 配置mysql数据库</p>\n<p>启动mysql(MariaDB) 数据库，并配置mysql的root账户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# /etc/init.d/mysql restart</span><br><span class=\"line\">root@ubuntu:~# mysql_secure_installation</span><br><span class=\"line\">NOTE: RUNNING ALL PARTS OF THIS SCRIPT ISRECOMMENDED FOR ALL MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class=\"line\">In order to log into MariaDB to secure it,we'll need the current</span><br><span class=\"line\"></span><br><span class=\"line\">password for the root user.  If you've just installed MariaDB, and</span><br><span class=\"line\"></span><br><span class=\"line\">you haven't set the root password yet, thepassword will be blank,</span><br><span class=\"line\"></span><br><span class=\"line\">so you should just press enter here.</span><br><span class=\"line\">Enter current password for root (enter fornone): </span><br><span class=\"line\"></span><br><span class=\"line\">OK, successfully used password, movingon...</span><br><span class=\"line\"></span><br><span class=\"line\">Setting the root password ensures thatnobody can log into the MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">root user without the proper authorisation.</span><br><span class=\"line\">Set root password? [Y/n] y</span><br><span class=\"line\"></span><br><span class=\"line\">New password: </span><br><span class=\"line\"></span><br><span class=\"line\">Re-enter new password: </span><br><span class=\"line\"></span><br><span class=\"line\">Password updated successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">Reloading privilege tables..</span><br><span class=\"line\"></span><br><span class=\"line\"> ...Success!</span><br><span class=\"line\">By default, a MariaDB installation has ananonymous user, allowing anyone</span><br><span class=\"line\"></span><br><span class=\"line\">to log into MariaDB without having to havea user account created for</span><br><span class=\"line\"></span><br><span class=\"line\">them. This is intended only for testing, and to make the installation</span><br><span class=\"line\"></span><br><span class=\"line\">go a bit smoother.  You should remove them before moving into a</span><br><span class=\"line\"></span><br><span class=\"line\">production environment.</span><br><span class=\"line\">Remove anonymous users? [Y/n] y</span><br><span class=\"line\"></span><br><span class=\"line\"> ...Success!</span><br><span class=\"line\">Normally, root should only be allowed toconnect from 'localhost'.  This</span><br><span class=\"line\"></span><br><span class=\"line\">ensures that someone cannot guess at theroot password from the network.</span><br><span class=\"line\">Disallow root login remotely? [Y/n] n</span><br><span class=\"line\"></span><br><span class=\"line\"> ...skipping.</span><br><span class=\"line\">By default, MariaDB comes with a databasenamed 'test' that anyone can</span><br><span class=\"line\"></span><br><span class=\"line\">access. This is also intended only for testing, and should be removed</span><br><span class=\"line\"></span><br><span class=\"line\">before moving into a productionenvironment.</span><br><span class=\"line\"></span><br><span class=\"line\">Remove test database and access to it?[Y/n] y</span><br><span class=\"line\"></span><br><span class=\"line\"> -Dropping test database...</span><br><span class=\"line\"></span><br><span class=\"line\"> ...Success!</span><br><span class=\"line\"></span><br><span class=\"line\"> -Removing privileges on test database...</span><br><span class=\"line\"></span><br><span class=\"line\"> ...Success!</span><br><span class=\"line\"></span><br><span class=\"line\">Reloading the privilege tables will ensurethat all changes made so far</span><br><span class=\"line\"></span><br><span class=\"line\">will take effect immediately.</span><br><span class=\"line\"></span><br><span class=\"line\">Reload privilege tables now? [Y/n] y</span><br><span class=\"line\"></span><br><span class=\"line\"> ...Success!</span><br><span class=\"line\"></span><br><span class=\"line\">Cleaning up...</span><br><span class=\"line\"></span><br><span class=\"line\">All done! If you've completed all of the above steps, your MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">installation should now be secure.</span><br><span class=\"line\"></span><br><span class=\"line\">Thanks for using MariaDB!</span><br></pre></td></tr></table></figure>\n<p>2) 配置apache代理</p>\n<p>配置<code>/etc/apache2/apache2.conf</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class=\"line\">\tOptions FollowSymLinks</span><br><span class=\"line\">\tAllowOverride all</span><br><span class=\"line\">\tOrder allow,deny</span><br><span class=\"line\">\tAllow from all</span><br><span class=\"line\">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure>\n<p>设置apache时区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# grep timezone /etc/php/7.0/apache2/php.ini</span><br><span class=\"line\">; Defines the default timezone used by the date functions</span><br><span class=\"line\">; http://php.net/date.timezone</span><br><span class=\"line\">date.timezone = Asia/Shanghai</span><br></pre></td></tr></table></figure>\n<p>使能apache重写</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# a2enmod rewrite</span><br></pre></td></tr></table></figure>\n<p>重启apapche2服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# /etc/init.d/apache2 start</span><br></pre></td></tr></table></figure>\n<p>3) 配置phpIPAM</p>\n<p>首先拷贝配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/var/www/html# cp config.dist.php config.php</span><br></pre></td></tr></table></figure>\n<p>修改配置文件的数据库信息</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$db[<span class=\"string\">'host'</span>] = <span class=\"string\">'localhost'</span>;</span><br><span class=\"line\">$db[<span class=\"string\">'user'</span>] = <span class=\"string\">\"root\"</span>;</span><br><span class=\"line\">$db[<span class=\"string\">'pass'</span>] = <span class=\"string\">\"r00tme\"</span>;</span><br><span class=\"line\">$db[<span class=\"string\">'name'</span>] = <span class=\"string\">'phpipam'</span>;</span><br><span class=\"line\">$db[<span class=\"string\">'port'</span>] = <span class=\"number\">3306</span>;</span><br></pre></td></tr></table></figure>\n<p>配置ipam的v4主机定时检查</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> update host statuses exery 15minutes\"    </span><br><span class=\"line\">*/15 * * * * /usr/bin/php/opt/cfiec/6dnsnetm/ipam/functions/scripts/pingCheck.php\";</span><br><span class=\"line\">*/15 * * * * /usr/bin/php/opt/cfiec/6dnsnetm/ipam/functions/scripts/discoveryCheck.php\";</span><br></pre></td></tr></table></figure>\n<p>配置ipam数据库每天备份和自动删除10天以上的数据备份</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@daily /usr/bin/mysqldump -uroot -pr00tmephpipam &gt; /opt/cfiec/6dnsnetm/ipam/db/bkp/phpipam_bkp_$(date+\"%y%m%d\").db\";</span><br><span class=\"line\">@daily /usr/bin/find/opt/cfiec/6dnsnetm/ipam/db/bkp/ -ctime +10 -exec rm &#123;&#125; \\;</span><br></pre></td></tr></table></figure>\n<p>可以通过crontab -l 查看配置是否正确</p>\n<p>重启cron服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/var/www/html# /etc/init.d/cron restart</span><br></pre></td></tr></table></figure>\n<p>随后打开网页访问相应的IP地址即可进入到安装界面。</p>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://hub.docker.com/r/clinta/phpipam/\" target=\"_blank\" rel=\"noopener\">phpIPAM docker 主页</a></p>\n<p>2)<a href=\"https://phpipam.net/documents/installation/\" target=\"_blank\" rel=\"noopener\">phpIPAM官网</a></p>\n<p>3)<a href=\"https://github.com/phpipam/phpipam/issues/777\" target=\"_blank\" rel=\"noopener\">phpIPAM IPv6主机扫描</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 前言</h2><p>IPAM：IP Address Management  ，及IP地址管理，用于发现、监视、审核和管理企业网络上使用的 IP 地址空间。目前开源的IPAM有许多，根据维基百科<a href=\"https://en.wikipedia.org/wiki/IP_address_management\" target=\"_blank\" rel=\"noopener\">IPAM</a>介绍有十多种IPAM类软件，在研究了一下活跃的项目后发现phpIPAM相当的不错，尝试把玩了一下。</p>\n<p><img src=\"https://phpipam.net/css/images/old/phpipam_logo_small.png\" alt=\"phpipam\"></p>\n<h2 id=\"2-快速搭建\"><a href=\"#2-快速搭建\" class=\"headerlink\" title=\"2 快速搭建\"></a>2 快速搭建</h2><p>phpIPAM的官方有一个demo可以访问：<a href=\"https://demo.phpipam.net/login/，登录的用户名和密码为：Admin\" target=\"_blank\" rel=\"noopener\">https://demo.phpipam.net/login/，登录的用户名和密码为：Admin</a> / ipamadmin，在首页也可以查看。</p>\n<p>查找了下发现docker hub中有相关的镜像[1]，直接从docker上拉取一个镜像作为快速搭建体验。</p>\n<h3 id=\"2-1-拉取相关镜像\"><a href=\"#2-1-拉取相关镜像\" class=\"headerlink\" title=\"2.1 拉取相关镜像\"></a>2.1 拉取相关镜像</h3><p>安装phpIPAM需要mysql数据库作为存储，首先获取mysql数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker pull mysql:5.6</span><br></pre></td></tr></table></figure>\n<p>启动mysql数据库，将<code>my-secret-pw</code>换成自己的数据库密码，同时需要映射数据库存储路径<code>/my_dir/phpipam</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker run --name phpipam-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -v /my_dir/phpipam:/var/lib/mysql -d mysql:5.6</span><br></pre></td></tr></table></figure>\n<p>获取phpIPAM的镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker pull pierrecdn/phpipam</span><br></pre></td></tr></table></figure>\n<p>启动phpIPAM镜像，需要将docker镜像内的80端口映射到本机的80端口</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker run -ti -d -p 80:80 --name ipam --link phpipam-mysql:mysql pierrecdn/phpipam</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-phpIPAM配置\"><a href=\"#2-2-phpIPAM配置\" class=\"headerlink\" title=\"2.2 phpIPAM配置\"></a>2.2 phpIPAM配置</h3><p>随后登录http://&lt;HOST_IP&gt;:80即可以访问phpIPAM的页面，首次登录需要安装数据库，主要是导入phpIPAM的数据库表</p>\n<p>1)自动导入数据库</p>\n<p>点击“Automatic database installtion”</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/4225738/8746785/01758b9e-2c8d-11e5-8643-7f5862c75efe.png\" alt=\"phpIPAM自动导入数据库\"></p>\n<p>2)输入数据库密码</p>\n<p>输入2.1节中设置的数据库密码，随后点击“Install phpipam database”</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/4225738/8746789/0ad367e2-2c8d-11e5-80bb-f5093801e139.png\" alt=\"输入数据库密码\"></p>\n<p>3)重新设置访问密码</p>\n<p>输入新密码后点击”Save setting”，重新登录即可进入页面</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/4225738/8746790/0c434bf6-2c8d-11e5-9ae7-b7d1021b7aa0.png\" alt=\"重置访问密码\"></p>\n<p>一个phpIPAM的环境就快速搭建起来了，可以随意操作玩耍了。</p>\n<h2 id=\"3-完整搭建\"><a href=\"#3-完整搭建\" class=\"headerlink\" title=\"3 完整搭建\"></a>3 完整搭建</h2><p>如果想完整的搭建一个phpIPAM在本地同时做一些自定义的修改就需要下载源码并搭建，过程也不复杂官方文档也有详细描述[2]。</p>\n<p>phpIPAM当前仅支持IPv4的主机扫描，并不支持IPv6的主机扫描，对于该项需求在github上已经有人提出了但是当前仍没有解决[3]。</p>\n<p>接下来以ubuntu16.04为例讲解如何搭建phpIPAM环境。</p>\n<h3 id=\"3-1-安装必要软件包\"><a href=\"#3-1-安装必要软件包\" class=\"headerlink\" title=\"3.1 安装必要软件包\"></a>3.1 安装必要软件包</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt-get install apache2 mariadb-server php php-pear php7.0-gmp php7.0-mysql php7.0-mbstring php7.0-gd php7.0-mcrypt php7.0-curl git cron</span><br></pre></td></tr></table></figure>\n<p>安装过程需要配置mysql root用户密码，安装完成后拉取phpIPAM的代码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# cd /var/www/html/</span><br><span class=\"line\">root@ubuntu:/var/www/html# git clone https://github.com/phpipam/phpipam.git .</span><br><span class=\"line\">root@ubuntu:/var/www/html# git checkout 1.3.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-配置相应软件\"><a href=\"#3-2-配置相应软件\" class=\"headerlink\" title=\"3.2 配置相应软件\"></a>3.2 配置相应软件</h3><p>1) 配置mysql数据库</p>\n<p>启动mysql(MariaDB) 数据库，并配置mysql的root账户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# /etc/init.d/mysql restart</span><br><span class=\"line\">root@ubuntu:~# mysql_secure_installation</span><br><span class=\"line\">NOTE: RUNNING ALL PARTS OF THIS SCRIPT ISRECOMMENDED FOR ALL MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class=\"line\">In order to log into MariaDB to secure it,we'll need the current</span><br><span class=\"line\"></span><br><span class=\"line\">password for the root user.  If you've just installed MariaDB, and</span><br><span class=\"line\"></span><br><span class=\"line\">you haven't set the root password yet, thepassword will be blank,</span><br><span class=\"line\"></span><br><span class=\"line\">so you should just press enter here.</span><br><span class=\"line\">Enter current password for root (enter fornone): </span><br><span class=\"line\"></span><br><span class=\"line\">OK, successfully used password, movingon...</span><br><span class=\"line\"></span><br><span class=\"line\">Setting the root password ensures thatnobody can log into the MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">root user without the proper authorisation.</span><br><span class=\"line\">Set root password? [Y/n] y</span><br><span class=\"line\"></span><br><span class=\"line\">New password: </span><br><span class=\"line\"></span><br><span class=\"line\">Re-enter new password: </span><br><span class=\"line\"></span><br><span class=\"line\">Password updated successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">Reloading privilege tables..</span><br><span class=\"line\"></span><br><span class=\"line\"> ...Success!</span><br><span class=\"line\">By default, a MariaDB installation has ananonymous user, allowing anyone</span><br><span class=\"line\"></span><br><span class=\"line\">to log into MariaDB without having to havea user account created for</span><br><span class=\"line\"></span><br><span class=\"line\">them. This is intended only for testing, and to make the installation</span><br><span class=\"line\"></span><br><span class=\"line\">go a bit smoother.  You should remove them before moving into a</span><br><span class=\"line\"></span><br><span class=\"line\">production environment.</span><br><span class=\"line\">Remove anonymous users? [Y/n] y</span><br><span class=\"line\"></span><br><span class=\"line\"> ...Success!</span><br><span class=\"line\">Normally, root should only be allowed toconnect from 'localhost'.  This</span><br><span class=\"line\"></span><br><span class=\"line\">ensures that someone cannot guess at theroot password from the network.</span><br><span class=\"line\">Disallow root login remotely? [Y/n] n</span><br><span class=\"line\"></span><br><span class=\"line\"> ...skipping.</span><br><span class=\"line\">By default, MariaDB comes with a databasenamed 'test' that anyone can</span><br><span class=\"line\"></span><br><span class=\"line\">access. This is also intended only for testing, and should be removed</span><br><span class=\"line\"></span><br><span class=\"line\">before moving into a productionenvironment.</span><br><span class=\"line\"></span><br><span class=\"line\">Remove test database and access to it?[Y/n] y</span><br><span class=\"line\"></span><br><span class=\"line\"> -Dropping test database...</span><br><span class=\"line\"></span><br><span class=\"line\"> ...Success!</span><br><span class=\"line\"></span><br><span class=\"line\"> -Removing privileges on test database...</span><br><span class=\"line\"></span><br><span class=\"line\"> ...Success!</span><br><span class=\"line\"></span><br><span class=\"line\">Reloading the privilege tables will ensurethat all changes made so far</span><br><span class=\"line\"></span><br><span class=\"line\">will take effect immediately.</span><br><span class=\"line\"></span><br><span class=\"line\">Reload privilege tables now? [Y/n] y</span><br><span class=\"line\"></span><br><span class=\"line\"> ...Success!</span><br><span class=\"line\"></span><br><span class=\"line\">Cleaning up...</span><br><span class=\"line\"></span><br><span class=\"line\">All done! If you've completed all of the above steps, your MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">installation should now be secure.</span><br><span class=\"line\"></span><br><span class=\"line\">Thanks for using MariaDB!</span><br></pre></td></tr></table></figure>\n<p>2) 配置apache代理</p>\n<p>配置<code>/etc/apache2/apache2.conf</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class=\"line\">\tOptions FollowSymLinks</span><br><span class=\"line\">\tAllowOverride all</span><br><span class=\"line\">\tOrder allow,deny</span><br><span class=\"line\">\tAllow from all</span><br><span class=\"line\">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure>\n<p>设置apache时区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# grep timezone /etc/php/7.0/apache2/php.ini</span><br><span class=\"line\">; Defines the default timezone used by the date functions</span><br><span class=\"line\">; http://php.net/date.timezone</span><br><span class=\"line\">date.timezone = Asia/Shanghai</span><br></pre></td></tr></table></figure>\n<p>使能apache重写</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# a2enmod rewrite</span><br></pre></td></tr></table></figure>\n<p>重启apapche2服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# /etc/init.d/apache2 start</span><br></pre></td></tr></table></figure>\n<p>3) 配置phpIPAM</p>\n<p>首先拷贝配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/var/www/html# cp config.dist.php config.php</span><br></pre></td></tr></table></figure>\n<p>修改配置文件的数据库信息</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$db[<span class=\"string\">'host'</span>] = <span class=\"string\">'localhost'</span>;</span><br><span class=\"line\">$db[<span class=\"string\">'user'</span>] = <span class=\"string\">\"root\"</span>;</span><br><span class=\"line\">$db[<span class=\"string\">'pass'</span>] = <span class=\"string\">\"r00tme\"</span>;</span><br><span class=\"line\">$db[<span class=\"string\">'name'</span>] = <span class=\"string\">'phpipam'</span>;</span><br><span class=\"line\">$db[<span class=\"string\">'port'</span>] = <span class=\"number\">3306</span>;</span><br></pre></td></tr></table></figure>\n<p>配置ipam的v4主机定时检查</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> update host statuses exery 15minutes\"    </span><br><span class=\"line\">*/15 * * * * /usr/bin/php/opt/cfiec/6dnsnetm/ipam/functions/scripts/pingCheck.php\";</span><br><span class=\"line\">*/15 * * * * /usr/bin/php/opt/cfiec/6dnsnetm/ipam/functions/scripts/discoveryCheck.php\";</span><br></pre></td></tr></table></figure>\n<p>配置ipam数据库每天备份和自动删除10天以上的数据备份</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@daily /usr/bin/mysqldump -uroot -pr00tmephpipam &gt; /opt/cfiec/6dnsnetm/ipam/db/bkp/phpipam_bkp_$(date+\"%y%m%d\").db\";</span><br><span class=\"line\">@daily /usr/bin/find/opt/cfiec/6dnsnetm/ipam/db/bkp/ -ctime +10 -exec rm &#123;&#125; \\;</span><br></pre></td></tr></table></figure>\n<p>可以通过crontab -l 查看配置是否正确</p>\n<p>重启cron服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/var/www/html# /etc/init.d/cron restart</span><br></pre></td></tr></table></figure>\n<p>随后打开网页访问相应的IP地址即可进入到安装界面。</p>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://hub.docker.com/r/clinta/phpipam/\" target=\"_blank\" rel=\"noopener\">phpIPAM docker 主页</a></p>\n<p>2)<a href=\"https://phpipam.net/documents/installation/\" target=\"_blank\" rel=\"noopener\">phpIPAM官网</a></p>\n<p>3)<a href=\"https://github.com/phpipam/phpipam/issues/777\" target=\"_blank\" rel=\"noopener\">phpIPAM IPv6主机扫描</a></p>\n"},{"title":"MAAS+ubuntu私有源环境搭建","date":"2018-03-27T05:56:18.000Z","keywords":["MAAS"],"description":["MAAS安装使用以及ubuntu私有源环境搭建"],"summary_img":null,"_content":"\n## 前言\n\n最近做一个集成项目需要部署多台裸机服务器，考虑到服务器众多采用PXE的方式给服务器安装系统是最便捷的同时考虑到网络速度的因素，建立一个ubuntu私有源镜像服务器安装软件包无疑会更快更便捷。\n\n本文将分两部分讲解环境搭建：1)MAAS环境搭建，2)ubuntu私有源环境搭建。首先是MAAS环境的搭建。\n\n## 1 MAAS环境搭建\n\n### 1.1 MAAS介绍\n\n![](https://assets.ubuntu.com/v1/33b96a7f-maas-logo.svg)\n\nMAAS[1]是ubuntu社区开发的开源裸机部署工具，能够从云端下载镜像引导本地主机从PXE启动并安装指定的系统，搭配诸如IPAM等同时兼具裸机状态管理功能。\n\n### 1.2 MAAS安装\n\n```shell\nroot@ubuntu:~# apt install maas -y\n```\n\n### 1.3 创建MAAS用户\n\n```shell\nroot@ubuntu:~# maas createadmin --username=admin --email=MYEMAIL@EXAMPLE.COM\n```\n\n随后登录MAAS web页面 `http://<your.maas.ip>/MAAS/`，然后配置相关参数\n\n- Region name (MAAS name)\n- Ubuntu archive, Ubuntu extra architectures\n- Ubuntu images\n- SSH keys (for currently logged in user)\n\n![MAAS界面](https://i.imgur.com/mB3EK4K.jpg)\n\n### 1.4 系统Images设置\n\n在`Images`界面设置需要安装的系统版本，本次部署需要是64位的ubuntu 16.04，配置完成后MAAS会自动同步镜像\n\n![MAAS Inages设置](https://i.imgur.com/tXMsQWz.jpg)\n\n在`setting`界面配置系统PXE启动时装载的最小镜像供MAAS进行服务器的硬件信息等解析\n\n![MAAS 最小镜像配置](https://i.imgur.com/gcsXtgW.jpg)\n\n### 1.4  DHCP配置\n\n点击`Subnets`选择一个网络点击`VLAN`选择右上的`take action`选项框，选择`Provid DHCP`，然后配置dhcp范围\n\n![MAAS DHCP配置](https://i.imgur.com/0pPmBOZ.jpg)\n\n【Note】\n\n1)检查需要安装系统的服务器PXE启动，配置服务器启动项中PXE为首选；\n\n2)配置服务器的IPMI，便于MAAS完全接管服务器，包括服务器的启动、关机、重启等。\n\n启动待装系统的服务器，可以看到MAAS检测到服务器上线\n\n![MAAS硬件检测](https://i.imgur.com/C2nozbq.jpg)\n\n更多MAAS配置及设置参见官网[用户手册](https://docs.maas.io/2.3/en/)\n\n## 2 ubuntu私有源环境搭建\n\n私有源环境搭建主要是应对公司网络限制，如访问过慢或限制网络连接的情况，也可以应对需要大量现场装机部署等情况加快部署进度。\n\n2.1 安装apt-mirror工具\n\n```shell\nroot@ubuntu:~# apt-get install -y apt-mirror \n```\n\n2.2 配置apt-mirror\n\n本次安装的ubuntu为**16.04**，设置ubuntu源为清华源（可以根据网速设置自己常用或访问较快的源），由于只需要64位的安装软件，这里设置近下载64位的，同时也可以根据自己的需求修改源下载路径位置等参数。\n\n```shell\nroot@ubuntu:~# cat /etc/apt/mirror.list \n############# config ##################\n#\n# set base_path    /var/spool/apt-mirror\n#\n# set mirror_path  $base_path/mirror\n# set skel_path    $base_path/skel\n# set var_path     $base_path/var\n# set cleanscript $var_path/clean.sh\n# set defaultarch  <running host architecture>\nset defaultarch  amd64\n# set postmirror_script $var_path/postmirror.sh\n# set run_postmirror 0\nset nthreads     20\nset _tilde 0\n#\n############# end config ##############\n# louie add qinghua source 20180326\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\n\nclean http://mirrors.tuna.tsinghua.edu.cn/ubuntu\n```\n\n随后运行apt-mirror下载源\n\n```shell\nroot@ubuntu:~# apt-mirror \nDownloading 152 index files using 20 threads...\nBegin time: Mon Mar 26 10:38:17 2018\n[20]... [19]... [18]... [17]... [16]... [15]... [14]... [13]... [12]... [11]... [10]... [9]... [8]... [7]... [6]... [5]... [4]... [3]... [2]... [1]... [0]... \nEnd time: Mon Mar 26 10:38:29 2018\n\nProcessing tranlation indexes: [TTTT]\n.......\n```\n\n随后等待文件下载完成，等待时间视网络状况，本次源仓库共有113.3 GiB。(ps：在更新了三个小时多后终于更新完成了)\n\n***【Note】***\n\n1)当某些软件包在服务器端进行了升级，或者服务器端不再需要这些软件包时，我们使用了 `apt-mirror`与服务器同步后，会在本地的`$var_path/`下生成一个`clean.sh`的脚本，列出了遗留在本地的旧版本和无用的软件包，可以手动运行这个脚本来删除遗留在本地的且不需要用的软件包\n`clean http://mirrors.tuna.tsinghua.edu.cn/ubuntu`\n\n2)如果用amd64位架构下的包，可以加上deb-amd64的标记如果什么都不加，直接使用deb http.....这种格式，则在同步时，只同步当前系统所使用的架构下的软件包。比如一个64位系统，直接deb http....只同步64位的软件 包。如果还嫌麻烦，直接去改`set defaultarch   <running hostarchitecture>`这个参数就好，比如改成set defaultarch i386，这样你使用debhttp.....这种格式，则在同步时，只同步i386的软件包了。\n\n如果你还想要源码，可以把源码也加到mirror.list里面同步过来，比如加上deb-src这样的标记。想要其他的东西也可以追加相应的标记来完成。\n\n3）同步完成后，我们可以利用clean.sh清理无用软件包：\n\n```shell\n root@ubuntu:~# /var/spool/apt-mirror/var/clean.sh \n```\n\n2.3 作为本机源配置\n\n源路径为\n\n配置本机源文件\n\n```shell\nroot@ubuntu:~# cat /etc/apt/sources.list\ndeb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial main restricted universe multiverse\ndeb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-updates main restricted universe multiverse\ndeb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-backports main restricted universe multiverse\ndeb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-security main restricted universe multiverse\n```\n\n2.4 局域网源配置\n\n2.4.1 首先需要安装apache2服务器\n\n```shell\n root@ubuntu:~# apt-get install apache2 \n```\n\n将镜像目录链接到apache2的根目录(/var/www/html/)下 \n\n```shell\n root@ubuntu:~# sudo ln -s /var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu /var/www/html/ubuntu\n```\n\n打开浏览器`http://<HOST IP>/ubuntu` 即可查看\n\n2.4.2 修改局域网ubuntu源\n\n修改局域网内主机的ubuntu源，同时指定源为64位\n\n```shell\nroot@ubuntu:~# cat /etc/apt/sources.list\ndeb [arch=amd64] http://192.168.4.170/ubuntu/ xenial main restricted universe multiverse\ndeb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-updates main restricted universe multiverse\ndeb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-backports main restricted universe multiverse\ndeb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-security main restricted universe multiverse\n```\n\n\n\n【参考链接】\n\n1)[MAAS安装指导](https://maas.io/install)\n\n2)[ubuntu私有源搭建](https://blog.csdn.net/wenwenxiong/article/details/50908002)\n\n3)[私有源配置](https://www.linuxidc.com/Linux/2014-08/105415.htm)\n\n\n","source":"_posts/MAAS+ubuntu-local-repo.md","raw":"---\ntitle: MAAS+ubuntu私有源环境搭建\ndate: 2018-03-27 13:56:18\ntags:\n  - MAAS\n  - ubuntu\nkeywords:\n  - MAAS\ncategories:\n  - ubuntu\ndescription:\n  - MAAS安装使用以及ubuntu私有源环境搭建\nsummary_img:\n---\n\n## 前言\n\n最近做一个集成项目需要部署多台裸机服务器，考虑到服务器众多采用PXE的方式给服务器安装系统是最便捷的同时考虑到网络速度的因素，建立一个ubuntu私有源镜像服务器安装软件包无疑会更快更便捷。\n\n本文将分两部分讲解环境搭建：1)MAAS环境搭建，2)ubuntu私有源环境搭建。首先是MAAS环境的搭建。\n\n## 1 MAAS环境搭建\n\n### 1.1 MAAS介绍\n\n![](https://assets.ubuntu.com/v1/33b96a7f-maas-logo.svg)\n\nMAAS[1]是ubuntu社区开发的开源裸机部署工具，能够从云端下载镜像引导本地主机从PXE启动并安装指定的系统，搭配诸如IPAM等同时兼具裸机状态管理功能。\n\n### 1.2 MAAS安装\n\n```shell\nroot@ubuntu:~# apt install maas -y\n```\n\n### 1.3 创建MAAS用户\n\n```shell\nroot@ubuntu:~# maas createadmin --username=admin --email=MYEMAIL@EXAMPLE.COM\n```\n\n随后登录MAAS web页面 `http://<your.maas.ip>/MAAS/`，然后配置相关参数\n\n- Region name (MAAS name)\n- Ubuntu archive, Ubuntu extra architectures\n- Ubuntu images\n- SSH keys (for currently logged in user)\n\n![MAAS界面](https://i.imgur.com/mB3EK4K.jpg)\n\n### 1.4 系统Images设置\n\n在`Images`界面设置需要安装的系统版本，本次部署需要是64位的ubuntu 16.04，配置完成后MAAS会自动同步镜像\n\n![MAAS Inages设置](https://i.imgur.com/tXMsQWz.jpg)\n\n在`setting`界面配置系统PXE启动时装载的最小镜像供MAAS进行服务器的硬件信息等解析\n\n![MAAS 最小镜像配置](https://i.imgur.com/gcsXtgW.jpg)\n\n### 1.4  DHCP配置\n\n点击`Subnets`选择一个网络点击`VLAN`选择右上的`take action`选项框，选择`Provid DHCP`，然后配置dhcp范围\n\n![MAAS DHCP配置](https://i.imgur.com/0pPmBOZ.jpg)\n\n【Note】\n\n1)检查需要安装系统的服务器PXE启动，配置服务器启动项中PXE为首选；\n\n2)配置服务器的IPMI，便于MAAS完全接管服务器，包括服务器的启动、关机、重启等。\n\n启动待装系统的服务器，可以看到MAAS检测到服务器上线\n\n![MAAS硬件检测](https://i.imgur.com/C2nozbq.jpg)\n\n更多MAAS配置及设置参见官网[用户手册](https://docs.maas.io/2.3/en/)\n\n## 2 ubuntu私有源环境搭建\n\n私有源环境搭建主要是应对公司网络限制，如访问过慢或限制网络连接的情况，也可以应对需要大量现场装机部署等情况加快部署进度。\n\n2.1 安装apt-mirror工具\n\n```shell\nroot@ubuntu:~# apt-get install -y apt-mirror \n```\n\n2.2 配置apt-mirror\n\n本次安装的ubuntu为**16.04**，设置ubuntu源为清华源（可以根据网速设置自己常用或访问较快的源），由于只需要64位的安装软件，这里设置近下载64位的，同时也可以根据自己的需求修改源下载路径位置等参数。\n\n```shell\nroot@ubuntu:~# cat /etc/apt/mirror.list \n############# config ##################\n#\n# set base_path    /var/spool/apt-mirror\n#\n# set mirror_path  $base_path/mirror\n# set skel_path    $base_path/skel\n# set var_path     $base_path/var\n# set cleanscript $var_path/clean.sh\n# set defaultarch  <running host architecture>\nset defaultarch  amd64\n# set postmirror_script $var_path/postmirror.sh\n# set run_postmirror 0\nset nthreads     20\nset _tilde 0\n#\n############# end config ##############\n# louie add qinghua source 20180326\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\n\nclean http://mirrors.tuna.tsinghua.edu.cn/ubuntu\n```\n\n随后运行apt-mirror下载源\n\n```shell\nroot@ubuntu:~# apt-mirror \nDownloading 152 index files using 20 threads...\nBegin time: Mon Mar 26 10:38:17 2018\n[20]... [19]... [18]... [17]... [16]... [15]... [14]... [13]... [12]... [11]... [10]... [9]... [8]... [7]... [6]... [5]... [4]... [3]... [2]... [1]... [0]... \nEnd time: Mon Mar 26 10:38:29 2018\n\nProcessing tranlation indexes: [TTTT]\n.......\n```\n\n随后等待文件下载完成，等待时间视网络状况，本次源仓库共有113.3 GiB。(ps：在更新了三个小时多后终于更新完成了)\n\n***【Note】***\n\n1)当某些软件包在服务器端进行了升级，或者服务器端不再需要这些软件包时，我们使用了 `apt-mirror`与服务器同步后，会在本地的`$var_path/`下生成一个`clean.sh`的脚本，列出了遗留在本地的旧版本和无用的软件包，可以手动运行这个脚本来删除遗留在本地的且不需要用的软件包\n`clean http://mirrors.tuna.tsinghua.edu.cn/ubuntu`\n\n2)如果用amd64位架构下的包，可以加上deb-amd64的标记如果什么都不加，直接使用deb http.....这种格式，则在同步时，只同步当前系统所使用的架构下的软件包。比如一个64位系统，直接deb http....只同步64位的软件 包。如果还嫌麻烦，直接去改`set defaultarch   <running hostarchitecture>`这个参数就好，比如改成set defaultarch i386，这样你使用debhttp.....这种格式，则在同步时，只同步i386的软件包了。\n\n如果你还想要源码，可以把源码也加到mirror.list里面同步过来，比如加上deb-src这样的标记。想要其他的东西也可以追加相应的标记来完成。\n\n3）同步完成后，我们可以利用clean.sh清理无用软件包：\n\n```shell\n root@ubuntu:~# /var/spool/apt-mirror/var/clean.sh \n```\n\n2.3 作为本机源配置\n\n源路径为\n\n配置本机源文件\n\n```shell\nroot@ubuntu:~# cat /etc/apt/sources.list\ndeb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial main restricted universe multiverse\ndeb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-updates main restricted universe multiverse\ndeb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-backports main restricted universe multiverse\ndeb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-security main restricted universe multiverse\n```\n\n2.4 局域网源配置\n\n2.4.1 首先需要安装apache2服务器\n\n```shell\n root@ubuntu:~# apt-get install apache2 \n```\n\n将镜像目录链接到apache2的根目录(/var/www/html/)下 \n\n```shell\n root@ubuntu:~# sudo ln -s /var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu /var/www/html/ubuntu\n```\n\n打开浏览器`http://<HOST IP>/ubuntu` 即可查看\n\n2.4.2 修改局域网ubuntu源\n\n修改局域网内主机的ubuntu源，同时指定源为64位\n\n```shell\nroot@ubuntu:~# cat /etc/apt/sources.list\ndeb [arch=amd64] http://192.168.4.170/ubuntu/ xenial main restricted universe multiverse\ndeb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-updates main restricted universe multiverse\ndeb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-backports main restricted universe multiverse\ndeb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-security main restricted universe multiverse\n```\n\n\n\n【参考链接】\n\n1)[MAAS安装指导](https://maas.io/install)\n\n2)[ubuntu私有源搭建](https://blog.csdn.net/wenwenxiong/article/details/50908002)\n\n3)[私有源配置](https://www.linuxidc.com/Linux/2014-08/105415.htm)\n\n\n","slug":"MAAS+ubuntu-local-repo","published":1,"updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2vx00076ijxvvwl4lon","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近做一个集成项目需要部署多台裸机服务器，考虑到服务器众多采用PXE的方式给服务器安装系统是最便捷的同时考虑到网络速度的因素，建立一个ubuntu私有源镜像服务器安装软件包无疑会更快更便捷。</p>\n<p>本文将分两部分讲解环境搭建：1)MAAS环境搭建，2)ubuntu私有源环境搭建。首先是MAAS环境的搭建。</p>\n<h2 id=\"1-MAAS环境搭建\"><a href=\"#1-MAAS环境搭建\" class=\"headerlink\" title=\"1 MAAS环境搭建\"></a>1 MAAS环境搭建</h2><h3 id=\"1-1-MAAS介绍\"><a href=\"#1-1-MAAS介绍\" class=\"headerlink\" title=\"1.1 MAAS介绍\"></a>1.1 MAAS介绍</h3><p><img src=\"https://assets.ubuntu.com/v1/33b96a7f-maas-logo.svg\" alt=\"\"></p>\n<p>MAAS[1]是ubuntu社区开发的开源裸机部署工具，能够从云端下载镜像引导本地主机从PXE启动并安装指定的系统，搭配诸如IPAM等同时兼具裸机状态管理功能。</p>\n<h3 id=\"1-2-MAAS安装\"><a href=\"#1-2-MAAS安装\" class=\"headerlink\" title=\"1.2 MAAS安装\"></a>1.2 MAAS安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt install maas -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-创建MAAS用户\"><a href=\"#1-3-创建MAAS用户\" class=\"headerlink\" title=\"1.3 创建MAAS用户\"></a>1.3 创建MAAS用户</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# maas createadmin --username=admin --email=MYEMAIL@EXAMPLE.COM</span><br></pre></td></tr></table></figure>\n<p>随后登录MAAS web页面 <code>http://&lt;your.maas.ip&gt;/MAAS/</code>，然后配置相关参数</p>\n<ul>\n<li>Region name (MAAS name)</li>\n<li>Ubuntu archive, Ubuntu extra architectures</li>\n<li>Ubuntu images</li>\n<li>SSH keys (for currently logged in user)</li>\n</ul>\n<p><img src=\"https://i.imgur.com/mB3EK4K.jpg\" alt=\"MAAS界面\"></p>\n<h3 id=\"1-4-系统Images设置\"><a href=\"#1-4-系统Images设置\" class=\"headerlink\" title=\"1.4 系统Images设置\"></a>1.4 系统Images设置</h3><p>在<code>Images</code>界面设置需要安装的系统版本，本次部署需要是64位的ubuntu 16.04，配置完成后MAAS会自动同步镜像</p>\n<p><img src=\"https://i.imgur.com/tXMsQWz.jpg\" alt=\"MAAS Inages设置\"></p>\n<p>在<code>setting</code>界面配置系统PXE启动时装载的最小镜像供MAAS进行服务器的硬件信息等解析</p>\n<p><img src=\"https://i.imgur.com/gcsXtgW.jpg\" alt=\"MAAS 最小镜像配置\"></p>\n<h3 id=\"1-4-DHCP配置\"><a href=\"#1-4-DHCP配置\" class=\"headerlink\" title=\"1.4  DHCP配置\"></a>1.4  DHCP配置</h3><p>点击<code>Subnets</code>选择一个网络点击<code>VLAN</code>选择右上的<code>take action</code>选项框，选择<code>Provid DHCP</code>，然后配置dhcp范围</p>\n<p><img src=\"https://i.imgur.com/0pPmBOZ.jpg\" alt=\"MAAS DHCP配置\"></p>\n<p>【Note】</p>\n<p>1)检查需要安装系统的服务器PXE启动，配置服务器启动项中PXE为首选；</p>\n<p>2)配置服务器的IPMI，便于MAAS完全接管服务器，包括服务器的启动、关机、重启等。</p>\n<p>启动待装系统的服务器，可以看到MAAS检测到服务器上线</p>\n<p><img src=\"https://i.imgur.com/C2nozbq.jpg\" alt=\"MAAS硬件检测\"></p>\n<p>更多MAAS配置及设置参见官网<a href=\"https://docs.maas.io/2.3/en/\" target=\"_blank\" rel=\"noopener\">用户手册</a></p>\n<h2 id=\"2-ubuntu私有源环境搭建\"><a href=\"#2-ubuntu私有源环境搭建\" class=\"headerlink\" title=\"2 ubuntu私有源环境搭建\"></a>2 ubuntu私有源环境搭建</h2><p>私有源环境搭建主要是应对公司网络限制，如访问过慢或限制网络连接的情况，也可以应对需要大量现场装机部署等情况加快部署进度。</p>\n<p>2.1 安装apt-mirror工具</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt-get install -y apt-mirror</span><br></pre></td></tr></table></figure>\n<p>2.2 配置apt-mirror</p>\n<p>本次安装的ubuntu为<strong>16.04</strong>，设置ubuntu源为清华源（可以根据网速设置自己常用或访问较快的源），由于只需要64位的安装软件，这里设置近下载64位的，同时也可以根据自己的需求修改源下载路径位置等参数。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# cat /etc/apt/mirror.list </span><br><span class=\"line\"><span class=\"meta\">#</span>############ config ##################</span><br><span class=\"line\"><span class=\"meta\">#</span></span><br><span class=\"line\"><span class=\"meta\">#</span> set base_path    /var/spool/apt-mirror</span><br><span class=\"line\"><span class=\"meta\">#</span></span><br><span class=\"line\"><span class=\"meta\">#</span> set mirror_path  $base_path/mirror</span><br><span class=\"line\"><span class=\"meta\">#</span> set skel_path    $base_path/skel</span><br><span class=\"line\"><span class=\"meta\">#</span> set var_path     $base_path/var</span><br><span class=\"line\"><span class=\"meta\">#</span> set cleanscript $var_path/clean.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> set defaultarch  &lt;running host architecture&gt;</span><br><span class=\"line\">set defaultarch  amd64</span><br><span class=\"line\"><span class=\"meta\">#</span> set postmirror_script $var_path/postmirror.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> set run_postmirror 0</span><br><span class=\"line\">set nthreads     20</span><br><span class=\"line\">set _tilde 0</span><br><span class=\"line\"><span class=\"meta\">#</span></span><br><span class=\"line\"><span class=\"meta\">#</span>############ end config ##############</span><br><span class=\"line\"><span class=\"meta\">#</span> louie add qinghua source 20180326</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">clean http://mirrors.tuna.tsinghua.edu.cn/ubuntu</span><br></pre></td></tr></table></figure>\n<p>随后运行apt-mirror下载源</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt-mirror </span><br><span class=\"line\">Downloading 152 index files using 20 threads...</span><br><span class=\"line\">Begin time: Mon Mar 26 10:38:17 2018</span><br><span class=\"line\">[20]... [19]... [18]... [17]... [16]... [15]... [14]... [13]... [12]... [11]... [10]... [9]... [8]... [7]... [6]... [5]... [4]... [3]... [2]... [1]... [0]... </span><br><span class=\"line\">End time: Mon Mar 26 10:38:29 2018</span><br><span class=\"line\"></span><br><span class=\"line\">Processing tranlation indexes: [TTTT]</span><br><span class=\"line\">.......</span><br></pre></td></tr></table></figure>\n<p>随后等待文件下载完成，等待时间视网络状况，本次源仓库共有113.3 GiB。(ps：在更新了三个小时多后终于更新完成了)</p>\n<p><strong><em>【Note】</em></strong></p>\n<p>1)当某些软件包在服务器端进行了升级，或者服务器端不再需要这些软件包时，我们使用了 <code>apt-mirror</code>与服务器同步后，会在本地的<code>$var_path/</code>下生成一个<code>clean.sh</code>的脚本，列出了遗留在本地的旧版本和无用的软件包，可以手动运行这个脚本来删除遗留在本地的且不需要用的软件包<br><code>clean http://mirrors.tuna.tsinghua.edu.cn/ubuntu</code></p>\n<p>2)如果用amd64位架构下的包，可以加上deb-amd64的标记如果什么都不加，直接使用deb http…..这种格式，则在同步时，只同步当前系统所使用的架构下的软件包。比如一个64位系统，直接deb http….只同步64位的软件 包。如果还嫌麻烦，直接去改<code>set defaultarch   &lt;running hostarchitecture&gt;</code>这个参数就好，比如改成set defaultarch i386，这样你使用debhttp…..这种格式，则在同步时，只同步i386的软件包了。</p>\n<p>如果你还想要源码，可以把源码也加到mirror.list里面同步过来，比如加上deb-src这样的标记。想要其他的东西也可以追加相应的标记来完成。</p>\n<p>3）同步完成后，我们可以利用clean.sh清理无用软件包：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# /var/spool/apt-mirror/var/clean.sh</span><br></pre></td></tr></table></figure>\n<p>2.3 作为本机源配置</p>\n<p>源路径为</p>\n<p>配置本机源文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# cat /etc/apt/sources.list</span><br><span class=\"line\">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-security main restricted universe multiverse</span><br></pre></td></tr></table></figure>\n<p>2.4 局域网源配置</p>\n<p>2.4.1 首先需要安装apache2服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt-get install apache2</span><br></pre></td></tr></table></figure>\n<p>将镜像目录链接到apache2的根目录(/var/www/html/)下 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# sudo ln -s /var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu /var/www/html/ubuntu</span><br></pre></td></tr></table></figure>\n<p>打开浏览器<code>http://&lt;HOST IP&gt;/ubuntu</code> 即可查看</p>\n<p>2.4.2 修改局域网ubuntu源</p>\n<p>修改局域网内主机的ubuntu源，同时指定源为64位</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# cat /etc/apt/sources.list</span><br><span class=\"line\">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-security main restricted universe multiverse</span><br></pre></td></tr></table></figure>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://maas.io/install\" target=\"_blank\" rel=\"noopener\">MAAS安装指导</a></p>\n<p>2)<a href=\"https://blog.csdn.net/wenwenxiong/article/details/50908002\" target=\"_blank\" rel=\"noopener\">ubuntu私有源搭建</a></p>\n<p>3)<a href=\"https://www.linuxidc.com/Linux/2014-08/105415.htm\" target=\"_blank\" rel=\"noopener\">私有源配置</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近做一个集成项目需要部署多台裸机服务器，考虑到服务器众多采用PXE的方式给服务器安装系统是最便捷的同时考虑到网络速度的因素，建立一个ubuntu私有源镜像服务器安装软件包无疑会更快更便捷。</p>\n<p>本文将分两部分讲解环境搭建：1)MAAS环境搭建，2)ubuntu私有源环境搭建。首先是MAAS环境的搭建。</p>\n<h2 id=\"1-MAAS环境搭建\"><a href=\"#1-MAAS环境搭建\" class=\"headerlink\" title=\"1 MAAS环境搭建\"></a>1 MAAS环境搭建</h2><h3 id=\"1-1-MAAS介绍\"><a href=\"#1-1-MAAS介绍\" class=\"headerlink\" title=\"1.1 MAAS介绍\"></a>1.1 MAAS介绍</h3><p><img src=\"https://assets.ubuntu.com/v1/33b96a7f-maas-logo.svg\" alt=\"\"></p>\n<p>MAAS[1]是ubuntu社区开发的开源裸机部署工具，能够从云端下载镜像引导本地主机从PXE启动并安装指定的系统，搭配诸如IPAM等同时兼具裸机状态管理功能。</p>\n<h3 id=\"1-2-MAAS安装\"><a href=\"#1-2-MAAS安装\" class=\"headerlink\" title=\"1.2 MAAS安装\"></a>1.2 MAAS安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt install maas -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-创建MAAS用户\"><a href=\"#1-3-创建MAAS用户\" class=\"headerlink\" title=\"1.3 创建MAAS用户\"></a>1.3 创建MAAS用户</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# maas createadmin --username=admin --email=MYEMAIL@EXAMPLE.COM</span><br></pre></td></tr></table></figure>\n<p>随后登录MAAS web页面 <code>http://&lt;your.maas.ip&gt;/MAAS/</code>，然后配置相关参数</p>\n<ul>\n<li>Region name (MAAS name)</li>\n<li>Ubuntu archive, Ubuntu extra architectures</li>\n<li>Ubuntu images</li>\n<li>SSH keys (for currently logged in user)</li>\n</ul>\n<p><img src=\"https://i.imgur.com/mB3EK4K.jpg\" alt=\"MAAS界面\"></p>\n<h3 id=\"1-4-系统Images设置\"><a href=\"#1-4-系统Images设置\" class=\"headerlink\" title=\"1.4 系统Images设置\"></a>1.4 系统Images设置</h3><p>在<code>Images</code>界面设置需要安装的系统版本，本次部署需要是64位的ubuntu 16.04，配置完成后MAAS会自动同步镜像</p>\n<p><img src=\"https://i.imgur.com/tXMsQWz.jpg\" alt=\"MAAS Inages设置\"></p>\n<p>在<code>setting</code>界面配置系统PXE启动时装载的最小镜像供MAAS进行服务器的硬件信息等解析</p>\n<p><img src=\"https://i.imgur.com/gcsXtgW.jpg\" alt=\"MAAS 最小镜像配置\"></p>\n<h3 id=\"1-4-DHCP配置\"><a href=\"#1-4-DHCP配置\" class=\"headerlink\" title=\"1.4  DHCP配置\"></a>1.4  DHCP配置</h3><p>点击<code>Subnets</code>选择一个网络点击<code>VLAN</code>选择右上的<code>take action</code>选项框，选择<code>Provid DHCP</code>，然后配置dhcp范围</p>\n<p><img src=\"https://i.imgur.com/0pPmBOZ.jpg\" alt=\"MAAS DHCP配置\"></p>\n<p>【Note】</p>\n<p>1)检查需要安装系统的服务器PXE启动，配置服务器启动项中PXE为首选；</p>\n<p>2)配置服务器的IPMI，便于MAAS完全接管服务器，包括服务器的启动、关机、重启等。</p>\n<p>启动待装系统的服务器，可以看到MAAS检测到服务器上线</p>\n<p><img src=\"https://i.imgur.com/C2nozbq.jpg\" alt=\"MAAS硬件检测\"></p>\n<p>更多MAAS配置及设置参见官网<a href=\"https://docs.maas.io/2.3/en/\" target=\"_blank\" rel=\"noopener\">用户手册</a></p>\n<h2 id=\"2-ubuntu私有源环境搭建\"><a href=\"#2-ubuntu私有源环境搭建\" class=\"headerlink\" title=\"2 ubuntu私有源环境搭建\"></a>2 ubuntu私有源环境搭建</h2><p>私有源环境搭建主要是应对公司网络限制，如访问过慢或限制网络连接的情况，也可以应对需要大量现场装机部署等情况加快部署进度。</p>\n<p>2.1 安装apt-mirror工具</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt-get install -y apt-mirror</span><br></pre></td></tr></table></figure>\n<p>2.2 配置apt-mirror</p>\n<p>本次安装的ubuntu为<strong>16.04</strong>，设置ubuntu源为清华源（可以根据网速设置自己常用或访问较快的源），由于只需要64位的安装软件，这里设置近下载64位的，同时也可以根据自己的需求修改源下载路径位置等参数。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# cat /etc/apt/mirror.list </span><br><span class=\"line\"><span class=\"meta\">#</span>############ config ##################</span><br><span class=\"line\"><span class=\"meta\">#</span></span><br><span class=\"line\"><span class=\"meta\">#</span> set base_path    /var/spool/apt-mirror</span><br><span class=\"line\"><span class=\"meta\">#</span></span><br><span class=\"line\"><span class=\"meta\">#</span> set mirror_path  $base_path/mirror</span><br><span class=\"line\"><span class=\"meta\">#</span> set skel_path    $base_path/skel</span><br><span class=\"line\"><span class=\"meta\">#</span> set var_path     $base_path/var</span><br><span class=\"line\"><span class=\"meta\">#</span> set cleanscript $var_path/clean.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> set defaultarch  &lt;running host architecture&gt;</span><br><span class=\"line\">set defaultarch  amd64</span><br><span class=\"line\"><span class=\"meta\">#</span> set postmirror_script $var_path/postmirror.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> set run_postmirror 0</span><br><span class=\"line\">set nthreads     20</span><br><span class=\"line\">set _tilde 0</span><br><span class=\"line\"><span class=\"meta\">#</span></span><br><span class=\"line\"><span class=\"meta\">#</span>############ end config ##############</span><br><span class=\"line\"><span class=\"meta\">#</span> louie add qinghua source 20180326</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">clean http://mirrors.tuna.tsinghua.edu.cn/ubuntu</span><br></pre></td></tr></table></figure>\n<p>随后运行apt-mirror下载源</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt-mirror </span><br><span class=\"line\">Downloading 152 index files using 20 threads...</span><br><span class=\"line\">Begin time: Mon Mar 26 10:38:17 2018</span><br><span class=\"line\">[20]... [19]... [18]... [17]... [16]... [15]... [14]... [13]... [12]... [11]... [10]... [9]... [8]... [7]... [6]... [5]... [4]... [3]... [2]... [1]... [0]... </span><br><span class=\"line\">End time: Mon Mar 26 10:38:29 2018</span><br><span class=\"line\"></span><br><span class=\"line\">Processing tranlation indexes: [TTTT]</span><br><span class=\"line\">.......</span><br></pre></td></tr></table></figure>\n<p>随后等待文件下载完成，等待时间视网络状况，本次源仓库共有113.3 GiB。(ps：在更新了三个小时多后终于更新完成了)</p>\n<p><strong><em>【Note】</em></strong></p>\n<p>1)当某些软件包在服务器端进行了升级，或者服务器端不再需要这些软件包时，我们使用了 <code>apt-mirror</code>与服务器同步后，会在本地的<code>$var_path/</code>下生成一个<code>clean.sh</code>的脚本，列出了遗留在本地的旧版本和无用的软件包，可以手动运行这个脚本来删除遗留在本地的且不需要用的软件包<br><code>clean http://mirrors.tuna.tsinghua.edu.cn/ubuntu</code></p>\n<p>2)如果用amd64位架构下的包，可以加上deb-amd64的标记如果什么都不加，直接使用deb http…..这种格式，则在同步时，只同步当前系统所使用的架构下的软件包。比如一个64位系统，直接deb http….只同步64位的软件 包。如果还嫌麻烦，直接去改<code>set defaultarch   &lt;running hostarchitecture&gt;</code>这个参数就好，比如改成set defaultarch i386，这样你使用debhttp…..这种格式，则在同步时，只同步i386的软件包了。</p>\n<p>如果你还想要源码，可以把源码也加到mirror.list里面同步过来，比如加上deb-src这样的标记。想要其他的东西也可以追加相应的标记来完成。</p>\n<p>3）同步完成后，我们可以利用clean.sh清理无用软件包：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# /var/spool/apt-mirror/var/clean.sh</span><br></pre></td></tr></table></figure>\n<p>2.3 作为本机源配置</p>\n<p>源路径为</p>\n<p>配置本机源文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# cat /etc/apt/sources.list</span><br><span class=\"line\">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] file:///var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-security main restricted universe multiverse</span><br></pre></td></tr></table></figure>\n<p>2.4 局域网源配置</p>\n<p>2.4.1 首先需要安装apache2服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt-get install apache2</span><br></pre></td></tr></table></figure>\n<p>将镜像目录链接到apache2的根目录(/var/www/html/)下 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# sudo ln -s /var/spool/apt-mirror/mirror/mirrors.tuna.tsinghua.edu.cn/ubuntu /var/www/html/ubuntu</span><br></pre></td></tr></table></figure>\n<p>打开浏览器<code>http://&lt;HOST IP&gt;/ubuntu</code> 即可查看</p>\n<p>2.4.2 修改局域网ubuntu源</p>\n<p>修改局域网内主机的ubuntu源，同时指定源为64位</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# cat /etc/apt/sources.list</span><br><span class=\"line\">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb [arch=amd64] http://192.168.4.170/ubuntu/ xenial-security main restricted universe multiverse</span><br></pre></td></tr></table></figure>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://maas.io/install\" target=\"_blank\" rel=\"noopener\">MAAS安装指导</a></p>\n<p>2)<a href=\"https://blog.csdn.net/wenwenxiong/article/details/50908002\" target=\"_blank\" rel=\"noopener\">ubuntu私有源搭建</a></p>\n<p>3)<a href=\"https://www.linuxidc.com/Linux/2014-08/105415.htm\" target=\"_blank\" rel=\"noopener\">私有源配置</a></p>\n"},{"title":"CVP 项目说明","date":"2017-09-27T09:10:13.000Z","keywords":["OPNFV CVP"],"description":["OPNFV Dovetail 使用"],"top":null,"_content":"\n***NOTE***：本文以 CVP  dovetail的0.6版本为例来讲解dovetail项目的使用，随着dovetail版本的升级使用的命令和配置会有所改变。（2017年9月8日）\n\n修改1：0.6版本升级到0.9，部分内容作出更新（2017年11月13日）\n\n**摘要**:本文主要介绍如何使用OPNFV的Dovetail项目进行NFV基础设施NFVI&VIM的测试。\n\n<!--more-->\n\nOPNFV的CVP（Compliance Verification Program）一致性认证项目\n\n## 1.Dovetail 安装\n\ndovetail 可以运行在实体机(bare metal)，可以运行在虚拟机中。dovetail可以使用源码来安装也可以使用docker环境，建议使用docker来安装。为了环境部署方便以及更快的熟悉该项目，本文采用 docker 环境来安装和使用 dovetail 。\n\n### 1.1 准备相应的测试代码\n\n由于dovetail测试项目需要使用OPNFV中的其他测试项目代码，因此还需要functest、yardstick等项目。\n\n```shell\ndocker pull opnfv/dovetail:cvp.0.6.0\ndocker pull opnfv/functest:cvp.0.5.0\ndocker pull opnfv/yardstick:danube.3.2\ndocker pull opnfv/bottlenecks:cvp.0.4.0\nwget -nc http://artifacts.opnfv.org/sdnvpn/ubuntu-16.04-server-cloudimg-amd64-disk1.img -P .\nwget -nc http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img -P .\n```\n\ndovetail可以在离线环境下进行测试，前提是需要先保存以上的docker镜像。\n\n```shell\n docker save -o dovetail.tar opnfv/dovetail:cvp.0.6.0 opnfv/functest:cvp.0.5.0 \\\n opnfv/yardstick:danube.3.2 opnfv/bottlenecks:cvp.0.4.0\n```\n\n### 1.2 配置 dovetail 运行环境\n\n首先创建一个dovetail的相关文件存放的目录`${DOVETAIL_HOME}/pre_config`，这里以`/root/dovetail`为例\n\n```shell\nexport DOVETAIL_HOME=/home/dovetail\n```\n\n将之前的镜像文件保存在`pre_config`目录下，并在该目录下创建`env_config.sh`文件，并填入一下内容。需要指出的是dovetail CVP中不在需要`INSTALL_IP`之类的参数，相关警告可以忽略，详见\n\nhttps://jira.opnfv.org/browse/DOVETAIL-371\n\n```shell\n# Project-level authentication scope (name or ID), recommend admin project.\nexport OS_PROJECT_NAME=admin\n# Authentication username, belongs to the project above, recommend admin user.\nexport OS_USERNAME=admin\n# Authentication password. Use your own password\nexport OS_PASSWORD=admin\n# Authentication URL, one of the endpoints of keystone service. If this is v3 version,\n# there need some extra variables as follows.\nexport OS_AUTH_URL='http://192.168.20.11:5000/'\n# Default is 2.0. If use keystone v3 API, this should be set as 3.\nexport OS_IDENTITY_API_VERSION=3\n# Domain name or ID containing the user above.\n# Command to check the domain: openstack user show <OS_USERNAME>\nexport OS_USER_DOMAIN_NAME=default\n# Domain name or ID containing the project above.\n# Command to check the domain: openstack project show <OS_PROJECT_NAME>\nexport OS_PROJECT_DOMAIN_NAME=default\n# Home directory for dovetail\nexport DOVETAIL_HOME=/root/dovetail\n```\n\n导入该环境变量\n\n```shell\nsource env_config.sh\n```\n\n### 1.3 运行 dovetail 容器\n\n```shell\ndocker run --privileged=true -it \\\n             -e DOVETAIL_HOME=$DOVETAIL_HOME \\\n             -v $DOVETAIL_HOME:$DOVETAIL_HOME \\\n             -v /var/run/docker.sock:/var/run/docker.sock \\\n             --name dovetail opnfv/dovetail:cvp.0.6.0 /bin/bash \n```\n\n上述命令中`-v $DOVETAIL_HOME:$DOVETAIL_HOME`是指明host与container之间目录映射，此处不一致会导致后续的测试结果存储出现问题。在后续拍错时可以使用`docker inspect dovetail`命令检查容器的相关配置。运行完成后会直接进入到dovetail容器中.\n\n为了方便的看清目录和文件，增加一些配置\n\n```shell\nalias l='ls -CF'\nalias la='ls -A'\nalias ll='ls -alF'\nalias ls='ls --color=auto'\n```\n\n## 2. 执行测试\n\n### 2.1 简单用例测试\n\n使用命令查看有哪些dovetail测试例\n\n```shell\ndovetail list\n```\n\n运行 dovetail 测试\n\n当dovetail正式版本发布时使用下列命令执行整个测试\n\n```shell\ndovetail run --testsuite CVP_1_0_0 --testarea ipv6 --debug | tee test.txt\n```\n\n目前dovetail测试版本使用下列命令执行测试\n\n```shell\ndovetail run -d --testsuite proposed_tests --testarea ha --offline | tee $DOVETAIL_HOME/test.txt-20170912_0954-HA\n```\n\n`testarea`指明测试域，在dovetail容器的`conf`目录中`dovetail.yml`可以查看相关测试域\n\n> testarea_supported:\n>\n> - defcore\n> - example\n> - ha\n> - ipv6\n> - sdnvpn\n> - vping\n> - resiliency\n> - tempest\n\n或者使用`dovetail list proposed_tests `命令来查看有哪些`testarea`和具体的`testarea`下包含的测试例是什么。\n\n### 2.2 其他测试配置文件\n\n### 2.2.1 HA测试配置\n\nHA测试的配置文件为`${DOVETAIL_HOME}/pre_config/pod.yaml`，可以参考`dovetail/userconfig/pod.yaml.sample`配置内容如下,只需要列出HA的控制节点\n\n```\nnodes:\n-\n    # This can not be changed and must be node1.\n    name: node1\n\n    # This must be controller.\n    role: Controller\n\n    # This is the install IP of a controller node.\n    ip: xx.xx.xx.xx\n\n    # User name of this node. This user must have sudo privileges.\n    user: root\n\n    # Password of the user.\n    password: root\n    \n    # Private key of this node. It must be /root/.ssh/id_rsa\n    # Dovetail will move the key file from $DOVETAIL_HOME/pre_config/id_rsa\n    # to /root/.ssh/id_rsa of Yardstick container\n    key_filename: /root/.ssh/id_rsa\n```\n\n需要注意的是节点的名字必须是`node1`、`node2`格式，主要是该项测试调用了functest的相关测试，而functest做了相关配置要求，IP地址为**测试机**能够访问节点的IP，HA测试会需要ssh登录到节点中关闭/重启openstack的nova、glance等相应服务，也需要提供能够访问其他节点的密匙文件。\n\n#### 2.2.2 tempest测试配置\n\n配置文件需要存放在`$DOVETAIL_HOME/pre_config/tempest_conf.yaml`,依据待测环境配置相应的信息。\n\n```shell\nvalidation:\n    image_ssh_user: cirros\n    ssh_timeout: 300\n\ncompute:\n    min_compute_nodes: 2\n#    volume_device_name: vdb\n```\n\n测试过程中使用的是cirros的镜像，cirros的初始账户为：cirros，设置登录超时时间，设置计算节点个数，对于compass的环境新添加的系统云盘名称为vdb因此需要指定（默认为vdc）。\n\n## 3. 测试结果\n\ndovetail的测试结果存放在`$DOVETAIL_HOME/results`目录下，具体的每个测试域也有对应的详细存储结果目录。如IPv6测试详细结果存放在`ipv6_logs/dovetail.ipv6.tcXXX.log`，可以查看执行失败的原因。\n\n\n\n**参考链接**\n\n1）[dovetail 用户手册](http://artifacts.opnfv.org/dovetail/docs/testing_user_userguide/index.html)\n\n","source":"_posts/OPNFV测试项目-Dovetail.md","raw":"---\ntitle: CVP 项目说明\ndate: 2017-09-27 17:10:13\ncategories:\n  - OPNFV\ntags:\n  - Dovetail\n  - OPNFV\n  - NFV\n  - CVP\nkeywords:\n  - OPNFV CVP\ndescription:\n  - OPNFV Dovetail 使用\ntop:\n---\n\n***NOTE***：本文以 CVP  dovetail的0.6版本为例来讲解dovetail项目的使用，随着dovetail版本的升级使用的命令和配置会有所改变。（2017年9月8日）\n\n修改1：0.6版本升级到0.9，部分内容作出更新（2017年11月13日）\n\n**摘要**:本文主要介绍如何使用OPNFV的Dovetail项目进行NFV基础设施NFVI&VIM的测试。\n\n<!--more-->\n\nOPNFV的CVP（Compliance Verification Program）一致性认证项目\n\n## 1.Dovetail 安装\n\ndovetail 可以运行在实体机(bare metal)，可以运行在虚拟机中。dovetail可以使用源码来安装也可以使用docker环境，建议使用docker来安装。为了环境部署方便以及更快的熟悉该项目，本文采用 docker 环境来安装和使用 dovetail 。\n\n### 1.1 准备相应的测试代码\n\n由于dovetail测试项目需要使用OPNFV中的其他测试项目代码，因此还需要functest、yardstick等项目。\n\n```shell\ndocker pull opnfv/dovetail:cvp.0.6.0\ndocker pull opnfv/functest:cvp.0.5.0\ndocker pull opnfv/yardstick:danube.3.2\ndocker pull opnfv/bottlenecks:cvp.0.4.0\nwget -nc http://artifacts.opnfv.org/sdnvpn/ubuntu-16.04-server-cloudimg-amd64-disk1.img -P .\nwget -nc http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img -P .\n```\n\ndovetail可以在离线环境下进行测试，前提是需要先保存以上的docker镜像。\n\n```shell\n docker save -o dovetail.tar opnfv/dovetail:cvp.0.6.0 opnfv/functest:cvp.0.5.0 \\\n opnfv/yardstick:danube.3.2 opnfv/bottlenecks:cvp.0.4.0\n```\n\n### 1.2 配置 dovetail 运行环境\n\n首先创建一个dovetail的相关文件存放的目录`${DOVETAIL_HOME}/pre_config`，这里以`/root/dovetail`为例\n\n```shell\nexport DOVETAIL_HOME=/home/dovetail\n```\n\n将之前的镜像文件保存在`pre_config`目录下，并在该目录下创建`env_config.sh`文件，并填入一下内容。需要指出的是dovetail CVP中不在需要`INSTALL_IP`之类的参数，相关警告可以忽略，详见\n\nhttps://jira.opnfv.org/browse/DOVETAIL-371\n\n```shell\n# Project-level authentication scope (name or ID), recommend admin project.\nexport OS_PROJECT_NAME=admin\n# Authentication username, belongs to the project above, recommend admin user.\nexport OS_USERNAME=admin\n# Authentication password. Use your own password\nexport OS_PASSWORD=admin\n# Authentication URL, one of the endpoints of keystone service. If this is v3 version,\n# there need some extra variables as follows.\nexport OS_AUTH_URL='http://192.168.20.11:5000/'\n# Default is 2.0. If use keystone v3 API, this should be set as 3.\nexport OS_IDENTITY_API_VERSION=3\n# Domain name or ID containing the user above.\n# Command to check the domain: openstack user show <OS_USERNAME>\nexport OS_USER_DOMAIN_NAME=default\n# Domain name or ID containing the project above.\n# Command to check the domain: openstack project show <OS_PROJECT_NAME>\nexport OS_PROJECT_DOMAIN_NAME=default\n# Home directory for dovetail\nexport DOVETAIL_HOME=/root/dovetail\n```\n\n导入该环境变量\n\n```shell\nsource env_config.sh\n```\n\n### 1.3 运行 dovetail 容器\n\n```shell\ndocker run --privileged=true -it \\\n             -e DOVETAIL_HOME=$DOVETAIL_HOME \\\n             -v $DOVETAIL_HOME:$DOVETAIL_HOME \\\n             -v /var/run/docker.sock:/var/run/docker.sock \\\n             --name dovetail opnfv/dovetail:cvp.0.6.0 /bin/bash \n```\n\n上述命令中`-v $DOVETAIL_HOME:$DOVETAIL_HOME`是指明host与container之间目录映射，此处不一致会导致后续的测试结果存储出现问题。在后续拍错时可以使用`docker inspect dovetail`命令检查容器的相关配置。运行完成后会直接进入到dovetail容器中.\n\n为了方便的看清目录和文件，增加一些配置\n\n```shell\nalias l='ls -CF'\nalias la='ls -A'\nalias ll='ls -alF'\nalias ls='ls --color=auto'\n```\n\n## 2. 执行测试\n\n### 2.1 简单用例测试\n\n使用命令查看有哪些dovetail测试例\n\n```shell\ndovetail list\n```\n\n运行 dovetail 测试\n\n当dovetail正式版本发布时使用下列命令执行整个测试\n\n```shell\ndovetail run --testsuite CVP_1_0_0 --testarea ipv6 --debug | tee test.txt\n```\n\n目前dovetail测试版本使用下列命令执行测试\n\n```shell\ndovetail run -d --testsuite proposed_tests --testarea ha --offline | tee $DOVETAIL_HOME/test.txt-20170912_0954-HA\n```\n\n`testarea`指明测试域，在dovetail容器的`conf`目录中`dovetail.yml`可以查看相关测试域\n\n> testarea_supported:\n>\n> - defcore\n> - example\n> - ha\n> - ipv6\n> - sdnvpn\n> - vping\n> - resiliency\n> - tempest\n\n或者使用`dovetail list proposed_tests `命令来查看有哪些`testarea`和具体的`testarea`下包含的测试例是什么。\n\n### 2.2 其他测试配置文件\n\n### 2.2.1 HA测试配置\n\nHA测试的配置文件为`${DOVETAIL_HOME}/pre_config/pod.yaml`，可以参考`dovetail/userconfig/pod.yaml.sample`配置内容如下,只需要列出HA的控制节点\n\n```\nnodes:\n-\n    # This can not be changed and must be node1.\n    name: node1\n\n    # This must be controller.\n    role: Controller\n\n    # This is the install IP of a controller node.\n    ip: xx.xx.xx.xx\n\n    # User name of this node. This user must have sudo privileges.\n    user: root\n\n    # Password of the user.\n    password: root\n    \n    # Private key of this node. It must be /root/.ssh/id_rsa\n    # Dovetail will move the key file from $DOVETAIL_HOME/pre_config/id_rsa\n    # to /root/.ssh/id_rsa of Yardstick container\n    key_filename: /root/.ssh/id_rsa\n```\n\n需要注意的是节点的名字必须是`node1`、`node2`格式，主要是该项测试调用了functest的相关测试，而functest做了相关配置要求，IP地址为**测试机**能够访问节点的IP，HA测试会需要ssh登录到节点中关闭/重启openstack的nova、glance等相应服务，也需要提供能够访问其他节点的密匙文件。\n\n#### 2.2.2 tempest测试配置\n\n配置文件需要存放在`$DOVETAIL_HOME/pre_config/tempest_conf.yaml`,依据待测环境配置相应的信息。\n\n```shell\nvalidation:\n    image_ssh_user: cirros\n    ssh_timeout: 300\n\ncompute:\n    min_compute_nodes: 2\n#    volume_device_name: vdb\n```\n\n测试过程中使用的是cirros的镜像，cirros的初始账户为：cirros，设置登录超时时间，设置计算节点个数，对于compass的环境新添加的系统云盘名称为vdb因此需要指定（默认为vdc）。\n\n## 3. 测试结果\n\ndovetail的测试结果存放在`$DOVETAIL_HOME/results`目录下，具体的每个测试域也有对应的详细存储结果目录。如IPv6测试详细结果存放在`ipv6_logs/dovetail.ipv6.tcXXX.log`，可以查看执行失败的原因。\n\n\n\n**参考链接**\n\n1）[dovetail 用户手册](http://artifacts.opnfv.org/dovetail/docs/testing_user_userguide/index.html)\n\n","slug":"OPNFV测试项目-Dovetail","published":1,"updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2w4000a6ijxgoqqch5v","content":"<p><strong><em>NOTE</em></strong>：本文以 CVP  dovetail的0.6版本为例来讲解dovetail项目的使用，随着dovetail版本的升级使用的命令和配置会有所改变。（2017年9月8日）</p>\n<p>修改1：0.6版本升级到0.9，部分内容作出更新（2017年11月13日）</p>\n<p><strong>摘要</strong>:本文主要介绍如何使用OPNFV的Dovetail项目进行NFV基础设施NFVI&amp;VIM的测试。</p>\n<a id=\"more\"></a>\n<p>OPNFV的CVP（Compliance Verification Program）一致性认证项目</p>\n<h2 id=\"1-Dovetail-安装\"><a href=\"#1-Dovetail-安装\" class=\"headerlink\" title=\"1.Dovetail 安装\"></a>1.Dovetail 安装</h2><p>dovetail 可以运行在实体机(bare metal)，可以运行在虚拟机中。dovetail可以使用源码来安装也可以使用docker环境，建议使用docker来安装。为了环境部署方便以及更快的熟悉该项目，本文采用 docker 环境来安装和使用 dovetail 。</p>\n<h3 id=\"1-1-准备相应的测试代码\"><a href=\"#1-1-准备相应的测试代码\" class=\"headerlink\" title=\"1.1 准备相应的测试代码\"></a>1.1 准备相应的测试代码</h3><p>由于dovetail测试项目需要使用OPNFV中的其他测试项目代码，因此还需要functest、yardstick等项目。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull opnfv/dovetail:cvp.0.6.0</span><br><span class=\"line\">docker pull opnfv/functest:cvp.0.5.0</span><br><span class=\"line\">docker pull opnfv/yardstick:danube.3.2</span><br><span class=\"line\">docker pull opnfv/bottlenecks:cvp.0.4.0</span><br><span class=\"line\">wget -nc http://artifacts.opnfv.org/sdnvpn/ubuntu-16.04-server-cloudimg-amd64-disk1.img -P .</span><br><span class=\"line\">wget -nc http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img -P .</span><br></pre></td></tr></table></figure>\n<p>dovetail可以在离线环境下进行测试，前提是需要先保存以上的docker镜像。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker save -o dovetail.tar opnfv/dovetail:cvp.0.6.0 opnfv/functest:cvp.0.5.0 \\</span><br><span class=\"line\">opnfv/yardstick:danube.3.2 opnfv/bottlenecks:cvp.0.4.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-配置-dovetail-运行环境\"><a href=\"#1-2-配置-dovetail-运行环境\" class=\"headerlink\" title=\"1.2 配置 dovetail 运行环境\"></a>1.2 配置 dovetail 运行环境</h3><p>首先创建一个dovetail的相关文件存放的目录<code>${DOVETAIL_HOME}/pre_config</code>，这里以<code>/root/dovetail</code>为例</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export DOVETAIL_HOME=/home/dovetail</span><br></pre></td></tr></table></figure>\n<p>将之前的镜像文件保存在<code>pre_config</code>目录下，并在该目录下创建<code>env_config.sh</code>文件，并填入一下内容。需要指出的是dovetail CVP中不在需要<code>INSTALL_IP</code>之类的参数，相关警告可以忽略，详见</p>\n<p><a href=\"https://jira.opnfv.org/browse/DOVETAIL-371\" target=\"_blank\" rel=\"noopener\">https://jira.opnfv.org/browse/DOVETAIL-371</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> Project-level authentication scope (name or ID), recommend admin project.</span><br><span class=\"line\">export OS_PROJECT_NAME=admin</span><br><span class=\"line\"><span class=\"meta\">#</span> Authentication username, belongs to the project above, recommend admin user.</span><br><span class=\"line\">export OS_USERNAME=admin</span><br><span class=\"line\"><span class=\"meta\">#</span> Authentication password. Use your own password</span><br><span class=\"line\">export OS_PASSWORD=admin</span><br><span class=\"line\"><span class=\"meta\">#</span> Authentication URL, one of the endpoints of keystone service. If this is v3 version,</span><br><span class=\"line\"><span class=\"meta\">#</span> there need some extra variables as follows.</span><br><span class=\"line\">export OS_AUTH_URL='http://192.168.20.11:5000/'</span><br><span class=\"line\"><span class=\"meta\">#</span> Default is 2.0. If use keystone v3 API, this should be set as 3.</span><br><span class=\"line\">export OS_IDENTITY_API_VERSION=3</span><br><span class=\"line\"><span class=\"meta\">#</span> Domain name or ID containing the user above.</span><br><span class=\"line\"><span class=\"meta\">#</span> Command to check the domain: openstack user show &lt;OS_USERNAME&gt;</span><br><span class=\"line\">export OS_USER_DOMAIN_NAME=default</span><br><span class=\"line\"><span class=\"meta\">#</span> Domain name or ID containing the project above.</span><br><span class=\"line\"><span class=\"meta\">#</span> Command to check the domain: openstack project show &lt;OS_PROJECT_NAME&gt;</span><br><span class=\"line\">export OS_PROJECT_DOMAIN_NAME=default</span><br><span class=\"line\"><span class=\"meta\">#</span> Home directory for dovetail</span><br><span class=\"line\">export DOVETAIL_HOME=/root/dovetail</span><br></pre></td></tr></table></figure>\n<p>导入该环境变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source env_config.sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-运行-dovetail-容器\"><a href=\"#1-3-运行-dovetail-容器\" class=\"headerlink\" title=\"1.3 运行 dovetail 容器\"></a>1.3 运行 dovetail 容器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --privileged=true -it \\</span><br><span class=\"line\">             -e DOVETAIL_HOME=$DOVETAIL_HOME \\</span><br><span class=\"line\">             -v $DOVETAIL_HOME:$DOVETAIL_HOME \\</span><br><span class=\"line\">             -v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class=\"line\">             --name dovetail opnfv/dovetail:cvp.0.6.0 /bin/bash</span><br></pre></td></tr></table></figure>\n<p>上述命令中<code>-v $DOVETAIL_HOME:$DOVETAIL_HOME</code>是指明host与container之间目录映射，此处不一致会导致后续的测试结果存储出现问题。在后续拍错时可以使用<code>docker inspect dovetail</code>命令检查容器的相关配置。运行完成后会直接进入到dovetail容器中.</p>\n<p>为了方便的看清目录和文件，增加一些配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias l='ls -CF'</span><br><span class=\"line\">alias la='ls -A'</span><br><span class=\"line\">alias ll='ls -alF'</span><br><span class=\"line\">alias ls='ls --color=auto'</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-执行测试\"><a href=\"#2-执行测试\" class=\"headerlink\" title=\"2. 执行测试\"></a>2. 执行测试</h2><h3 id=\"2-1-简单用例测试\"><a href=\"#2-1-简单用例测试\" class=\"headerlink\" title=\"2.1 简单用例测试\"></a>2.1 简单用例测试</h3><p>使用命令查看有哪些dovetail测试例</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dovetail list</span><br></pre></td></tr></table></figure>\n<p>运行 dovetail 测试</p>\n<p>当dovetail正式版本发布时使用下列命令执行整个测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dovetail run --testsuite CVP_1_0_0 --testarea ipv6 --debug | tee test.txt</span><br></pre></td></tr></table></figure>\n<p>目前dovetail测试版本使用下列命令执行测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dovetail run -d --testsuite proposed_tests --testarea ha --offline | tee $DOVETAIL_HOME/test.txt-20170912_0954-HA</span><br></pre></td></tr></table></figure>\n<p><code>testarea</code>指明测试域，在dovetail容器的<code>conf</code>目录中<code>dovetail.yml</code>可以查看相关测试域</p>\n<blockquote>\n<p>testarea_supported:</p>\n<ul>\n<li>defcore</li>\n<li>example</li>\n<li>ha</li>\n<li>ipv6</li>\n<li>sdnvpn</li>\n<li>vping</li>\n<li>resiliency</li>\n<li>tempest</li>\n</ul>\n</blockquote>\n<p>或者使用<code>dovetail list proposed_tests</code>命令来查看有哪些<code>testarea</code>和具体的<code>testarea</code>下包含的测试例是什么。</p>\n<h3 id=\"2-2-其他测试配置文件\"><a href=\"#2-2-其他测试配置文件\" class=\"headerlink\" title=\"2.2 其他测试配置文件\"></a>2.2 其他测试配置文件</h3><h3 id=\"2-2-1-HA测试配置\"><a href=\"#2-2-1-HA测试配置\" class=\"headerlink\" title=\"2.2.1 HA测试配置\"></a>2.2.1 HA测试配置</h3><p>HA测试的配置文件为<code>${DOVETAIL_HOME}/pre_config/pod.yaml</code>，可以参考<code>dovetail/userconfig/pod.yaml.sample</code>配置内容如下,只需要列出HA的控制节点</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nodes:</span><br><span class=\"line\">-</span><br><span class=\"line\">    # This can not be changed and must be node1.</span><br><span class=\"line\">    name: node1</span><br><span class=\"line\"></span><br><span class=\"line\">    # This must be controller.</span><br><span class=\"line\">    role: Controller</span><br><span class=\"line\"></span><br><span class=\"line\">    # This is the install IP of a controller node.</span><br><span class=\"line\">    ip: xx.xx.xx.xx</span><br><span class=\"line\"></span><br><span class=\"line\">    # User name of this node. This user must have sudo privileges.</span><br><span class=\"line\">    user: root</span><br><span class=\"line\"></span><br><span class=\"line\">    # Password of the user.</span><br><span class=\"line\">    password: root</span><br><span class=\"line\">    </span><br><span class=\"line\">    # Private key of this node. It must be /root/.ssh/id_rsa</span><br><span class=\"line\">    # Dovetail will move the key file from $DOVETAIL_HOME/pre_config/id_rsa</span><br><span class=\"line\">    # to /root/.ssh/id_rsa of Yardstick container</span><br><span class=\"line\">    key_filename: /root/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\n<p>需要注意的是节点的名字必须是<code>node1</code>、<code>node2</code>格式，主要是该项测试调用了functest的相关测试，而functest做了相关配置要求，IP地址为<strong>测试机</strong>能够访问节点的IP，HA测试会需要ssh登录到节点中关闭/重启openstack的nova、glance等相应服务，也需要提供能够访问其他节点的密匙文件。</p>\n<h4 id=\"2-2-2-tempest测试配置\"><a href=\"#2-2-2-tempest测试配置\" class=\"headerlink\" title=\"2.2.2 tempest测试配置\"></a>2.2.2 tempest测试配置</h4><p>配置文件需要存放在<code>$DOVETAIL_HOME/pre_config/tempest_conf.yaml</code>,依据待测环境配置相应的信息。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">validation:</span><br><span class=\"line\">    image_ssh_user: cirros</span><br><span class=\"line\">    ssh_timeout: 300</span><br><span class=\"line\"></span><br><span class=\"line\">compute:</span><br><span class=\"line\">    min_compute_nodes: 2</span><br><span class=\"line\"><span class=\"meta\">#</span>    volume_device_name: vdb</span><br></pre></td></tr></table></figure>\n<p>测试过程中使用的是cirros的镜像，cirros的初始账户为：cirros，设置登录超时时间，设置计算节点个数，对于compass的环境新添加的系统云盘名称为vdb因此需要指定（默认为vdc）。</p>\n<h2 id=\"3-测试结果\"><a href=\"#3-测试结果\" class=\"headerlink\" title=\"3. 测试结果\"></a>3. 测试结果</h2><p>dovetail的测试结果存放在<code>$DOVETAIL_HOME/results</code>目录下，具体的每个测试域也有对应的详细存储结果目录。如IPv6测试详细结果存放在<code>ipv6_logs/dovetail.ipv6.tcXXX.log</code>，可以查看执行失败的原因。</p>\n<p><strong>参考链接</strong></p>\n<p>1）<a href=\"http://artifacts.opnfv.org/dovetail/docs/testing_user_userguide/index.html\" target=\"_blank\" rel=\"noopener\">dovetail 用户手册</a></p>\n","site":{"data":{}},"excerpt":"<p><strong><em>NOTE</em></strong>：本文以 CVP  dovetail的0.6版本为例来讲解dovetail项目的使用，随着dovetail版本的升级使用的命令和配置会有所改变。（2017年9月8日）</p>\n<p>修改1：0.6版本升级到0.9，部分内容作出更新（2017年11月13日）</p>\n<p><strong>摘要</strong>:本文主要介绍如何使用OPNFV的Dovetail项目进行NFV基础设施NFVI&amp;VIM的测试。</p>","more":"<p>OPNFV的CVP（Compliance Verification Program）一致性认证项目</p>\n<h2 id=\"1-Dovetail-安装\"><a href=\"#1-Dovetail-安装\" class=\"headerlink\" title=\"1.Dovetail 安装\"></a>1.Dovetail 安装</h2><p>dovetail 可以运行在实体机(bare metal)，可以运行在虚拟机中。dovetail可以使用源码来安装也可以使用docker环境，建议使用docker来安装。为了环境部署方便以及更快的熟悉该项目，本文采用 docker 环境来安装和使用 dovetail 。</p>\n<h3 id=\"1-1-准备相应的测试代码\"><a href=\"#1-1-准备相应的测试代码\" class=\"headerlink\" title=\"1.1 准备相应的测试代码\"></a>1.1 准备相应的测试代码</h3><p>由于dovetail测试项目需要使用OPNFV中的其他测试项目代码，因此还需要functest、yardstick等项目。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull opnfv/dovetail:cvp.0.6.0</span><br><span class=\"line\">docker pull opnfv/functest:cvp.0.5.0</span><br><span class=\"line\">docker pull opnfv/yardstick:danube.3.2</span><br><span class=\"line\">docker pull opnfv/bottlenecks:cvp.0.4.0</span><br><span class=\"line\">wget -nc http://artifacts.opnfv.org/sdnvpn/ubuntu-16.04-server-cloudimg-amd64-disk1.img -P .</span><br><span class=\"line\">wget -nc http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img -P .</span><br></pre></td></tr></table></figure>\n<p>dovetail可以在离线环境下进行测试，前提是需要先保存以上的docker镜像。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker save -o dovetail.tar opnfv/dovetail:cvp.0.6.0 opnfv/functest:cvp.0.5.0 \\</span><br><span class=\"line\">opnfv/yardstick:danube.3.2 opnfv/bottlenecks:cvp.0.4.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-配置-dovetail-运行环境\"><a href=\"#1-2-配置-dovetail-运行环境\" class=\"headerlink\" title=\"1.2 配置 dovetail 运行环境\"></a>1.2 配置 dovetail 运行环境</h3><p>首先创建一个dovetail的相关文件存放的目录<code>${DOVETAIL_HOME}/pre_config</code>，这里以<code>/root/dovetail</code>为例</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export DOVETAIL_HOME=/home/dovetail</span><br></pre></td></tr></table></figure>\n<p>将之前的镜像文件保存在<code>pre_config</code>目录下，并在该目录下创建<code>env_config.sh</code>文件，并填入一下内容。需要指出的是dovetail CVP中不在需要<code>INSTALL_IP</code>之类的参数，相关警告可以忽略，详见</p>\n<p><a href=\"https://jira.opnfv.org/browse/DOVETAIL-371\" target=\"_blank\" rel=\"noopener\">https://jira.opnfv.org/browse/DOVETAIL-371</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> Project-level authentication scope (name or ID), recommend admin project.</span><br><span class=\"line\">export OS_PROJECT_NAME=admin</span><br><span class=\"line\"><span class=\"meta\">#</span> Authentication username, belongs to the project above, recommend admin user.</span><br><span class=\"line\">export OS_USERNAME=admin</span><br><span class=\"line\"><span class=\"meta\">#</span> Authentication password. Use your own password</span><br><span class=\"line\">export OS_PASSWORD=admin</span><br><span class=\"line\"><span class=\"meta\">#</span> Authentication URL, one of the endpoints of keystone service. If this is v3 version,</span><br><span class=\"line\"><span class=\"meta\">#</span> there need some extra variables as follows.</span><br><span class=\"line\">export OS_AUTH_URL='http://192.168.20.11:5000/'</span><br><span class=\"line\"><span class=\"meta\">#</span> Default is 2.0. If use keystone v3 API, this should be set as 3.</span><br><span class=\"line\">export OS_IDENTITY_API_VERSION=3</span><br><span class=\"line\"><span class=\"meta\">#</span> Domain name or ID containing the user above.</span><br><span class=\"line\"><span class=\"meta\">#</span> Command to check the domain: openstack user show &lt;OS_USERNAME&gt;</span><br><span class=\"line\">export OS_USER_DOMAIN_NAME=default</span><br><span class=\"line\"><span class=\"meta\">#</span> Domain name or ID containing the project above.</span><br><span class=\"line\"><span class=\"meta\">#</span> Command to check the domain: openstack project show &lt;OS_PROJECT_NAME&gt;</span><br><span class=\"line\">export OS_PROJECT_DOMAIN_NAME=default</span><br><span class=\"line\"><span class=\"meta\">#</span> Home directory for dovetail</span><br><span class=\"line\">export DOVETAIL_HOME=/root/dovetail</span><br></pre></td></tr></table></figure>\n<p>导入该环境变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source env_config.sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-运行-dovetail-容器\"><a href=\"#1-3-运行-dovetail-容器\" class=\"headerlink\" title=\"1.3 运行 dovetail 容器\"></a>1.3 运行 dovetail 容器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --privileged=true -it \\</span><br><span class=\"line\">             -e DOVETAIL_HOME=$DOVETAIL_HOME \\</span><br><span class=\"line\">             -v $DOVETAIL_HOME:$DOVETAIL_HOME \\</span><br><span class=\"line\">             -v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class=\"line\">             --name dovetail opnfv/dovetail:cvp.0.6.0 /bin/bash</span><br></pre></td></tr></table></figure>\n<p>上述命令中<code>-v $DOVETAIL_HOME:$DOVETAIL_HOME</code>是指明host与container之间目录映射，此处不一致会导致后续的测试结果存储出现问题。在后续拍错时可以使用<code>docker inspect dovetail</code>命令检查容器的相关配置。运行完成后会直接进入到dovetail容器中.</p>\n<p>为了方便的看清目录和文件，增加一些配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias l='ls -CF'</span><br><span class=\"line\">alias la='ls -A'</span><br><span class=\"line\">alias ll='ls -alF'</span><br><span class=\"line\">alias ls='ls --color=auto'</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-执行测试\"><a href=\"#2-执行测试\" class=\"headerlink\" title=\"2. 执行测试\"></a>2. 执行测试</h2><h3 id=\"2-1-简单用例测试\"><a href=\"#2-1-简单用例测试\" class=\"headerlink\" title=\"2.1 简单用例测试\"></a>2.1 简单用例测试</h3><p>使用命令查看有哪些dovetail测试例</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dovetail list</span><br></pre></td></tr></table></figure>\n<p>运行 dovetail 测试</p>\n<p>当dovetail正式版本发布时使用下列命令执行整个测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dovetail run --testsuite CVP_1_0_0 --testarea ipv6 --debug | tee test.txt</span><br></pre></td></tr></table></figure>\n<p>目前dovetail测试版本使用下列命令执行测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dovetail run -d --testsuite proposed_tests --testarea ha --offline | tee $DOVETAIL_HOME/test.txt-20170912_0954-HA</span><br></pre></td></tr></table></figure>\n<p><code>testarea</code>指明测试域，在dovetail容器的<code>conf</code>目录中<code>dovetail.yml</code>可以查看相关测试域</p>\n<blockquote>\n<p>testarea_supported:</p>\n<ul>\n<li>defcore</li>\n<li>example</li>\n<li>ha</li>\n<li>ipv6</li>\n<li>sdnvpn</li>\n<li>vping</li>\n<li>resiliency</li>\n<li>tempest</li>\n</ul>\n</blockquote>\n<p>或者使用<code>dovetail list proposed_tests</code>命令来查看有哪些<code>testarea</code>和具体的<code>testarea</code>下包含的测试例是什么。</p>\n<h3 id=\"2-2-其他测试配置文件\"><a href=\"#2-2-其他测试配置文件\" class=\"headerlink\" title=\"2.2 其他测试配置文件\"></a>2.2 其他测试配置文件</h3><h3 id=\"2-2-1-HA测试配置\"><a href=\"#2-2-1-HA测试配置\" class=\"headerlink\" title=\"2.2.1 HA测试配置\"></a>2.2.1 HA测试配置</h3><p>HA测试的配置文件为<code>${DOVETAIL_HOME}/pre_config/pod.yaml</code>，可以参考<code>dovetail/userconfig/pod.yaml.sample</code>配置内容如下,只需要列出HA的控制节点</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nodes:</span><br><span class=\"line\">-</span><br><span class=\"line\">    # This can not be changed and must be node1.</span><br><span class=\"line\">    name: node1</span><br><span class=\"line\"></span><br><span class=\"line\">    # This must be controller.</span><br><span class=\"line\">    role: Controller</span><br><span class=\"line\"></span><br><span class=\"line\">    # This is the install IP of a controller node.</span><br><span class=\"line\">    ip: xx.xx.xx.xx</span><br><span class=\"line\"></span><br><span class=\"line\">    # User name of this node. This user must have sudo privileges.</span><br><span class=\"line\">    user: root</span><br><span class=\"line\"></span><br><span class=\"line\">    # Password of the user.</span><br><span class=\"line\">    password: root</span><br><span class=\"line\">    </span><br><span class=\"line\">    # Private key of this node. It must be /root/.ssh/id_rsa</span><br><span class=\"line\">    # Dovetail will move the key file from $DOVETAIL_HOME/pre_config/id_rsa</span><br><span class=\"line\">    # to /root/.ssh/id_rsa of Yardstick container</span><br><span class=\"line\">    key_filename: /root/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\n<p>需要注意的是节点的名字必须是<code>node1</code>、<code>node2</code>格式，主要是该项测试调用了functest的相关测试，而functest做了相关配置要求，IP地址为<strong>测试机</strong>能够访问节点的IP，HA测试会需要ssh登录到节点中关闭/重启openstack的nova、glance等相应服务，也需要提供能够访问其他节点的密匙文件。</p>\n<h4 id=\"2-2-2-tempest测试配置\"><a href=\"#2-2-2-tempest测试配置\" class=\"headerlink\" title=\"2.2.2 tempest测试配置\"></a>2.2.2 tempest测试配置</h4><p>配置文件需要存放在<code>$DOVETAIL_HOME/pre_config/tempest_conf.yaml</code>,依据待测环境配置相应的信息。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">validation:</span><br><span class=\"line\">    image_ssh_user: cirros</span><br><span class=\"line\">    ssh_timeout: 300</span><br><span class=\"line\"></span><br><span class=\"line\">compute:</span><br><span class=\"line\">    min_compute_nodes: 2</span><br><span class=\"line\"><span class=\"meta\">#</span>    volume_device_name: vdb</span><br></pre></td></tr></table></figure>\n<p>测试过程中使用的是cirros的镜像，cirros的初始账户为：cirros，设置登录超时时间，设置计算节点个数，对于compass的环境新添加的系统云盘名称为vdb因此需要指定（默认为vdc）。</p>\n<h2 id=\"3-测试结果\"><a href=\"#3-测试结果\" class=\"headerlink\" title=\"3. 测试结果\"></a>3. 测试结果</h2><p>dovetail的测试结果存放在<code>$DOVETAIL_HOME/results</code>目录下，具体的每个测试域也有对应的详细存储结果目录。如IPv6测试详细结果存放在<code>ipv6_logs/dovetail.ipv6.tcXXX.log</code>，可以查看执行失败的原因。</p>\n<p><strong>参考链接</strong></p>\n<p>1）<a href=\"http://artifacts.opnfv.org/dovetail/docs/testing_user_userguide/index.html\" target=\"_blank\" rel=\"noopener\">dovetail 用户手册</a></p>"},{"title":"OPNFV 测试项目 -- Yardstick","date":"2017-06-09T07:20:08.000Z","keywords":["Yardstick"],"description":["OPNFV Yardstick 使用"],"_content":"\n**摘要**:本文主要介绍如何使用OPNFV的Yardstick测试项目的使用。\n\n<!--more-->\n\n## 1.使用 Docker 安装 Yardstick\n**官方推荐 Docker 运行 Yardstick 测试**\n\n### 1.1安装 Docker\n\n```shell\nwget -qO- https://get.docker.com/ | sh\n```\n\n拉取 Yardstick 最新版\n\n```shell\ndocker pull opnfv/yardstick:latest\n```\n\n查看下载的 Docker 镜像\n\n```shell\ndocker images\n```\n\n## 2.准备 Yardstick 测试所需要的磁盘和镜像\n\n*NOTE*:当需要使用 openstack 的接口时必须先导入环境变量\n\n将下列配置将保存到 openrc 文本中\n\n```shell\nexport OS_PROJECT_DOMAIN_NAME=Default\nexport OS_USER_DOMAIN_NAME=Default\nexport OS_PROJECT_NAME=admin\nexport OS_USERNAME=admin\nexport OS_PASSWORD=admin\nexport OS_AUTH_URL=http://192.168.20.11:5000     #yardstick API接口的IP\nexport OS_IDENTITY_API_VERSION=3\nexport OS_IMAGE_API_VERSION=2\nexport EXTERNAL_NETWORK=admin_floating_net       #外网的网络名\n```\n\n使用 `source openrc`导入环境变量\n\n```shell\nsource openrc\n```\n\n\n\n在 Yardstick 容器中，Yardstick 存储库位于 /home/opnfv/repos 目录中。Yardstick 提供了一个 CLI 来准备 OpenStack 环境变量并自动创建 Yardstick 风格和访客镜像：\n\n### 2.1手动创建 Yardstick falvor 和 guest images\n\n在执行 Yardstick 测试用例之前，请确保在 OpenStack 中提供了 Yardstick falvor 和 guest images。有关创建 Yardstick falvor 和 guest images 的详细步骤，如下。\n\n使用如下命令创建一个名称为 yardstick-flavor ，编号为100，内存为512M，3G磁盘，1个cpu的主机配置。\n\n```shell\nnova flavor-create yardstick-flavor 100 512 3 1\n```\n\n|  参数  |    说明    |\n| :--: | :------: |\n| 100  | 创建镜像的ID  |\n| 512  |   内存大小   |\n|  3   | 磁盘大小 (G) |\n|  1   |  CPU数量   |\n\n![](http://i.imgur.com/EhW1nuk.jpg)\n\n### 2.2创建用于 Yardstick 测试的访客镜像\n\n首先安装额外的工具包\n\n```shell\nsudo apt-get update && sudo apt-get install -y qemu-utils kpartx\n```\n\n使用 Git 拉取 Yardstick 源码\n\n```shell\ngit clone https://gerrit.opnfv.org/gerrit/yardstick\n```\n\n使用 Yardstick 工具生成镜像\n\n```shell\ncd yardstick\nsudo ./tools/yardstick-img-modify tools/ubuntu-server-cloudimg-modify.sh\n```\n\n生成的镜像也加入到 Openstack 环境中\n\n```shell\nglance --os-image-api-version 1 image-create \\\n--name yardstick-image --is-public true \\\n--disk-format qcow2 --container-format bare \\\n--file /tmp/workspace/yardstick/yardstick-image.img\n```\n\n一些 Yardstick 的测试用例使用 Cirros 0.3.5 或者 Ubuntu 16.04 的镜像，也可以将这些镜像加入到 Openstack 环境中\n\n```shell\nopenstack image create \\\n--disk-format qcow2 \\\n--container-format bare \\\n--file $cirros_image_file \\\ncirros-0.3.5\n\nopenstack image create \\\n--disk-format qcow2 \\\n--container-format bare \\\n--file $ubuntu_image_file \\\nUbuntu-16.04\n```\n\n## 3.运行 Yardstick\n\n### 3.1启动 Yardstick 镜像\n\n```shell\ndocker run -itd --privileged -v /var/run/docker.sock:/var/run/docker.sock -p 8888:5000 -e INSTALLER_IP=192.168.20.5 -e INSTALLER_TYPE=fuel --name yardstick opnfv/yardstick:latest\n```\n\n**参数说明**\n\n|                    参数                    |                    说明                    |\n| :--------------------------------------: | :--------------------------------------: |\n|                   -itd                   | -i：交互式，即使不附加STDIN也会打开。 -t：分配伪TTY。 -d：在分离模式下，在后台运行容器。 |\n|               –privileged                |          使容器内的root用户拥有真正的root权限          |\n| -e INSTALLER_IP=192.168.20.5 <br /> -e INSTALLER_TYPE=fuel | INSTALLER_TYPE可选参数为Apex，Compass，Fuel和Joid。 如果使用其他安装程序（如devstack），则可以忽略这些参数。 |\n|               -p 8888:5000               | 如果需要在yardstick外使用yardstick容器需要加入该参数，将yardstick容器内的5000端口映射到宿主机的8888端口，如果宿主机的8888端口被占用可以换一个端口 |\n| -v /var/run/docker.sock:/var/run/docker.sock |                                          |\n|             –name yardstick              |                 创建的容器名称                  |\n\n### 3.2配置 Yardstick 容器环境\n\n首先需要先进入到 Yardstick 容器\n\n```shell\ndocker exec -it yardstick /bin/bash\n```\n\n随后开始配置环境\n\n引入环境配置将一下内容保存到 openrc 文件中，然后使用 `source openrc`\n\n```shell\nexport OS_PROJECT_DOMAIN_NAME=Default\nexport OS_USER_DOMAIN_NAME=Default\nexport OS_PROJECT_NAME=admin\nexport OS_USERNAME=admin\nexport OS_PASSWORD=admin\nexport OS_AUTH_URL=http://192.168.20.11:5000     #yardstick API接口的IP\nexport OS_IDENTITY_API_VERSION=3\nexport OS_IMAGE_API_VERSION=2\nexport EXTERNAL_NETWORK=admin_floating_net       #外网的网络名\n```\n\n### 3.3运行一个简单的测试例\n\n修改 ping.ymal文件\n\n```shell\ncd ~/repos/yardstick\nvim samples/ping.yaml\n```\n![](http://i.imgur.com/rvEEYJv.jpg)\n\n主要关注下图中绿色框内容，*image* 为测试的镜像名称，*flavor* 为生成的虚拟机配置，*user* 为虚拟机系统的登录用户名(cirros 镜像默认的用户名和密码为\"user:cirros  pass:cubswin:)\"，ubuntu 镜像用户名默认为\"ubuntu\")，测试用的vm实例创建后会使用创建时的密匙登录，因此也是不需要密码的，但是系统用户名必须一致。*network* 指生成的虚拟机所在的网段，即内网的网络。\n![ping 配置文件](http://i.imgur.com/ataU1pE.jpg)\n\n配置完 `ping.ymal`文件后，使用命令启动测试\n\n```shell\nyardstick -d task start samples/ping.yaml\n```\n\n测试结果会输出在`/tmp/yardstick.out`中，为了方便的查看测试结果，使用 influxdb 数据库和 Grafana 工具。\n\n## 4.安装 InfluxDB 和 Grafana\n\n官方给出的 `yardstick env influxdb` 和 `yardstick env grafana` 使用版本较低，建议手动安装和启动这两项服务\n\n完整的操作过程为:\n\n### 4.1配置 InfluxDB 环境\n\n使用 docker 安装并使用最新的 influxdb 版本\n\n```shell\ndocker pull tutum/influxdb\n```\n\n启动 influxdb 的 docker 环境\n\n```shell\ndocker run -d --name influxdb -p 8083:8083 -p 8086:8086 --expose 8090 --expose 8099 tutum/influxdb\ndocker exec -it influxdb bash  #进入 influxdb 的 docker 环境\n```\n\n配置 influxdb 数据库，增加 yardstick 表，便于后续存储 yardstick 测试结果\n\n```shell\ninflux\n>CREATE USER root WITH PASSWORD 'root' WITH ALL PRIVILEGES\n>CREATE DATABASE yardstick;\n>use yardstick;\n>show MEASUREMENTS;\n```\n\n在 Yardstick 的docker容器中使用如下命令测试 influxdb 数据库是否可用\n\n```shell\ncurl -i -X POST  http://192.168.20.14:8086/query --data-urlencode \"q=CREATE DATABASE mydb\"\n```\n\n`192.168.20.14`为 influxdb 运行所在的宿主机 IP 地址，上述命令的功能是使用 influxdb 的 http API 在数据库中创建一个数据库\n\n**NOTE**如果上述命令执行失败，则需要查看宿主机的 防火墙规则，使用`iptables -L -nv`查看 `Chain INPUT`规则，如果是 drop 则使用`iptables -P INPUT ACCEPT`将其改为accept\n\n### 4.2配置 Grafana 环境\n\n拉取 Grafana 在 docker 上的最新版\n\n```shell\ndocker pull grafana/grafana\n```\n\n```shell\ndocker run -d --name grafana -p 3000:3000 grafana/grafana\n```\n之后就可以在 http://host_ip:3000 (admin/admin) 查看\n\n如下图所示为三个环境容器都已经启动，因8888端口冲突所以将 Yardstick 的宿主机端口改为45678\n![](http://i.imgur.com/OKtO9SO.jpg)\n\n4.3配置 Yardstick 测试结果输出到 influxdb 数据库\n\n进入到 Yardstick 容器的环境\n\n```shell\ndocker exec -it yardstick bash\n```\n\n拷贝并修改 Yardstick 的配置\n\n```shell\ncp yardstick/etc/yardstick/yardstick.conf.sample /etc/yardstick/yardstick.conf\nvim /etc/yardstick/yardstick.conf\n```\n![](http://i.imgur.com/13WSHjN.jpg)\n\n\n修改*dispatcher*为*influxdb*，同时修改*influxdb*的IP地址，数据库名已经账号密码皆为4.1节所创建的。\n\n配置完成后运行`yardstick -d task start samples/ping.yaml`\n\n### 4.4在 Grafana 的web页面查看\n\n在浏览器输入 http://192.168.20.14:3000 (admin/admin)(本例中的 Grafana 宿主机地址是 192.168.20.14)\n\n点击左上角图标配置 data source，随后创建 dashboard 查看数据即可。\n\n![](http://i.imgur.com/teplLiT.jpg)\n\n\n\n## 5.删除 Yardstick 容器\n\n```shell\ndocker stop yardstick && docker rm yardstick\n```\n\n\n\n参考链接：\n\n1)https://docs.opnfv.org/en/stable-danube/submodules/yardstick/docs/testing/user/userguide/index.html\n\n\n\n","source":"_posts/OPNFV测试项目-yardstick.md","raw":"---\ntitle: OPNFV 测试项目 -- Yardstick\ndate: 2017-06-09 15:20:08\ntags:\n  - Yardstick\n  - OPNFV\n  - Openstack\ncategories:\n  - OPNFV\nkeywords:\n  - Yardstick\ndescription:\n  - OPNFV Yardstick 使用\n---\n\n**摘要**:本文主要介绍如何使用OPNFV的Yardstick测试项目的使用。\n\n<!--more-->\n\n## 1.使用 Docker 安装 Yardstick\n**官方推荐 Docker 运行 Yardstick 测试**\n\n### 1.1安装 Docker\n\n```shell\nwget -qO- https://get.docker.com/ | sh\n```\n\n拉取 Yardstick 最新版\n\n```shell\ndocker pull opnfv/yardstick:latest\n```\n\n查看下载的 Docker 镜像\n\n```shell\ndocker images\n```\n\n## 2.准备 Yardstick 测试所需要的磁盘和镜像\n\n*NOTE*:当需要使用 openstack 的接口时必须先导入环境变量\n\n将下列配置将保存到 openrc 文本中\n\n```shell\nexport OS_PROJECT_DOMAIN_NAME=Default\nexport OS_USER_DOMAIN_NAME=Default\nexport OS_PROJECT_NAME=admin\nexport OS_USERNAME=admin\nexport OS_PASSWORD=admin\nexport OS_AUTH_URL=http://192.168.20.11:5000     #yardstick API接口的IP\nexport OS_IDENTITY_API_VERSION=3\nexport OS_IMAGE_API_VERSION=2\nexport EXTERNAL_NETWORK=admin_floating_net       #外网的网络名\n```\n\n使用 `source openrc`导入环境变量\n\n```shell\nsource openrc\n```\n\n\n\n在 Yardstick 容器中，Yardstick 存储库位于 /home/opnfv/repos 目录中。Yardstick 提供了一个 CLI 来准备 OpenStack 环境变量并自动创建 Yardstick 风格和访客镜像：\n\n### 2.1手动创建 Yardstick falvor 和 guest images\n\n在执行 Yardstick 测试用例之前，请确保在 OpenStack 中提供了 Yardstick falvor 和 guest images。有关创建 Yardstick falvor 和 guest images 的详细步骤，如下。\n\n使用如下命令创建一个名称为 yardstick-flavor ，编号为100，内存为512M，3G磁盘，1个cpu的主机配置。\n\n```shell\nnova flavor-create yardstick-flavor 100 512 3 1\n```\n\n|  参数  |    说明    |\n| :--: | :------: |\n| 100  | 创建镜像的ID  |\n| 512  |   内存大小   |\n|  3   | 磁盘大小 (G) |\n|  1   |  CPU数量   |\n\n![](http://i.imgur.com/EhW1nuk.jpg)\n\n### 2.2创建用于 Yardstick 测试的访客镜像\n\n首先安装额外的工具包\n\n```shell\nsudo apt-get update && sudo apt-get install -y qemu-utils kpartx\n```\n\n使用 Git 拉取 Yardstick 源码\n\n```shell\ngit clone https://gerrit.opnfv.org/gerrit/yardstick\n```\n\n使用 Yardstick 工具生成镜像\n\n```shell\ncd yardstick\nsudo ./tools/yardstick-img-modify tools/ubuntu-server-cloudimg-modify.sh\n```\n\n生成的镜像也加入到 Openstack 环境中\n\n```shell\nglance --os-image-api-version 1 image-create \\\n--name yardstick-image --is-public true \\\n--disk-format qcow2 --container-format bare \\\n--file /tmp/workspace/yardstick/yardstick-image.img\n```\n\n一些 Yardstick 的测试用例使用 Cirros 0.3.5 或者 Ubuntu 16.04 的镜像，也可以将这些镜像加入到 Openstack 环境中\n\n```shell\nopenstack image create \\\n--disk-format qcow2 \\\n--container-format bare \\\n--file $cirros_image_file \\\ncirros-0.3.5\n\nopenstack image create \\\n--disk-format qcow2 \\\n--container-format bare \\\n--file $ubuntu_image_file \\\nUbuntu-16.04\n```\n\n## 3.运行 Yardstick\n\n### 3.1启动 Yardstick 镜像\n\n```shell\ndocker run -itd --privileged -v /var/run/docker.sock:/var/run/docker.sock -p 8888:5000 -e INSTALLER_IP=192.168.20.5 -e INSTALLER_TYPE=fuel --name yardstick opnfv/yardstick:latest\n```\n\n**参数说明**\n\n|                    参数                    |                    说明                    |\n| :--------------------------------------: | :--------------------------------------: |\n|                   -itd                   | -i：交互式，即使不附加STDIN也会打开。 -t：分配伪TTY。 -d：在分离模式下，在后台运行容器。 |\n|               –privileged                |          使容器内的root用户拥有真正的root权限          |\n| -e INSTALLER_IP=192.168.20.5 <br /> -e INSTALLER_TYPE=fuel | INSTALLER_TYPE可选参数为Apex，Compass，Fuel和Joid。 如果使用其他安装程序（如devstack），则可以忽略这些参数。 |\n|               -p 8888:5000               | 如果需要在yardstick外使用yardstick容器需要加入该参数，将yardstick容器内的5000端口映射到宿主机的8888端口，如果宿主机的8888端口被占用可以换一个端口 |\n| -v /var/run/docker.sock:/var/run/docker.sock |                                          |\n|             –name yardstick              |                 创建的容器名称                  |\n\n### 3.2配置 Yardstick 容器环境\n\n首先需要先进入到 Yardstick 容器\n\n```shell\ndocker exec -it yardstick /bin/bash\n```\n\n随后开始配置环境\n\n引入环境配置将一下内容保存到 openrc 文件中，然后使用 `source openrc`\n\n```shell\nexport OS_PROJECT_DOMAIN_NAME=Default\nexport OS_USER_DOMAIN_NAME=Default\nexport OS_PROJECT_NAME=admin\nexport OS_USERNAME=admin\nexport OS_PASSWORD=admin\nexport OS_AUTH_URL=http://192.168.20.11:5000     #yardstick API接口的IP\nexport OS_IDENTITY_API_VERSION=3\nexport OS_IMAGE_API_VERSION=2\nexport EXTERNAL_NETWORK=admin_floating_net       #外网的网络名\n```\n\n### 3.3运行一个简单的测试例\n\n修改 ping.ymal文件\n\n```shell\ncd ~/repos/yardstick\nvim samples/ping.yaml\n```\n![](http://i.imgur.com/rvEEYJv.jpg)\n\n主要关注下图中绿色框内容，*image* 为测试的镜像名称，*flavor* 为生成的虚拟机配置，*user* 为虚拟机系统的登录用户名(cirros 镜像默认的用户名和密码为\"user:cirros  pass:cubswin:)\"，ubuntu 镜像用户名默认为\"ubuntu\")，测试用的vm实例创建后会使用创建时的密匙登录，因此也是不需要密码的，但是系统用户名必须一致。*network* 指生成的虚拟机所在的网段，即内网的网络。\n![ping 配置文件](http://i.imgur.com/ataU1pE.jpg)\n\n配置完 `ping.ymal`文件后，使用命令启动测试\n\n```shell\nyardstick -d task start samples/ping.yaml\n```\n\n测试结果会输出在`/tmp/yardstick.out`中，为了方便的查看测试结果，使用 influxdb 数据库和 Grafana 工具。\n\n## 4.安装 InfluxDB 和 Grafana\n\n官方给出的 `yardstick env influxdb` 和 `yardstick env grafana` 使用版本较低，建议手动安装和启动这两项服务\n\n完整的操作过程为:\n\n### 4.1配置 InfluxDB 环境\n\n使用 docker 安装并使用最新的 influxdb 版本\n\n```shell\ndocker pull tutum/influxdb\n```\n\n启动 influxdb 的 docker 环境\n\n```shell\ndocker run -d --name influxdb -p 8083:8083 -p 8086:8086 --expose 8090 --expose 8099 tutum/influxdb\ndocker exec -it influxdb bash  #进入 influxdb 的 docker 环境\n```\n\n配置 influxdb 数据库，增加 yardstick 表，便于后续存储 yardstick 测试结果\n\n```shell\ninflux\n>CREATE USER root WITH PASSWORD 'root' WITH ALL PRIVILEGES\n>CREATE DATABASE yardstick;\n>use yardstick;\n>show MEASUREMENTS;\n```\n\n在 Yardstick 的docker容器中使用如下命令测试 influxdb 数据库是否可用\n\n```shell\ncurl -i -X POST  http://192.168.20.14:8086/query --data-urlencode \"q=CREATE DATABASE mydb\"\n```\n\n`192.168.20.14`为 influxdb 运行所在的宿主机 IP 地址，上述命令的功能是使用 influxdb 的 http API 在数据库中创建一个数据库\n\n**NOTE**如果上述命令执行失败，则需要查看宿主机的 防火墙规则，使用`iptables -L -nv`查看 `Chain INPUT`规则，如果是 drop 则使用`iptables -P INPUT ACCEPT`将其改为accept\n\n### 4.2配置 Grafana 环境\n\n拉取 Grafana 在 docker 上的最新版\n\n```shell\ndocker pull grafana/grafana\n```\n\n```shell\ndocker run -d --name grafana -p 3000:3000 grafana/grafana\n```\n之后就可以在 http://host_ip:3000 (admin/admin) 查看\n\n如下图所示为三个环境容器都已经启动，因8888端口冲突所以将 Yardstick 的宿主机端口改为45678\n![](http://i.imgur.com/OKtO9SO.jpg)\n\n4.3配置 Yardstick 测试结果输出到 influxdb 数据库\n\n进入到 Yardstick 容器的环境\n\n```shell\ndocker exec -it yardstick bash\n```\n\n拷贝并修改 Yardstick 的配置\n\n```shell\ncp yardstick/etc/yardstick/yardstick.conf.sample /etc/yardstick/yardstick.conf\nvim /etc/yardstick/yardstick.conf\n```\n![](http://i.imgur.com/13WSHjN.jpg)\n\n\n修改*dispatcher*为*influxdb*，同时修改*influxdb*的IP地址，数据库名已经账号密码皆为4.1节所创建的。\n\n配置完成后运行`yardstick -d task start samples/ping.yaml`\n\n### 4.4在 Grafana 的web页面查看\n\n在浏览器输入 http://192.168.20.14:3000 (admin/admin)(本例中的 Grafana 宿主机地址是 192.168.20.14)\n\n点击左上角图标配置 data source，随后创建 dashboard 查看数据即可。\n\n![](http://i.imgur.com/teplLiT.jpg)\n\n\n\n## 5.删除 Yardstick 容器\n\n```shell\ndocker stop yardstick && docker rm yardstick\n```\n\n\n\n参考链接：\n\n1)https://docs.opnfv.org/en/stable-danube/submodules/yardstick/docs/testing/user/userguide/index.html\n\n\n\n","slug":"OPNFV测试项目-yardstick","published":1,"updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2w8000b6ijxrddiq5fp","content":"<p><strong>摘要</strong>:本文主要介绍如何使用OPNFV的Yardstick测试项目的使用。</p>\n<a id=\"more\"></a>\n<h2 id=\"1-使用-Docker-安装-Yardstick\"><a href=\"#1-使用-Docker-安装-Yardstick\" class=\"headerlink\" title=\"1.使用 Docker 安装 Yardstick\"></a>1.使用 Docker 安装 Yardstick</h2><p><strong>官方推荐 Docker 运行 Yardstick 测试</strong></p>\n<h3 id=\"1-1安装-Docker\"><a href=\"#1-1安装-Docker\" class=\"headerlink\" title=\"1.1安装 Docker\"></a>1.1安装 Docker</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO- https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>\n<p>拉取 Yardstick 最新版</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull opnfv/yardstick:latest</span><br></pre></td></tr></table></figure>\n<p>查看下载的 Docker 镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-准备-Yardstick-测试所需要的磁盘和镜像\"><a href=\"#2-准备-Yardstick-测试所需要的磁盘和镜像\" class=\"headerlink\" title=\"2.准备 Yardstick 测试所需要的磁盘和镜像\"></a>2.准备 Yardstick 测试所需要的磁盘和镜像</h2><p><em>NOTE</em>:当需要使用 openstack 的接口时必须先导入环境变量</p>\n<p>将下列配置将保存到 openrc 文本中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class=\"line\">export OS_USER_DOMAIN_NAME=Default</span><br><span class=\"line\">export OS_PROJECT_NAME=admin</span><br><span class=\"line\">export OS_USERNAME=admin</span><br><span class=\"line\">export OS_PASSWORD=admin</span><br><span class=\"line\">export OS_AUTH_URL=http://192.168.20.11:5000     #yardstick API接口的IP</span><br><span class=\"line\">export OS_IDENTITY_API_VERSION=3</span><br><span class=\"line\">export OS_IMAGE_API_VERSION=2</span><br><span class=\"line\">export EXTERNAL_NETWORK=admin_floating_net       #外网的网络名</span><br></pre></td></tr></table></figure>\n<p>使用 <code>source openrc</code>导入环境变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source openrc</span><br></pre></td></tr></table></figure>\n<p>在 Yardstick 容器中，Yardstick 存储库位于 /home/opnfv/repos 目录中。Yardstick 提供了一个 CLI 来准备 OpenStack 环境变量并自动创建 Yardstick 风格和访客镜像：</p>\n<h3 id=\"2-1手动创建-Yardstick-falvor-和-guest-images\"><a href=\"#2-1手动创建-Yardstick-falvor-和-guest-images\" class=\"headerlink\" title=\"2.1手动创建 Yardstick falvor 和 guest images\"></a>2.1手动创建 Yardstick falvor 和 guest images</h3><p>在执行 Yardstick 测试用例之前，请确保在 OpenStack 中提供了 Yardstick falvor 和 guest images。有关创建 Yardstick falvor 和 guest images 的详细步骤，如下。</p>\n<p>使用如下命令创建一个名称为 yardstick-flavor ，编号为100，内存为512M，3G磁盘，1个cpu的主机配置。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nova flavor-create yardstick-flavor 100 512 3 1</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">100</td>\n<td style=\"text-align:center\">创建镜像的ID</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">512</td>\n<td style=\"text-align:center\">内存大小</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">磁盘大小 (G)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">CPU数量</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"http://i.imgur.com/EhW1nuk.jpg\" alt=\"\"></p>\n<h3 id=\"2-2创建用于-Yardstick-测试的访客镜像\"><a href=\"#2-2创建用于-Yardstick-测试的访客镜像\" class=\"headerlink\" title=\"2.2创建用于 Yardstick 测试的访客镜像\"></a>2.2创建用于 Yardstick 测试的访客镜像</h3><p>首先安装额外的工具包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update &amp;&amp; sudo apt-get install -y qemu-utils kpartx</span><br></pre></td></tr></table></figure>\n<p>使用 Git 拉取 Yardstick 源码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://gerrit.opnfv.org/gerrit/yardstick</span><br></pre></td></tr></table></figure>\n<p>使用 Yardstick 工具生成镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd yardstick</span><br><span class=\"line\">sudo ./tools/yardstick-img-modify tools/ubuntu-server-cloudimg-modify.sh</span><br></pre></td></tr></table></figure>\n<p>生成的镜像也加入到 Openstack 环境中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glance --os-image-api-version 1 image-create \\</span><br><span class=\"line\">--name yardstick-image --is-public true \\</span><br><span class=\"line\">--disk-format qcow2 --container-format bare \\</span><br><span class=\"line\">--file /tmp/workspace/yardstick/yardstick-image.img</span><br></pre></td></tr></table></figure>\n<p>一些 Yardstick 的测试用例使用 Cirros 0.3.5 或者 Ubuntu 16.04 的镜像，也可以将这些镜像加入到 Openstack 环境中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openstack image create \\</span><br><span class=\"line\">--disk-format qcow2 \\</span><br><span class=\"line\">--container-format bare \\</span><br><span class=\"line\">--file $cirros_image_file \\</span><br><span class=\"line\">cirros-0.3.5</span><br><span class=\"line\"></span><br><span class=\"line\">openstack image create \\</span><br><span class=\"line\">--disk-format qcow2 \\</span><br><span class=\"line\">--container-format bare \\</span><br><span class=\"line\">--file $ubuntu_image_file \\</span><br><span class=\"line\">Ubuntu-16.04</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-运行-Yardstick\"><a href=\"#3-运行-Yardstick\" class=\"headerlink\" title=\"3.运行 Yardstick\"></a>3.运行 Yardstick</h2><h3 id=\"3-1启动-Yardstick-镜像\"><a href=\"#3-1启动-Yardstick-镜像\" class=\"headerlink\" title=\"3.1启动 Yardstick 镜像\"></a>3.1启动 Yardstick 镜像</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd --privileged -v /var/run/docker.sock:/var/run/docker.sock -p 8888:5000 -e INSTALLER_IP=192.168.20.5 -e INSTALLER_TYPE=fuel --name yardstick opnfv/yardstick:latest</span><br></pre></td></tr></table></figure>\n<p><strong>参数说明</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-itd</td>\n<td style=\"text-align:center\">-i：交互式，即使不附加STDIN也会打开。 -t：分配伪TTY。 -d：在分离模式下，在后台运行容器。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">–privileged</td>\n<td style=\"text-align:center\">使容器内的root用户拥有真正的root权限</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-e INSTALLER_IP=192.168.20.5 <br> -e INSTALLER_TYPE=fuel</td>\n<td style=\"text-align:center\">INSTALLER_TYPE可选参数为Apex，Compass，Fuel和Joid。 如果使用其他安装程序（如devstack），则可以忽略这些参数。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-p 8888:5000</td>\n<td style=\"text-align:center\">如果需要在yardstick外使用yardstick容器需要加入该参数，将yardstick容器内的5000端口映射到宿主机的8888端口，如果宿主机的8888端口被占用可以换一个端口</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-v /var/run/docker.sock:/var/run/docker.sock</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">–name yardstick</td>\n<td style=\"text-align:center\">创建的容器名称</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3-2配置-Yardstick-容器环境\"><a href=\"#3-2配置-Yardstick-容器环境\" class=\"headerlink\" title=\"3.2配置 Yardstick 容器环境\"></a>3.2配置 Yardstick 容器环境</h3><p>首先需要先进入到 Yardstick 容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it yardstick /bin/bash</span><br></pre></td></tr></table></figure>\n<p>随后开始配置环境</p>\n<p>引入环境配置将一下内容保存到 openrc 文件中，然后使用 <code>source openrc</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class=\"line\">export OS_USER_DOMAIN_NAME=Default</span><br><span class=\"line\">export OS_PROJECT_NAME=admin</span><br><span class=\"line\">export OS_USERNAME=admin</span><br><span class=\"line\">export OS_PASSWORD=admin</span><br><span class=\"line\">export OS_AUTH_URL=http://192.168.20.11:5000     #yardstick API接口的IP</span><br><span class=\"line\">export OS_IDENTITY_API_VERSION=3</span><br><span class=\"line\">export OS_IMAGE_API_VERSION=2</span><br><span class=\"line\">export EXTERNAL_NETWORK=admin_floating_net       #外网的网络名</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3运行一个简单的测试例\"><a href=\"#3-3运行一个简单的测试例\" class=\"headerlink\" title=\"3.3运行一个简单的测试例\"></a>3.3运行一个简单的测试例</h3><p>修改 ping.ymal文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/repos/yardstick</span><br><span class=\"line\">vim samples/ping.yaml</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://i.imgur.com/rvEEYJv.jpg\" alt=\"\"></p>\n<p>主要关注下图中绿色框内容，<em>image</em> 为测试的镜像名称，<em>flavor</em> 为生成的虚拟机配置，<em>user</em> 为虚拟机系统的登录用户名(cirros 镜像默认的用户名和密码为”user:cirros  pass:cubswin:)”，ubuntu 镜像用户名默认为”ubuntu”)，测试用的vm实例创建后会使用创建时的密匙登录，因此也是不需要密码的，但是系统用户名必须一致。<em>network</em> 指生成的虚拟机所在的网段，即内网的网络。<br><img src=\"http://i.imgur.com/ataU1pE.jpg\" alt=\"ping 配置文件\"></p>\n<p>配置完 <code>ping.ymal</code>文件后，使用命令启动测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yardstick -d task start samples/ping.yaml</span><br></pre></td></tr></table></figure>\n<p>测试结果会输出在<code>/tmp/yardstick.out</code>中，为了方便的查看测试结果，使用 influxdb 数据库和 Grafana 工具。</p>\n<h2 id=\"4-安装-InfluxDB-和-Grafana\"><a href=\"#4-安装-InfluxDB-和-Grafana\" class=\"headerlink\" title=\"4.安装 InfluxDB 和 Grafana\"></a>4.安装 InfluxDB 和 Grafana</h2><p>官方给出的 <code>yardstick env influxdb</code> 和 <code>yardstick env grafana</code> 使用版本较低，建议手动安装和启动这两项服务</p>\n<p>完整的操作过程为:</p>\n<h3 id=\"4-1配置-InfluxDB-环境\"><a href=\"#4-1配置-InfluxDB-环境\" class=\"headerlink\" title=\"4.1配置 InfluxDB 环境\"></a>4.1配置 InfluxDB 环境</h3><p>使用 docker 安装并使用最新的 influxdb 版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull tutum/influxdb</span><br></pre></td></tr></table></figure>\n<p>启动 influxdb 的 docker 环境</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name influxdb -p 8083:8083 -p 8086:8086 --expose 8090 --expose 8099 tutum/influxdb</span><br><span class=\"line\">docker exec -it influxdb bash  #进入 influxdb 的 docker 环境</span><br></pre></td></tr></table></figure>\n<p>配置 influxdb 数据库，增加 yardstick 表，便于后续存储 yardstick 测试结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">influx</span><br><span class=\"line\"><span class=\"meta\">&gt;</span>CREATE USER root WITH PASSWORD 'root' WITH ALL PRIVILEGES</span><br><span class=\"line\"><span class=\"meta\">&gt;</span>CREATE DATABASE yardstick;</span><br><span class=\"line\"><span class=\"meta\">&gt;</span>use yardstick;</span><br><span class=\"line\"><span class=\"meta\">&gt;</span>show MEASUREMENTS;</span><br></pre></td></tr></table></figure>\n<p>在 Yardstick 的docker容器中使用如下命令测试 influxdb 数据库是否可用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -i -X POST  http://192.168.20.14:8086/query --data-urlencode \"q=CREATE DATABASE mydb\"</span><br></pre></td></tr></table></figure>\n<p><code>192.168.20.14</code>为 influxdb 运行所在的宿主机 IP 地址，上述命令的功能是使用 influxdb 的 http API 在数据库中创建一个数据库</p>\n<p><strong>NOTE</strong>如果上述命令执行失败，则需要查看宿主机的 防火墙规则，使用<code>iptables -L -nv</code>查看 <code>Chain INPUT</code>规则，如果是 drop 则使用<code>iptables -P INPUT ACCEPT</code>将其改为accept</p>\n<h3 id=\"4-2配置-Grafana-环境\"><a href=\"#4-2配置-Grafana-环境\" class=\"headerlink\" title=\"4.2配置 Grafana 环境\"></a>4.2配置 Grafana 环境</h3><p>拉取 Grafana 在 docker 上的最新版</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull grafana/grafana</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name grafana -p 3000:3000 grafana/grafana</span><br></pre></td></tr></table></figure>\n<p>之后就可以在 <a href=\"http://host_ip:3000\" target=\"_blank\" rel=\"noopener\">http://host_ip:3000</a> (admin/admin) 查看</p>\n<p>如下图所示为三个环境容器都已经启动，因8888端口冲突所以将 Yardstick 的宿主机端口改为45678<br><img src=\"http://i.imgur.com/OKtO9SO.jpg\" alt=\"\"></p>\n<p>4.3配置 Yardstick 测试结果输出到 influxdb 数据库</p>\n<p>进入到 Yardstick 容器的环境</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it yardstick bash</span><br></pre></td></tr></table></figure>\n<p>拷贝并修改 Yardstick 的配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp yardstick/etc/yardstick/yardstick.conf.sample /etc/yardstick/yardstick.conf</span><br><span class=\"line\">vim /etc/yardstick/yardstick.conf</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://i.imgur.com/13WSHjN.jpg\" alt=\"\"></p>\n<p>修改<em>dispatcher</em>为<em>influxdb</em>，同时修改<em>influxdb</em>的IP地址，数据库名已经账号密码皆为4.1节所创建的。</p>\n<p>配置完成后运行<code>yardstick -d task start samples/ping.yaml</code></p>\n<h3 id=\"4-4在-Grafana-的web页面查看\"><a href=\"#4-4在-Grafana-的web页面查看\" class=\"headerlink\" title=\"4.4在 Grafana 的web页面查看\"></a>4.4在 Grafana 的web页面查看</h3><p>在浏览器输入 <a href=\"http://192.168.20.14:3000\" target=\"_blank\" rel=\"noopener\">http://192.168.20.14:3000</a> (admin/admin)(本例中的 Grafana 宿主机地址是 192.168.20.14)</p>\n<p>点击左上角图标配置 data source，随后创建 dashboard 查看数据即可。</p>\n<p><img src=\"http://i.imgur.com/teplLiT.jpg\" alt=\"\"></p>\n<h2 id=\"5-删除-Yardstick-容器\"><a href=\"#5-删除-Yardstick-容器\" class=\"headerlink\" title=\"5.删除 Yardstick 容器\"></a>5.删除 Yardstick 容器</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop yardstick &amp;&amp; docker rm yardstick</span><br></pre></td></tr></table></figure>\n<p>参考链接：</p>\n<p>1)<a href=\"https://docs.opnfv.org/en/stable-danube/submodules/yardstick/docs/testing/user/userguide/index.html\" target=\"_blank\" rel=\"noopener\">https://docs.opnfv.org/en/stable-danube/submodules/yardstick/docs/testing/user/userguide/index.html</a></p>\n","site":{"data":{}},"excerpt":"<p><strong>摘要</strong>:本文主要介绍如何使用OPNFV的Yardstick测试项目的使用。</p>","more":"<h2 id=\"1-使用-Docker-安装-Yardstick\"><a href=\"#1-使用-Docker-安装-Yardstick\" class=\"headerlink\" title=\"1.使用 Docker 安装 Yardstick\"></a>1.使用 Docker 安装 Yardstick</h2><p><strong>官方推荐 Docker 运行 Yardstick 测试</strong></p>\n<h3 id=\"1-1安装-Docker\"><a href=\"#1-1安装-Docker\" class=\"headerlink\" title=\"1.1安装 Docker\"></a>1.1安装 Docker</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO- https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>\n<p>拉取 Yardstick 最新版</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull opnfv/yardstick:latest</span><br></pre></td></tr></table></figure>\n<p>查看下载的 Docker 镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-准备-Yardstick-测试所需要的磁盘和镜像\"><a href=\"#2-准备-Yardstick-测试所需要的磁盘和镜像\" class=\"headerlink\" title=\"2.准备 Yardstick 测试所需要的磁盘和镜像\"></a>2.准备 Yardstick 测试所需要的磁盘和镜像</h2><p><em>NOTE</em>:当需要使用 openstack 的接口时必须先导入环境变量</p>\n<p>将下列配置将保存到 openrc 文本中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class=\"line\">export OS_USER_DOMAIN_NAME=Default</span><br><span class=\"line\">export OS_PROJECT_NAME=admin</span><br><span class=\"line\">export OS_USERNAME=admin</span><br><span class=\"line\">export OS_PASSWORD=admin</span><br><span class=\"line\">export OS_AUTH_URL=http://192.168.20.11:5000     #yardstick API接口的IP</span><br><span class=\"line\">export OS_IDENTITY_API_VERSION=3</span><br><span class=\"line\">export OS_IMAGE_API_VERSION=2</span><br><span class=\"line\">export EXTERNAL_NETWORK=admin_floating_net       #外网的网络名</span><br></pre></td></tr></table></figure>\n<p>使用 <code>source openrc</code>导入环境变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source openrc</span><br></pre></td></tr></table></figure>\n<p>在 Yardstick 容器中，Yardstick 存储库位于 /home/opnfv/repos 目录中。Yardstick 提供了一个 CLI 来准备 OpenStack 环境变量并自动创建 Yardstick 风格和访客镜像：</p>\n<h3 id=\"2-1手动创建-Yardstick-falvor-和-guest-images\"><a href=\"#2-1手动创建-Yardstick-falvor-和-guest-images\" class=\"headerlink\" title=\"2.1手动创建 Yardstick falvor 和 guest images\"></a>2.1手动创建 Yardstick falvor 和 guest images</h3><p>在执行 Yardstick 测试用例之前，请确保在 OpenStack 中提供了 Yardstick falvor 和 guest images。有关创建 Yardstick falvor 和 guest images 的详细步骤，如下。</p>\n<p>使用如下命令创建一个名称为 yardstick-flavor ，编号为100，内存为512M，3G磁盘，1个cpu的主机配置。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nova flavor-create yardstick-flavor 100 512 3 1</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">100</td>\n<td style=\"text-align:center\">创建镜像的ID</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">512</td>\n<td style=\"text-align:center\">内存大小</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">磁盘大小 (G)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">CPU数量</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"http://i.imgur.com/EhW1nuk.jpg\" alt=\"\"></p>\n<h3 id=\"2-2创建用于-Yardstick-测试的访客镜像\"><a href=\"#2-2创建用于-Yardstick-测试的访客镜像\" class=\"headerlink\" title=\"2.2创建用于 Yardstick 测试的访客镜像\"></a>2.2创建用于 Yardstick 测试的访客镜像</h3><p>首先安装额外的工具包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update &amp;&amp; sudo apt-get install -y qemu-utils kpartx</span><br></pre></td></tr></table></figure>\n<p>使用 Git 拉取 Yardstick 源码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://gerrit.opnfv.org/gerrit/yardstick</span><br></pre></td></tr></table></figure>\n<p>使用 Yardstick 工具生成镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd yardstick</span><br><span class=\"line\">sudo ./tools/yardstick-img-modify tools/ubuntu-server-cloudimg-modify.sh</span><br></pre></td></tr></table></figure>\n<p>生成的镜像也加入到 Openstack 环境中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glance --os-image-api-version 1 image-create \\</span><br><span class=\"line\">--name yardstick-image --is-public true \\</span><br><span class=\"line\">--disk-format qcow2 --container-format bare \\</span><br><span class=\"line\">--file /tmp/workspace/yardstick/yardstick-image.img</span><br></pre></td></tr></table></figure>\n<p>一些 Yardstick 的测试用例使用 Cirros 0.3.5 或者 Ubuntu 16.04 的镜像，也可以将这些镜像加入到 Openstack 环境中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openstack image create \\</span><br><span class=\"line\">--disk-format qcow2 \\</span><br><span class=\"line\">--container-format bare \\</span><br><span class=\"line\">--file $cirros_image_file \\</span><br><span class=\"line\">cirros-0.3.5</span><br><span class=\"line\"></span><br><span class=\"line\">openstack image create \\</span><br><span class=\"line\">--disk-format qcow2 \\</span><br><span class=\"line\">--container-format bare \\</span><br><span class=\"line\">--file $ubuntu_image_file \\</span><br><span class=\"line\">Ubuntu-16.04</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-运行-Yardstick\"><a href=\"#3-运行-Yardstick\" class=\"headerlink\" title=\"3.运行 Yardstick\"></a>3.运行 Yardstick</h2><h3 id=\"3-1启动-Yardstick-镜像\"><a href=\"#3-1启动-Yardstick-镜像\" class=\"headerlink\" title=\"3.1启动 Yardstick 镜像\"></a>3.1启动 Yardstick 镜像</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd --privileged -v /var/run/docker.sock:/var/run/docker.sock -p 8888:5000 -e INSTALLER_IP=192.168.20.5 -e INSTALLER_TYPE=fuel --name yardstick opnfv/yardstick:latest</span><br></pre></td></tr></table></figure>\n<p><strong>参数说明</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-itd</td>\n<td style=\"text-align:center\">-i：交互式，即使不附加STDIN也会打开。 -t：分配伪TTY。 -d：在分离模式下，在后台运行容器。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">–privileged</td>\n<td style=\"text-align:center\">使容器内的root用户拥有真正的root权限</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-e INSTALLER_IP=192.168.20.5 <br> -e INSTALLER_TYPE=fuel</td>\n<td style=\"text-align:center\">INSTALLER_TYPE可选参数为Apex，Compass，Fuel和Joid。 如果使用其他安装程序（如devstack），则可以忽略这些参数。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-p 8888:5000</td>\n<td style=\"text-align:center\">如果需要在yardstick外使用yardstick容器需要加入该参数，将yardstick容器内的5000端口映射到宿主机的8888端口，如果宿主机的8888端口被占用可以换一个端口</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-v /var/run/docker.sock:/var/run/docker.sock</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">–name yardstick</td>\n<td style=\"text-align:center\">创建的容器名称</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3-2配置-Yardstick-容器环境\"><a href=\"#3-2配置-Yardstick-容器环境\" class=\"headerlink\" title=\"3.2配置 Yardstick 容器环境\"></a>3.2配置 Yardstick 容器环境</h3><p>首先需要先进入到 Yardstick 容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it yardstick /bin/bash</span><br></pre></td></tr></table></figure>\n<p>随后开始配置环境</p>\n<p>引入环境配置将一下内容保存到 openrc 文件中，然后使用 <code>source openrc</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class=\"line\">export OS_USER_DOMAIN_NAME=Default</span><br><span class=\"line\">export OS_PROJECT_NAME=admin</span><br><span class=\"line\">export OS_USERNAME=admin</span><br><span class=\"line\">export OS_PASSWORD=admin</span><br><span class=\"line\">export OS_AUTH_URL=http://192.168.20.11:5000     #yardstick API接口的IP</span><br><span class=\"line\">export OS_IDENTITY_API_VERSION=3</span><br><span class=\"line\">export OS_IMAGE_API_VERSION=2</span><br><span class=\"line\">export EXTERNAL_NETWORK=admin_floating_net       #外网的网络名</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3运行一个简单的测试例\"><a href=\"#3-3运行一个简单的测试例\" class=\"headerlink\" title=\"3.3运行一个简单的测试例\"></a>3.3运行一个简单的测试例</h3><p>修改 ping.ymal文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/repos/yardstick</span><br><span class=\"line\">vim samples/ping.yaml</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://i.imgur.com/rvEEYJv.jpg\" alt=\"\"></p>\n<p>主要关注下图中绿色框内容，<em>image</em> 为测试的镜像名称，<em>flavor</em> 为生成的虚拟机配置，<em>user</em> 为虚拟机系统的登录用户名(cirros 镜像默认的用户名和密码为”user:cirros  pass:cubswin:)”，ubuntu 镜像用户名默认为”ubuntu”)，测试用的vm实例创建后会使用创建时的密匙登录，因此也是不需要密码的，但是系统用户名必须一致。<em>network</em> 指生成的虚拟机所在的网段，即内网的网络。<br><img src=\"http://i.imgur.com/ataU1pE.jpg\" alt=\"ping 配置文件\"></p>\n<p>配置完 <code>ping.ymal</code>文件后，使用命令启动测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yardstick -d task start samples/ping.yaml</span><br></pre></td></tr></table></figure>\n<p>测试结果会输出在<code>/tmp/yardstick.out</code>中，为了方便的查看测试结果，使用 influxdb 数据库和 Grafana 工具。</p>\n<h2 id=\"4-安装-InfluxDB-和-Grafana\"><a href=\"#4-安装-InfluxDB-和-Grafana\" class=\"headerlink\" title=\"4.安装 InfluxDB 和 Grafana\"></a>4.安装 InfluxDB 和 Grafana</h2><p>官方给出的 <code>yardstick env influxdb</code> 和 <code>yardstick env grafana</code> 使用版本较低，建议手动安装和启动这两项服务</p>\n<p>完整的操作过程为:</p>\n<h3 id=\"4-1配置-InfluxDB-环境\"><a href=\"#4-1配置-InfluxDB-环境\" class=\"headerlink\" title=\"4.1配置 InfluxDB 环境\"></a>4.1配置 InfluxDB 环境</h3><p>使用 docker 安装并使用最新的 influxdb 版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull tutum/influxdb</span><br></pre></td></tr></table></figure>\n<p>启动 influxdb 的 docker 环境</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name influxdb -p 8083:8083 -p 8086:8086 --expose 8090 --expose 8099 tutum/influxdb</span><br><span class=\"line\">docker exec -it influxdb bash  #进入 influxdb 的 docker 环境</span><br></pre></td></tr></table></figure>\n<p>配置 influxdb 数据库，增加 yardstick 表，便于后续存储 yardstick 测试结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">influx</span><br><span class=\"line\"><span class=\"meta\">&gt;</span>CREATE USER root WITH PASSWORD 'root' WITH ALL PRIVILEGES</span><br><span class=\"line\"><span class=\"meta\">&gt;</span>CREATE DATABASE yardstick;</span><br><span class=\"line\"><span class=\"meta\">&gt;</span>use yardstick;</span><br><span class=\"line\"><span class=\"meta\">&gt;</span>show MEASUREMENTS;</span><br></pre></td></tr></table></figure>\n<p>在 Yardstick 的docker容器中使用如下命令测试 influxdb 数据库是否可用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -i -X POST  http://192.168.20.14:8086/query --data-urlencode \"q=CREATE DATABASE mydb\"</span><br></pre></td></tr></table></figure>\n<p><code>192.168.20.14</code>为 influxdb 运行所在的宿主机 IP 地址，上述命令的功能是使用 influxdb 的 http API 在数据库中创建一个数据库</p>\n<p><strong>NOTE</strong>如果上述命令执行失败，则需要查看宿主机的 防火墙规则，使用<code>iptables -L -nv</code>查看 <code>Chain INPUT</code>规则，如果是 drop 则使用<code>iptables -P INPUT ACCEPT</code>将其改为accept</p>\n<h3 id=\"4-2配置-Grafana-环境\"><a href=\"#4-2配置-Grafana-环境\" class=\"headerlink\" title=\"4.2配置 Grafana 环境\"></a>4.2配置 Grafana 环境</h3><p>拉取 Grafana 在 docker 上的最新版</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull grafana/grafana</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name grafana -p 3000:3000 grafana/grafana</span><br></pre></td></tr></table></figure>\n<p>之后就可以在 <a href=\"http://host_ip:3000\" target=\"_blank\" rel=\"noopener\">http://host_ip:3000</a> (admin/admin) 查看</p>\n<p>如下图所示为三个环境容器都已经启动，因8888端口冲突所以将 Yardstick 的宿主机端口改为45678<br><img src=\"http://i.imgur.com/OKtO9SO.jpg\" alt=\"\"></p>\n<p>4.3配置 Yardstick 测试结果输出到 influxdb 数据库</p>\n<p>进入到 Yardstick 容器的环境</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it yardstick bash</span><br></pre></td></tr></table></figure>\n<p>拷贝并修改 Yardstick 的配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp yardstick/etc/yardstick/yardstick.conf.sample /etc/yardstick/yardstick.conf</span><br><span class=\"line\">vim /etc/yardstick/yardstick.conf</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://i.imgur.com/13WSHjN.jpg\" alt=\"\"></p>\n<p>修改<em>dispatcher</em>为<em>influxdb</em>，同时修改<em>influxdb</em>的IP地址，数据库名已经账号密码皆为4.1节所创建的。</p>\n<p>配置完成后运行<code>yardstick -d task start samples/ping.yaml</code></p>\n<h3 id=\"4-4在-Grafana-的web页面查看\"><a href=\"#4-4在-Grafana-的web页面查看\" class=\"headerlink\" title=\"4.4在 Grafana 的web页面查看\"></a>4.4在 Grafana 的web页面查看</h3><p>在浏览器输入 <a href=\"http://192.168.20.14:3000\" target=\"_blank\" rel=\"noopener\">http://192.168.20.14:3000</a> (admin/admin)(本例中的 Grafana 宿主机地址是 192.168.20.14)</p>\n<p>点击左上角图标配置 data source，随后创建 dashboard 查看数据即可。</p>\n<p><img src=\"http://i.imgur.com/teplLiT.jpg\" alt=\"\"></p>\n<h2 id=\"5-删除-Yardstick-容器\"><a href=\"#5-删除-Yardstick-容器\" class=\"headerlink\" title=\"5.删除 Yardstick 容器\"></a>5.删除 Yardstick 容器</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop yardstick &amp;&amp; docker rm yardstick</span><br></pre></td></tr></table></figure>\n<p>参考链接：</p>\n<p>1)<a href=\"https://docs.opnfv.org/en/stable-danube/submodules/yardstick/docs/testing/user/userguide/index.html\" target=\"_blank\" rel=\"noopener\">https://docs.opnfv.org/en/stable-danube/submodules/yardstick/docs/testing/user/userguide/index.html</a></p>"},{"title":"如何搭建 hexo 博客","date":"2017-06-09T07:20:08.000Z","keywords":["blog"],"description":["hexo 建立博客"],"top":null,"_content":"\n**摘要**:本文主要介绍如何使用hexo建立自己的博客。\n\n<!--more-->\n\n## 1 安装node.js\n\n```shell\nwget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\n安装完成后执行：`nvm install stable`, 即可安装node.js。\n\n使用npm命令安装hexo\n\n```shell\nnpm install -g hexo-cli\n```\n\n安装完成之后，使用`hexo --version`查看hexo是否正确安装。\n\n![hexo 安装](http://i.imgur.com/OsK3uSC.jpg)\n\n【PS】目前npm官方源在国内访问并不稳定，如果无法直接安装，请更换国内npm源。执行以下命令更换淘宝npm源\n\n```shell\nnpm config set registry https://registry.npm.taobao.org\n```\n\n## 2 安装git\n\n已经安装过git跳过此步骤\n\ndebian/ubuntu使用：\n\n```shell\nsudo apt-get install git-core\n```\n\n## 3 hexo使用\n\n### 3.1 初始化一个站点\n\n```shell\nhexo init louie_blog\n```\n\n此命令用于执行站点的初始化。执行后，folder文件夹会成为一个Hexo站点文件夹，执行过程中涉及安装多个nodejs模块包以及git clone操作。\n\n![hexo初始化站点](http://i.imgur.com/zzPkjDZ.jpg)\n\n在初始化一个hexo站点文件夹之后，该文件夹的目录结构如下：\n\n![hexo目录结构](http://i.imgur.com/72R8bGc.jpg)\n\n详细说明如下：\n\n- 1、`_config.yml`是YAML格式文件，也是Hexo的站点配置文件（敲黑板！重点重点！）\n- 2、node_modules包含使用Hexo需要的其他node.js模块，以后安装的hexo相关模块也放在这里\n- 3、package.json配置hexo运行需要的node.js包，不用手动更改（PS：通常不需要干预它，不过其中有一条\"name\": \"hexo-site\"起着告诉hexo该文件夹是hexo站点的作用，因此更加不要修改该文件内容，安装hexo其他模块也依赖该文件）\n- 4、scaffolds是模板文件夹，不过这里的“模板”概念没有那么高端。这个“模板”就是指新建的markdown文件的模板，每新建一个markdown文件（由于Hexo使用markdown语法，在渲染生成静态HTML页面之前，源文件都是markdown文件），就会包含对应模板的内容。该文件夹内有三个模板：draft.md，草稿的模板page.md，页面的模板post.md，文章的模板\n- 5、source是源文件文件夹，此处存有渲染生成静态页面需要的所有源文件，包括markdown文件、图片文件。默认此文件夹下只有一个`_post`文件夹，存放文章的markdown源文件。每个页面有一个以该页面命名的文件夹，也存放在source文件夹下。该文件夹下除了`_post`外，所有以下划线开头的或以.开头的文件夹都会被忽略。\n- 6、themes是主题文件夹，Hexo的主题作用与WordPress相同。\n- 7、public文件夹，默认没有，存放生成的静态文件。\n\n打开`_config.yml` 修改配置：\n\n```yaml\ntitle: Hexo #站点的标题\nsubtitle: #站点的副标题\ndescription: #站点的描述，写一段话来介绍你的博客吧:)，主要为SEO使用\nauthor: John Doe #显示的文章作者名字，例如我配置的是fourstring\nlanguage: #语言。简体中文是zh-Hans\ntimezone: #时区，可以不配置，默认以本地时区为准\nurl: http://yoursite.com #你的站点地址，如果是全站HTTPS记得写成https://domain.com\nroot: / #如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。（引用自官方文档）\npermalink: :year/:month/:day/:title/ #固定链接格式。这项配置的格式为：变量1/变量2/变量3...，其中合法的变量格式为“:变量名”（注意，:是变量的组成部分！）这样生成的效果为/2016/08/10/文章标题。默认的固定链接格式存在一些问题，下文讲解\nper_page: 10 #设置每页文章篇数，设为0可以关闭分页功能\ntheme: #使用的主题。下文讲解\ndeploy: #部署配置，其值是一个杂凑表，注意缩进，下文详细讲解\n```\n\n### 3.2 更换主题\n\nHexo的主题存储在`louie_blog/themes`目录下\n\nhexo主题星级排名[https://www.zhihu.com/question/24422335](https://www.zhihu.com/question/24422335)\n\n推荐n4l.pw使用的Hexo主题：Next，功能极其强大，是目前github上star第一的Hexo主题：[https://github.com/iissnan/hexo-theme-next](https://github.com/iissnan/hexo-theme-next)。官方文档讲解非常详细，鉴于篇幅，这里只提一个小技巧，在文章中加入`<!--more-->`标签，主题会自动将标签之前的内容截取作为文章摘要输出在首页。（可见下图效果，点击放大）。\n\n![hexo_theme](http://i.imgur.com/uvNNid6.jpg)\n\n\n### 3.3 写作\n\n```shell\nhexo new post \"Test\"\n```\n\n可以新建一篇文章。post参数可以省略，_config.yml中的default_layout:设置了默认类型，默认值是post，你可以改成draft来默认存储为草稿。\n\n然后用任意你喜欢的编辑器打开home/source/_post/标题.md文件就可以写作了。（PS：Windows下markdown编辑器可以使用MakdownPad2，OS X下可以使用MWeb，功能非常强大）。\n\n【MarkdownPad2】\n下载地址：[http://markdownpad.com/](http://markdownpad.com/)\n注册码：\n[http://www.jianshu.com/p/9e5cd946696d](http://www.jianshu.com/p/9e5cd946696d)\n\n\t邮箱：\n\tSoar360@live.com\n\n\t授权秘钥：\n\tGBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==\n\n**自定义链接格式太蠢 **\n\n可能语言不是很严谨，不过给我的第一感觉就是这样。由于链接最后没有带上.html后缀名，而且生成文件的MIME类型似乎不太对，导致用默认链接格式的话，nginx web server会直接进行文件下载。。。能不能像WordPress那样，为每篇文章自定义一个简短的英文名称作为链接呢？\n\n我们需要用到Hexo的permalinkFront-matter选项。先编辑模板文件home/scaffolds/post.md，在其Front-matter中加入permalink:即可。\n\n**分类和标签**\n\n默认的主题菜单栏是没有标签和分类两个页面的。而且默认的模板中Front-matter也只有tags选项，没有分类选项。是不是Hexo没有这些功能呢？答案是否定的。\n\nPS：这两个选项的值都是一个清单，注意缩进。\n\n编辑模板文件home/scaffolds/post.md，加入categories:，如图所示：\n\n![hexo format](http://i.imgur.com/AHaOcCJ.jpg)\n\n然后执行：\n\n```shell\nhexo new page categories\nhexo new page tags\n```\n\n![hexo format 设置](http://i.imgur.com/bUOdTY8.jpg)\n\n创建标签和分类页面，如果你的主题支持，它们不需要填充任何内容，主题会自动生成这两个页面的内容，你只需要将它们加入菜单栏即可。（这并不意味着不用生成这两个页面）\n默认主题菜单栏修改方法如下：\n编辑`home/themes/landscape/_config.yml`文件，在`menu:`项下加入显示名称: 路径即可，如下图所示：\n\n** 评论功能 **\n\n这个主要看主题是否支持。例如我使用的next主题，支持多说和disqus两套系统。特别提醒，由于本身是静态化的，所以必须依靠第三方服务提供评论功能。\n\n如果想让某篇文章禁用评论功能，next主题需要在Front-matter中加入：\n\n```yaml\ncomment: false\n```\n\n一般来说页面都不需要评论功能，可以编辑home/scaffolds/page.md，在Front-matter中加入\n\n```yaml\ncomment: false\n```\n\n编辑`source/_posts/Test.md`文件，使用markdown语法撰写自己的博客。\n\n### 3.4 预览\n\n执行`hexo generate`生成静态文件，执行`hexo server`，本地开启服务器，然后浏览器访问`http://localhost:4000`即可看到预览效果了。\n\n![](http://i.imgur.com/AvHMXXg.jpg)\n\n## 4 部署\n\n最后一个重点难点内容，如何将public文件夹下的内容发布到服务器上。\n\n- 1.Github Pages\n  这个服务允许github用户发布静态页面，无限空间流量，适合轻度用户。我没有采用这种方法，限于篇幅也不会介绍，如果你需要，Google之。\n\n- 2.直接复制\n  理论上可行的方法。毕竟public下的文件到哪里都能直接变成一个可运行的站点。但是这种方法太蠢了，看似可行，其实蕴含着一大堆问题，比如，无效流量、重复文件……\n\n- 3.Git版本控制系统\n  官方支持的部署方式之一。利用Git版本控制系统的强大功能，通过ssh上传文件。这也是我采用并且下文讲解的方法。\n\n- 4.Heroku\n  没有了解过这个方式。\n\n- 5.Openshift\n  Openshift是著名厂商Red Hat的PaaS服务，功能十分强大。关于如何使用该服务的教程网上已经很多，限于篇幅不再介绍。（如果各位有需要，我会考虑另开文章讲解，毕竟这个平台是相当好用的，请留言）\n\n- 6.rsync\n  利用强大的同步工具rsync进行同步，这种同步方式只需要用户提供一个能访问bash的Linux用户，并且服务器上安装了rsync软件包，其余一切涉及rsync命令的操作都由hexo自动完成，更加简单。推荐新手使用这种方式。\n\n- 7.FTPsync\n  直接通过FTP协议进行同步。如果购买了虚拟主机，可以考虑这种方式。然而这个插件写得也很蠢。第一次使用必须自己手动上传所有文件，否则会无限报连接被重置错误（我就不配图了，工作量有点大）。\n\n基于上述方式的优缺点，本文将讲解如何使用Git和rsync进行服务端部署。\n\n### 4.1 Git版本控制系统\n\n服务端配置\n\n4.1.1 编译安装nginx\n\n** 这里跳过 **\n\n执行`sudo nginx -V`测试是否安装成功。\n\n![nginx 版本](http://i.imgur.com/lEEJxHH.jpg)\n\n4.1.2 配置Git仓库\n\n选择合适的路径，建立文件夹：\n\n这里选择根目录下的`/web`\n​\n```shell\nsudo mkdir /web\n```\n\n并更改所有者为自己\n```shell\nsudo chown -R louie:louie /web\n```\n\n建立目录\n```shell\nmkdir -p /web/blog/hexo  #Git仓库，不存储网站文件\nmkdir -p /web/blog/hexo_blog.git #实际存储网站文件目录\n```\n\n执行如下命令，初始化空的Git仓库：\n\n```shell\ngit init --bare hexo_blog.git\n```\n\n![hexo_blog git仓库初始化](http://i.imgur.com/E9XzzzZ.jpg)\n\n然后进入该仓库，配置`post-receive hooks`。\n\n\t钩子(hooks)是一些在”$GIT-DIR/hooks”目录的脚本, 在被特定的事件(certain points)触发后被调用 。当”git init”命令被调用后, 一些非常有用的示例钩子文件(hooks)被拷到新仓库的hooks目录中; 但是在默认情况下这些钩子(hooks)是不生效的 。 把这些子文件(hooks)的”.sample”文件名后缀去掉就可以使它们生效了。\n\t需要关注的是post-receive的钩子，当push操作完成之后这个钩子就会被调用。\n\n进入到hooks目录\n\n建立`post-receive`文件，输入\n\n```shell\n#!/bin/sh\ngit --work-tree=/web/blog/hexo --git-dir=/web/blog/hexo.git checkout -f\n```\n\n赋予可执行权限：\n\n```shell\nchmod +x post-receive\n```\n\n![git hooks](http://i.imgur.com/0UwN6HX.jpg)\n\n本文使用的是自己搭建的Gitolite，已经添加了无密码登陆权限。\n\n4.1.3 nginx web server配置\n首先建立虚拟主机配置文件夹：\n\n```shell\nnpm install hexo-deployer-git --save\n```\n\n\n","source":"_posts/hexo_blog_build.md","raw":"---\ntitle: 如何搭建 hexo 博客\ndate: 2017-06-09 15:20:08\ntags:\n  - hexo\n  - blog\ncategories:\n  - hexo\nkeywords:\n  - blog\ndescription:\n  - hexo 建立博客\ntop:\n---\n\n**摘要**:本文主要介绍如何使用hexo建立自己的博客。\n\n<!--more-->\n\n## 1 安装node.js\n\n```shell\nwget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\n安装完成后执行：`nvm install stable`, 即可安装node.js。\n\n使用npm命令安装hexo\n\n```shell\nnpm install -g hexo-cli\n```\n\n安装完成之后，使用`hexo --version`查看hexo是否正确安装。\n\n![hexo 安装](http://i.imgur.com/OsK3uSC.jpg)\n\n【PS】目前npm官方源在国内访问并不稳定，如果无法直接安装，请更换国内npm源。执行以下命令更换淘宝npm源\n\n```shell\nnpm config set registry https://registry.npm.taobao.org\n```\n\n## 2 安装git\n\n已经安装过git跳过此步骤\n\ndebian/ubuntu使用：\n\n```shell\nsudo apt-get install git-core\n```\n\n## 3 hexo使用\n\n### 3.1 初始化一个站点\n\n```shell\nhexo init louie_blog\n```\n\n此命令用于执行站点的初始化。执行后，folder文件夹会成为一个Hexo站点文件夹，执行过程中涉及安装多个nodejs模块包以及git clone操作。\n\n![hexo初始化站点](http://i.imgur.com/zzPkjDZ.jpg)\n\n在初始化一个hexo站点文件夹之后，该文件夹的目录结构如下：\n\n![hexo目录结构](http://i.imgur.com/72R8bGc.jpg)\n\n详细说明如下：\n\n- 1、`_config.yml`是YAML格式文件，也是Hexo的站点配置文件（敲黑板！重点重点！）\n- 2、node_modules包含使用Hexo需要的其他node.js模块，以后安装的hexo相关模块也放在这里\n- 3、package.json配置hexo运行需要的node.js包，不用手动更改（PS：通常不需要干预它，不过其中有一条\"name\": \"hexo-site\"起着告诉hexo该文件夹是hexo站点的作用，因此更加不要修改该文件内容，安装hexo其他模块也依赖该文件）\n- 4、scaffolds是模板文件夹，不过这里的“模板”概念没有那么高端。这个“模板”就是指新建的markdown文件的模板，每新建一个markdown文件（由于Hexo使用markdown语法，在渲染生成静态HTML页面之前，源文件都是markdown文件），就会包含对应模板的内容。该文件夹内有三个模板：draft.md，草稿的模板page.md，页面的模板post.md，文章的模板\n- 5、source是源文件文件夹，此处存有渲染生成静态页面需要的所有源文件，包括markdown文件、图片文件。默认此文件夹下只有一个`_post`文件夹，存放文章的markdown源文件。每个页面有一个以该页面命名的文件夹，也存放在source文件夹下。该文件夹下除了`_post`外，所有以下划线开头的或以.开头的文件夹都会被忽略。\n- 6、themes是主题文件夹，Hexo的主题作用与WordPress相同。\n- 7、public文件夹，默认没有，存放生成的静态文件。\n\n打开`_config.yml` 修改配置：\n\n```yaml\ntitle: Hexo #站点的标题\nsubtitle: #站点的副标题\ndescription: #站点的描述，写一段话来介绍你的博客吧:)，主要为SEO使用\nauthor: John Doe #显示的文章作者名字，例如我配置的是fourstring\nlanguage: #语言。简体中文是zh-Hans\ntimezone: #时区，可以不配置，默认以本地时区为准\nurl: http://yoursite.com #你的站点地址，如果是全站HTTPS记得写成https://domain.com\nroot: / #如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。（引用自官方文档）\npermalink: :year/:month/:day/:title/ #固定链接格式。这项配置的格式为：变量1/变量2/变量3...，其中合法的变量格式为“:变量名”（注意，:是变量的组成部分！）这样生成的效果为/2016/08/10/文章标题。默认的固定链接格式存在一些问题，下文讲解\nper_page: 10 #设置每页文章篇数，设为0可以关闭分页功能\ntheme: #使用的主题。下文讲解\ndeploy: #部署配置，其值是一个杂凑表，注意缩进，下文详细讲解\n```\n\n### 3.2 更换主题\n\nHexo的主题存储在`louie_blog/themes`目录下\n\nhexo主题星级排名[https://www.zhihu.com/question/24422335](https://www.zhihu.com/question/24422335)\n\n推荐n4l.pw使用的Hexo主题：Next，功能极其强大，是目前github上star第一的Hexo主题：[https://github.com/iissnan/hexo-theme-next](https://github.com/iissnan/hexo-theme-next)。官方文档讲解非常详细，鉴于篇幅，这里只提一个小技巧，在文章中加入`<!--more-->`标签，主题会自动将标签之前的内容截取作为文章摘要输出在首页。（可见下图效果，点击放大）。\n\n![hexo_theme](http://i.imgur.com/uvNNid6.jpg)\n\n\n### 3.3 写作\n\n```shell\nhexo new post \"Test\"\n```\n\n可以新建一篇文章。post参数可以省略，_config.yml中的default_layout:设置了默认类型，默认值是post，你可以改成draft来默认存储为草稿。\n\n然后用任意你喜欢的编辑器打开home/source/_post/标题.md文件就可以写作了。（PS：Windows下markdown编辑器可以使用MakdownPad2，OS X下可以使用MWeb，功能非常强大）。\n\n【MarkdownPad2】\n下载地址：[http://markdownpad.com/](http://markdownpad.com/)\n注册码：\n[http://www.jianshu.com/p/9e5cd946696d](http://www.jianshu.com/p/9e5cd946696d)\n\n\t邮箱：\n\tSoar360@live.com\n\n\t授权秘钥：\n\tGBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==\n\n**自定义链接格式太蠢 **\n\n可能语言不是很严谨，不过给我的第一感觉就是这样。由于链接最后没有带上.html后缀名，而且生成文件的MIME类型似乎不太对，导致用默认链接格式的话，nginx web server会直接进行文件下载。。。能不能像WordPress那样，为每篇文章自定义一个简短的英文名称作为链接呢？\n\n我们需要用到Hexo的permalinkFront-matter选项。先编辑模板文件home/scaffolds/post.md，在其Front-matter中加入permalink:即可。\n\n**分类和标签**\n\n默认的主题菜单栏是没有标签和分类两个页面的。而且默认的模板中Front-matter也只有tags选项，没有分类选项。是不是Hexo没有这些功能呢？答案是否定的。\n\nPS：这两个选项的值都是一个清单，注意缩进。\n\n编辑模板文件home/scaffolds/post.md，加入categories:，如图所示：\n\n![hexo format](http://i.imgur.com/AHaOcCJ.jpg)\n\n然后执行：\n\n```shell\nhexo new page categories\nhexo new page tags\n```\n\n![hexo format 设置](http://i.imgur.com/bUOdTY8.jpg)\n\n创建标签和分类页面，如果你的主题支持，它们不需要填充任何内容，主题会自动生成这两个页面的内容，你只需要将它们加入菜单栏即可。（这并不意味着不用生成这两个页面）\n默认主题菜单栏修改方法如下：\n编辑`home/themes/landscape/_config.yml`文件，在`menu:`项下加入显示名称: 路径即可，如下图所示：\n\n** 评论功能 **\n\n这个主要看主题是否支持。例如我使用的next主题，支持多说和disqus两套系统。特别提醒，由于本身是静态化的，所以必须依靠第三方服务提供评论功能。\n\n如果想让某篇文章禁用评论功能，next主题需要在Front-matter中加入：\n\n```yaml\ncomment: false\n```\n\n一般来说页面都不需要评论功能，可以编辑home/scaffolds/page.md，在Front-matter中加入\n\n```yaml\ncomment: false\n```\n\n编辑`source/_posts/Test.md`文件，使用markdown语法撰写自己的博客。\n\n### 3.4 预览\n\n执行`hexo generate`生成静态文件，执行`hexo server`，本地开启服务器，然后浏览器访问`http://localhost:4000`即可看到预览效果了。\n\n![](http://i.imgur.com/AvHMXXg.jpg)\n\n## 4 部署\n\n最后一个重点难点内容，如何将public文件夹下的内容发布到服务器上。\n\n- 1.Github Pages\n  这个服务允许github用户发布静态页面，无限空间流量，适合轻度用户。我没有采用这种方法，限于篇幅也不会介绍，如果你需要，Google之。\n\n- 2.直接复制\n  理论上可行的方法。毕竟public下的文件到哪里都能直接变成一个可运行的站点。但是这种方法太蠢了，看似可行，其实蕴含着一大堆问题，比如，无效流量、重复文件……\n\n- 3.Git版本控制系统\n  官方支持的部署方式之一。利用Git版本控制系统的强大功能，通过ssh上传文件。这也是我采用并且下文讲解的方法。\n\n- 4.Heroku\n  没有了解过这个方式。\n\n- 5.Openshift\n  Openshift是著名厂商Red Hat的PaaS服务，功能十分强大。关于如何使用该服务的教程网上已经很多，限于篇幅不再介绍。（如果各位有需要，我会考虑另开文章讲解，毕竟这个平台是相当好用的，请留言）\n\n- 6.rsync\n  利用强大的同步工具rsync进行同步，这种同步方式只需要用户提供一个能访问bash的Linux用户，并且服务器上安装了rsync软件包，其余一切涉及rsync命令的操作都由hexo自动完成，更加简单。推荐新手使用这种方式。\n\n- 7.FTPsync\n  直接通过FTP协议进行同步。如果购买了虚拟主机，可以考虑这种方式。然而这个插件写得也很蠢。第一次使用必须自己手动上传所有文件，否则会无限报连接被重置错误（我就不配图了，工作量有点大）。\n\n基于上述方式的优缺点，本文将讲解如何使用Git和rsync进行服务端部署。\n\n### 4.1 Git版本控制系统\n\n服务端配置\n\n4.1.1 编译安装nginx\n\n** 这里跳过 **\n\n执行`sudo nginx -V`测试是否安装成功。\n\n![nginx 版本](http://i.imgur.com/lEEJxHH.jpg)\n\n4.1.2 配置Git仓库\n\n选择合适的路径，建立文件夹：\n\n这里选择根目录下的`/web`\n​\n```shell\nsudo mkdir /web\n```\n\n并更改所有者为自己\n```shell\nsudo chown -R louie:louie /web\n```\n\n建立目录\n```shell\nmkdir -p /web/blog/hexo  #Git仓库，不存储网站文件\nmkdir -p /web/blog/hexo_blog.git #实际存储网站文件目录\n```\n\n执行如下命令，初始化空的Git仓库：\n\n```shell\ngit init --bare hexo_blog.git\n```\n\n![hexo_blog git仓库初始化](http://i.imgur.com/E9XzzzZ.jpg)\n\n然后进入该仓库，配置`post-receive hooks`。\n\n\t钩子(hooks)是一些在”$GIT-DIR/hooks”目录的脚本, 在被特定的事件(certain points)触发后被调用 。当”git init”命令被调用后, 一些非常有用的示例钩子文件(hooks)被拷到新仓库的hooks目录中; 但是在默认情况下这些钩子(hooks)是不生效的 。 把这些子文件(hooks)的”.sample”文件名后缀去掉就可以使它们生效了。\n\t需要关注的是post-receive的钩子，当push操作完成之后这个钩子就会被调用。\n\n进入到hooks目录\n\n建立`post-receive`文件，输入\n\n```shell\n#!/bin/sh\ngit --work-tree=/web/blog/hexo --git-dir=/web/blog/hexo.git checkout -f\n```\n\n赋予可执行权限：\n\n```shell\nchmod +x post-receive\n```\n\n![git hooks](http://i.imgur.com/0UwN6HX.jpg)\n\n本文使用的是自己搭建的Gitolite，已经添加了无密码登陆权限。\n\n4.1.3 nginx web server配置\n首先建立虚拟主机配置文件夹：\n\n```shell\nnpm install hexo-deployer-git --save\n```\n\n\n","slug":"hexo_blog_build","published":1,"updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2wa000c6ijxzmb5ngck","content":"<p><strong>摘要</strong>:本文主要介绍如何使用hexo建立自己的博客。</p>\n<a id=\"more\"></a>\n<h2 id=\"1-安装node-js\"><a href=\"#1-安装node-js\" class=\"headerlink\" title=\"1 安装node.js\"></a>1 安装node.js</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure>\n<p>安装完成后执行：<code>nvm install stable</code>, 即可安装node.js。</p>\n<p>使用npm命令安装hexo</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>安装完成之后，使用<code>hexo --version</code>查看hexo是否正确安装。</p>\n<p><img src=\"http://i.imgur.com/OsK3uSC.jpg\" alt=\"hexo 安装\"></p>\n<p>【PS】目前npm官方源在国内访问并不稳定，如果无法直接安装，请更换国内npm源。执行以下命令更换淘宝npm源</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-安装git\"><a href=\"#2-安装git\" class=\"headerlink\" title=\"2 安装git\"></a>2 安装git</h2><p>已经安装过git跳过此步骤</p>\n<p>debian/ubuntu使用：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install git-core</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-hexo使用\"><a href=\"#3-hexo使用\" class=\"headerlink\" title=\"3 hexo使用\"></a>3 hexo使用</h2><h3 id=\"3-1-初始化一个站点\"><a href=\"#3-1-初始化一个站点\" class=\"headerlink\" title=\"3.1 初始化一个站点\"></a>3.1 初始化一个站点</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init louie_blog</span><br></pre></td></tr></table></figure>\n<p>此命令用于执行站点的初始化。执行后，folder文件夹会成为一个Hexo站点文件夹，执行过程中涉及安装多个nodejs模块包以及git clone操作。</p>\n<p><img src=\"http://i.imgur.com/zzPkjDZ.jpg\" alt=\"hexo初始化站点\"></p>\n<p>在初始化一个hexo站点文件夹之后，该文件夹的目录结构如下：</p>\n<p><img src=\"http://i.imgur.com/72R8bGc.jpg\" alt=\"hexo目录结构\"></p>\n<p>详细说明如下：</p>\n<ul>\n<li>1、<code>_config.yml</code>是YAML格式文件，也是Hexo的站点配置文件（敲黑板！重点重点！）</li>\n<li>2、node_modules包含使用Hexo需要的其他node.js模块，以后安装的hexo相关模块也放在这里</li>\n<li>3、package.json配置hexo运行需要的node.js包，不用手动更改（PS：通常不需要干预它，不过其中有一条”name”: “hexo-site”起着告诉hexo该文件夹是hexo站点的作用，因此更加不要修改该文件内容，安装hexo其他模块也依赖该文件）</li>\n<li>4、scaffolds是模板文件夹，不过这里的“模板”概念没有那么高端。这个“模板”就是指新建的markdown文件的模板，每新建一个markdown文件（由于Hexo使用markdown语法，在渲染生成静态HTML页面之前，源文件都是markdown文件），就会包含对应模板的内容。该文件夹内有三个模板：draft.md，草稿的模板page.md，页面的模板post.md，文章的模板</li>\n<li>5、source是源文件文件夹，此处存有渲染生成静态页面需要的所有源文件，包括markdown文件、图片文件。默认此文件夹下只有一个<code>_post</code>文件夹，存放文章的markdown源文件。每个页面有一个以该页面命名的文件夹，也存放在source文件夹下。该文件夹下除了<code>_post</code>外，所有以下划线开头的或以.开头的文件夹都会被忽略。</li>\n<li>6、themes是主题文件夹，Hexo的主题作用与WordPress相同。</li>\n<li>7、public文件夹，默认没有，存放生成的静态文件。</li>\n</ul>\n<p>打开<code>_config.yml</code> 修改配置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hexo</span> <span class=\"comment\">#站点的标题</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"comment\">#站点的副标题</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"comment\">#站点的描述，写一段话来介绍你的博客吧:)，主要为SEO使用</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">John</span> <span class=\"string\">Doe</span> <span class=\"comment\">#显示的文章作者名字，例如我配置的是fourstring</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"comment\">#语言。简体中文是zh-Hans</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"comment\">#时区，可以不配置，默认以本地时区为准</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"attr\">http://yoursite.com</span> <span class=\"comment\">#你的站点地址，如果是全站HTTPS记得写成https://domain.com</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/</span> <span class=\"comment\">#如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。（引用自官方文档）</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:year/:month/:day/:title/</span> <span class=\"comment\">#固定链接格式。这项配置的格式为：变量1/变量2/变量3...，其中合法的变量格式为“:变量名”（注意，:是变量的组成部分！）这样生成的效果为/2016/08/10/文章标题。默认的固定链接格式存在一些问题，下文讲解</span></span><br><span class=\"line\"><span class=\"attr\">per_page:</span> <span class=\"number\">10</span> <span class=\"comment\">#设置每页文章篇数，设为0可以关闭分页功能</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"comment\">#使用的主题。下文讲解</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span> <span class=\"comment\">#部署配置，其值是一个杂凑表，注意缩进，下文详细讲解</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-更换主题\"><a href=\"#3-2-更换主题\" class=\"headerlink\" title=\"3.2 更换主题\"></a>3.2 更换主题</h3><p>Hexo的主题存储在<code>louie_blog/themes</code>目录下</p>\n<p>hexo主题星级排名<a href=\"https://www.zhihu.com/question/24422335\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/24422335</a></p>\n<p>推荐n4l.pw使用的Hexo主题：Next，功能极其强大，是目前github上star第一的Hexo主题：<a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next</a>。官方文档讲解非常详细，鉴于篇幅，这里只提一个小技巧，在文章中加入<code>&lt;!--more--&gt;</code>标签，主题会自动将标签之前的内容截取作为文章摘要输出在首页。（可见下图效果，点击放大）。</p>\n<p><img src=\"http://i.imgur.com/uvNNid6.jpg\" alt=\"hexo_theme\"></p>\n<h3 id=\"3-3-写作\"><a href=\"#3-3-写作\" class=\"headerlink\" title=\"3.3 写作\"></a>3.3 写作</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post \"Test\"</span><br></pre></td></tr></table></figure>\n<p>可以新建一篇文章。post参数可以省略，_config.yml中的default_layout:设置了默认类型，默认值是post，你可以改成draft来默认存储为草稿。</p>\n<p>然后用任意你喜欢的编辑器打开home/source/_post/标题.md文件就可以写作了。（PS：Windows下markdown编辑器可以使用MakdownPad2，OS X下可以使用MWeb，功能非常强大）。</p>\n<p>【MarkdownPad2】<br>下载地址：<a href=\"http://markdownpad.com/\" target=\"_blank\" rel=\"noopener\">http://markdownpad.com/</a><br>注册码：<br><a href=\"http://www.jianshu.com/p/9e5cd946696d\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/9e5cd946696d</a></p>\n<pre><code>邮箱：\nSoar360@live.com\n\n授权秘钥：\nGBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==\n</code></pre><p><strong>自定义链接格式太蠢 </strong></p>\n<p>可能语言不是很严谨，不过给我的第一感觉就是这样。由于链接最后没有带上.html后缀名，而且生成文件的MIME类型似乎不太对，导致用默认链接格式的话，nginx web server会直接进行文件下载。。。能不能像WordPress那样，为每篇文章自定义一个简短的英文名称作为链接呢？</p>\n<p>我们需要用到Hexo的permalinkFront-matter选项。先编辑模板文件home/scaffolds/post.md，在其Front-matter中加入permalink:即可。</p>\n<p><strong>分类和标签</strong></p>\n<p>默认的主题菜单栏是没有标签和分类两个页面的。而且默认的模板中Front-matter也只有tags选项，没有分类选项。是不是Hexo没有这些功能呢？答案是否定的。</p>\n<p>PS：这两个选项的值都是一个清单，注意缩进。</p>\n<p>编辑模板文件home/scaffolds/post.md，加入categories:，如图所示：</p>\n<p><img src=\"http://i.imgur.com/AHaOcCJ.jpg\" alt=\"hexo format\"></p>\n<p>然后执行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://i.imgur.com/bUOdTY8.jpg\" alt=\"hexo format 设置\"></p>\n<p>创建标签和分类页面，如果你的主题支持，它们不需要填充任何内容，主题会自动生成这两个页面的内容，你只需要将它们加入菜单栏即可。（这并不意味着不用生成这两个页面）<br>默认主题菜单栏修改方法如下：<br>编辑<code>home/themes/landscape/_config.yml</code>文件，在<code>menu:</code>项下加入显示名称: 路径即可，如下图所示：</p>\n<p><strong> 评论功能 </strong></p>\n<p>这个主要看主题是否支持。例如我使用的next主题，支持多说和disqus两套系统。特别提醒，由于本身是静态化的，所以必须依靠第三方服务提供评论功能。</p>\n<p>如果想让某篇文章禁用评论功能，next主题需要在Front-matter中加入：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">comment:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>一般来说页面都不需要评论功能，可以编辑home/scaffolds/page.md，在Front-matter中加入</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">comment:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>编辑<code>source/_posts/Test.md</code>文件，使用markdown语法撰写自己的博客。</p>\n<h3 id=\"3-4-预览\"><a href=\"#3-4-预览\" class=\"headerlink\" title=\"3.4 预览\"></a>3.4 预览</h3><p>执行<code>hexo generate</code>生成静态文件，执行<code>hexo server</code>，本地开启服务器，然后浏览器访问<code>http://localhost:4000</code>即可看到预览效果了。</p>\n<p><img src=\"http://i.imgur.com/AvHMXXg.jpg\" alt=\"\"></p>\n<h2 id=\"4-部署\"><a href=\"#4-部署\" class=\"headerlink\" title=\"4 部署\"></a>4 部署</h2><p>最后一个重点难点内容，如何将public文件夹下的内容发布到服务器上。</p>\n<ul>\n<li><p>1.Github Pages<br>这个服务允许github用户发布静态页面，无限空间流量，适合轻度用户。我没有采用这种方法，限于篇幅也不会介绍，如果你需要，Google之。</p>\n</li>\n<li><p>2.直接复制<br>理论上可行的方法。毕竟public下的文件到哪里都能直接变成一个可运行的站点。但是这种方法太蠢了，看似可行，其实蕴含着一大堆问题，比如，无效流量、重复文件……</p>\n</li>\n<li><p>3.Git版本控制系统<br>官方支持的部署方式之一。利用Git版本控制系统的强大功能，通过ssh上传文件。这也是我采用并且下文讲解的方法。</p>\n</li>\n<li><p>4.Heroku<br>没有了解过这个方式。</p>\n</li>\n<li><p>5.Openshift<br>Openshift是著名厂商Red Hat的PaaS服务，功能十分强大。关于如何使用该服务的教程网上已经很多，限于篇幅不再介绍。（如果各位有需要，我会考虑另开文章讲解，毕竟这个平台是相当好用的，请留言）</p>\n</li>\n<li><p>6.rsync<br>利用强大的同步工具rsync进行同步，这种同步方式只需要用户提供一个能访问bash的Linux用户，并且服务器上安装了rsync软件包，其余一切涉及rsync命令的操作都由hexo自动完成，更加简单。推荐新手使用这种方式。</p>\n</li>\n<li><p>7.FTPsync<br>直接通过FTP协议进行同步。如果购买了虚拟主机，可以考虑这种方式。然而这个插件写得也很蠢。第一次使用必须自己手动上传所有文件，否则会无限报连接被重置错误（我就不配图了，工作量有点大）。</p>\n</li>\n</ul>\n<p>基于上述方式的优缺点，本文将讲解如何使用Git和rsync进行服务端部署。</p>\n<h3 id=\"4-1-Git版本控制系统\"><a href=\"#4-1-Git版本控制系统\" class=\"headerlink\" title=\"4.1 Git版本控制系统\"></a>4.1 Git版本控制系统</h3><p>服务端配置</p>\n<p>4.1.1 编译安装nginx</p>\n<p><strong> 这里跳过 </strong></p>\n<p>执行<code>sudo nginx -V</code>测试是否安装成功。</p>\n<p><img src=\"http://i.imgur.com/lEEJxHH.jpg\" alt=\"nginx 版本\"></p>\n<p>4.1.2 配置Git仓库</p>\n<p>选择合适的路径，建立文件夹：</p>\n<p>这里选择根目录下的<code>/web</code><br>​<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir /web</span><br></pre></td></tr></table></figure></p>\n<p>并更改所有者为自己<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R louie:louie /web</span><br></pre></td></tr></table></figure></p>\n<p>建立目录<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /web/blog/hexo  #Git仓库，不存储网站文件</span><br><span class=\"line\">mkdir -p /web/blog/hexo_blog.git #实际存储网站文件目录</span><br></pre></td></tr></table></figure></p>\n<p>执行如下命令，初始化空的Git仓库：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init --bare hexo_blog.git</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://i.imgur.com/E9XzzzZ.jpg\" alt=\"hexo_blog git仓库初始化\"></p>\n<p>然后进入该仓库，配置<code>post-receive hooks</code>。</p>\n<pre><code>钩子(hooks)是一些在”$GIT-DIR/hooks”目录的脚本, 在被特定的事件(certain points)触发后被调用 。当”git init”命令被调用后, 一些非常有用的示例钩子文件(hooks)被拷到新仓库的hooks目录中; 但是在默认情况下这些钩子(hooks)是不生效的 。 把这些子文件(hooks)的”.sample”文件名后缀去掉就可以使它们生效了。\n需要关注的是post-receive的钩子，当push操作完成之后这个钩子就会被调用。\n</code></pre><p>进入到hooks目录</p>\n<p>建立<code>post-receive</code>文件，输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/sh</span><br><span class=\"line\">git --work-tree=/web/blog/hexo --git-dir=/web/blog/hexo.git checkout -f</span><br></pre></td></tr></table></figure>\n<p>赋予可执行权限：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x post-receive</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://i.imgur.com/0UwN6HX.jpg\" alt=\"git hooks\"></p>\n<p>本文使用的是自己搭建的Gitolite，已经添加了无密码登陆权限。</p>\n<p>4.1.3 nginx web server配置<br>首先建立虚拟主机配置文件夹：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><strong>摘要</strong>:本文主要介绍如何使用hexo建立自己的博客。</p>","more":"<h2 id=\"1-安装node-js\"><a href=\"#1-安装node-js\" class=\"headerlink\" title=\"1 安装node.js\"></a>1 安装node.js</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure>\n<p>安装完成后执行：<code>nvm install stable</code>, 即可安装node.js。</p>\n<p>使用npm命令安装hexo</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>安装完成之后，使用<code>hexo --version</code>查看hexo是否正确安装。</p>\n<p><img src=\"http://i.imgur.com/OsK3uSC.jpg\" alt=\"hexo 安装\"></p>\n<p>【PS】目前npm官方源在国内访问并不稳定，如果无法直接安装，请更换国内npm源。执行以下命令更换淘宝npm源</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-安装git\"><a href=\"#2-安装git\" class=\"headerlink\" title=\"2 安装git\"></a>2 安装git</h2><p>已经安装过git跳过此步骤</p>\n<p>debian/ubuntu使用：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install git-core</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-hexo使用\"><a href=\"#3-hexo使用\" class=\"headerlink\" title=\"3 hexo使用\"></a>3 hexo使用</h2><h3 id=\"3-1-初始化一个站点\"><a href=\"#3-1-初始化一个站点\" class=\"headerlink\" title=\"3.1 初始化一个站点\"></a>3.1 初始化一个站点</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init louie_blog</span><br></pre></td></tr></table></figure>\n<p>此命令用于执行站点的初始化。执行后，folder文件夹会成为一个Hexo站点文件夹，执行过程中涉及安装多个nodejs模块包以及git clone操作。</p>\n<p><img src=\"http://i.imgur.com/zzPkjDZ.jpg\" alt=\"hexo初始化站点\"></p>\n<p>在初始化一个hexo站点文件夹之后，该文件夹的目录结构如下：</p>\n<p><img src=\"http://i.imgur.com/72R8bGc.jpg\" alt=\"hexo目录结构\"></p>\n<p>详细说明如下：</p>\n<ul>\n<li>1、<code>_config.yml</code>是YAML格式文件，也是Hexo的站点配置文件（敲黑板！重点重点！）</li>\n<li>2、node_modules包含使用Hexo需要的其他node.js模块，以后安装的hexo相关模块也放在这里</li>\n<li>3、package.json配置hexo运行需要的node.js包，不用手动更改（PS：通常不需要干预它，不过其中有一条”name”: “hexo-site”起着告诉hexo该文件夹是hexo站点的作用，因此更加不要修改该文件内容，安装hexo其他模块也依赖该文件）</li>\n<li>4、scaffolds是模板文件夹，不过这里的“模板”概念没有那么高端。这个“模板”就是指新建的markdown文件的模板，每新建一个markdown文件（由于Hexo使用markdown语法，在渲染生成静态HTML页面之前，源文件都是markdown文件），就会包含对应模板的内容。该文件夹内有三个模板：draft.md，草稿的模板page.md，页面的模板post.md，文章的模板</li>\n<li>5、source是源文件文件夹，此处存有渲染生成静态页面需要的所有源文件，包括markdown文件、图片文件。默认此文件夹下只有一个<code>_post</code>文件夹，存放文章的markdown源文件。每个页面有一个以该页面命名的文件夹，也存放在source文件夹下。该文件夹下除了<code>_post</code>外，所有以下划线开头的或以.开头的文件夹都会被忽略。</li>\n<li>6、themes是主题文件夹，Hexo的主题作用与WordPress相同。</li>\n<li>7、public文件夹，默认没有，存放生成的静态文件。</li>\n</ul>\n<p>打开<code>_config.yml</code> 修改配置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hexo</span> <span class=\"comment\">#站点的标题</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"comment\">#站点的副标题</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"comment\">#站点的描述，写一段话来介绍你的博客吧:)，主要为SEO使用</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">John</span> <span class=\"string\">Doe</span> <span class=\"comment\">#显示的文章作者名字，例如我配置的是fourstring</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"comment\">#语言。简体中文是zh-Hans</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"comment\">#时区，可以不配置，默认以本地时区为准</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"attr\">http://yoursite.com</span> <span class=\"comment\">#你的站点地址，如果是全站HTTPS记得写成https://domain.com</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/</span> <span class=\"comment\">#如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。（引用自官方文档）</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:year/:month/:day/:title/</span> <span class=\"comment\">#固定链接格式。这项配置的格式为：变量1/变量2/变量3...，其中合法的变量格式为“:变量名”（注意，:是变量的组成部分！）这样生成的效果为/2016/08/10/文章标题。默认的固定链接格式存在一些问题，下文讲解</span></span><br><span class=\"line\"><span class=\"attr\">per_page:</span> <span class=\"number\">10</span> <span class=\"comment\">#设置每页文章篇数，设为0可以关闭分页功能</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"comment\">#使用的主题。下文讲解</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span> <span class=\"comment\">#部署配置，其值是一个杂凑表，注意缩进，下文详细讲解</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-更换主题\"><a href=\"#3-2-更换主题\" class=\"headerlink\" title=\"3.2 更换主题\"></a>3.2 更换主题</h3><p>Hexo的主题存储在<code>louie_blog/themes</code>目录下</p>\n<p>hexo主题星级排名<a href=\"https://www.zhihu.com/question/24422335\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/24422335</a></p>\n<p>推荐n4l.pw使用的Hexo主题：Next，功能极其强大，是目前github上star第一的Hexo主题：<a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next</a>。官方文档讲解非常详细，鉴于篇幅，这里只提一个小技巧，在文章中加入<code>&lt;!--more--&gt;</code>标签，主题会自动将标签之前的内容截取作为文章摘要输出在首页。（可见下图效果，点击放大）。</p>\n<p><img src=\"http://i.imgur.com/uvNNid6.jpg\" alt=\"hexo_theme\"></p>\n<h3 id=\"3-3-写作\"><a href=\"#3-3-写作\" class=\"headerlink\" title=\"3.3 写作\"></a>3.3 写作</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post \"Test\"</span><br></pre></td></tr></table></figure>\n<p>可以新建一篇文章。post参数可以省略，_config.yml中的default_layout:设置了默认类型，默认值是post，你可以改成draft来默认存储为草稿。</p>\n<p>然后用任意你喜欢的编辑器打开home/source/_post/标题.md文件就可以写作了。（PS：Windows下markdown编辑器可以使用MakdownPad2，OS X下可以使用MWeb，功能非常强大）。</p>\n<p>【MarkdownPad2】<br>下载地址：<a href=\"http://markdownpad.com/\" target=\"_blank\" rel=\"noopener\">http://markdownpad.com/</a><br>注册码：<br><a href=\"http://www.jianshu.com/p/9e5cd946696d\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/9e5cd946696d</a></p>\n<pre><code>邮箱：\nSoar360@live.com\n\n授权秘钥：\nGBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==\n</code></pre><p><strong>自定义链接格式太蠢 </strong></p>\n<p>可能语言不是很严谨，不过给我的第一感觉就是这样。由于链接最后没有带上.html后缀名，而且生成文件的MIME类型似乎不太对，导致用默认链接格式的话，nginx web server会直接进行文件下载。。。能不能像WordPress那样，为每篇文章自定义一个简短的英文名称作为链接呢？</p>\n<p>我们需要用到Hexo的permalinkFront-matter选项。先编辑模板文件home/scaffolds/post.md，在其Front-matter中加入permalink:即可。</p>\n<p><strong>分类和标签</strong></p>\n<p>默认的主题菜单栏是没有标签和分类两个页面的。而且默认的模板中Front-matter也只有tags选项，没有分类选项。是不是Hexo没有这些功能呢？答案是否定的。</p>\n<p>PS：这两个选项的值都是一个清单，注意缩进。</p>\n<p>编辑模板文件home/scaffolds/post.md，加入categories:，如图所示：</p>\n<p><img src=\"http://i.imgur.com/AHaOcCJ.jpg\" alt=\"hexo format\"></p>\n<p>然后执行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://i.imgur.com/bUOdTY8.jpg\" alt=\"hexo format 设置\"></p>\n<p>创建标签和分类页面，如果你的主题支持，它们不需要填充任何内容，主题会自动生成这两个页面的内容，你只需要将它们加入菜单栏即可。（这并不意味着不用生成这两个页面）<br>默认主题菜单栏修改方法如下：<br>编辑<code>home/themes/landscape/_config.yml</code>文件，在<code>menu:</code>项下加入显示名称: 路径即可，如下图所示：</p>\n<p><strong> 评论功能 </strong></p>\n<p>这个主要看主题是否支持。例如我使用的next主题，支持多说和disqus两套系统。特别提醒，由于本身是静态化的，所以必须依靠第三方服务提供评论功能。</p>\n<p>如果想让某篇文章禁用评论功能，next主题需要在Front-matter中加入：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">comment:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>一般来说页面都不需要评论功能，可以编辑home/scaffolds/page.md，在Front-matter中加入</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">comment:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>编辑<code>source/_posts/Test.md</code>文件，使用markdown语法撰写自己的博客。</p>\n<h3 id=\"3-4-预览\"><a href=\"#3-4-预览\" class=\"headerlink\" title=\"3.4 预览\"></a>3.4 预览</h3><p>执行<code>hexo generate</code>生成静态文件，执行<code>hexo server</code>，本地开启服务器，然后浏览器访问<code>http://localhost:4000</code>即可看到预览效果了。</p>\n<p><img src=\"http://i.imgur.com/AvHMXXg.jpg\" alt=\"\"></p>\n<h2 id=\"4-部署\"><a href=\"#4-部署\" class=\"headerlink\" title=\"4 部署\"></a>4 部署</h2><p>最后一个重点难点内容，如何将public文件夹下的内容发布到服务器上。</p>\n<ul>\n<li><p>1.Github Pages<br>这个服务允许github用户发布静态页面，无限空间流量，适合轻度用户。我没有采用这种方法，限于篇幅也不会介绍，如果你需要，Google之。</p>\n</li>\n<li><p>2.直接复制<br>理论上可行的方法。毕竟public下的文件到哪里都能直接变成一个可运行的站点。但是这种方法太蠢了，看似可行，其实蕴含着一大堆问题，比如，无效流量、重复文件……</p>\n</li>\n<li><p>3.Git版本控制系统<br>官方支持的部署方式之一。利用Git版本控制系统的强大功能，通过ssh上传文件。这也是我采用并且下文讲解的方法。</p>\n</li>\n<li><p>4.Heroku<br>没有了解过这个方式。</p>\n</li>\n<li><p>5.Openshift<br>Openshift是著名厂商Red Hat的PaaS服务，功能十分强大。关于如何使用该服务的教程网上已经很多，限于篇幅不再介绍。（如果各位有需要，我会考虑另开文章讲解，毕竟这个平台是相当好用的，请留言）</p>\n</li>\n<li><p>6.rsync<br>利用强大的同步工具rsync进行同步，这种同步方式只需要用户提供一个能访问bash的Linux用户，并且服务器上安装了rsync软件包，其余一切涉及rsync命令的操作都由hexo自动完成，更加简单。推荐新手使用这种方式。</p>\n</li>\n<li><p>7.FTPsync<br>直接通过FTP协议进行同步。如果购买了虚拟主机，可以考虑这种方式。然而这个插件写得也很蠢。第一次使用必须自己手动上传所有文件，否则会无限报连接被重置错误（我就不配图了，工作量有点大）。</p>\n</li>\n</ul>\n<p>基于上述方式的优缺点，本文将讲解如何使用Git和rsync进行服务端部署。</p>\n<h3 id=\"4-1-Git版本控制系统\"><a href=\"#4-1-Git版本控制系统\" class=\"headerlink\" title=\"4.1 Git版本控制系统\"></a>4.1 Git版本控制系统</h3><p>服务端配置</p>\n<p>4.1.1 编译安装nginx</p>\n<p><strong> 这里跳过 </strong></p>\n<p>执行<code>sudo nginx -V</code>测试是否安装成功。</p>\n<p><img src=\"http://i.imgur.com/lEEJxHH.jpg\" alt=\"nginx 版本\"></p>\n<p>4.1.2 配置Git仓库</p>\n<p>选择合适的路径，建立文件夹：</p>\n<p>这里选择根目录下的<code>/web</code><br>​<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir /web</span><br></pre></td></tr></table></figure></p>\n<p>并更改所有者为自己<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R louie:louie /web</span><br></pre></td></tr></table></figure></p>\n<p>建立目录<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /web/blog/hexo  #Git仓库，不存储网站文件</span><br><span class=\"line\">mkdir -p /web/blog/hexo_blog.git #实际存储网站文件目录</span><br></pre></td></tr></table></figure></p>\n<p>执行如下命令，初始化空的Git仓库：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init --bare hexo_blog.git</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://i.imgur.com/E9XzzzZ.jpg\" alt=\"hexo_blog git仓库初始化\"></p>\n<p>然后进入该仓库，配置<code>post-receive hooks</code>。</p>\n<pre><code>钩子(hooks)是一些在”$GIT-DIR/hooks”目录的脚本, 在被特定的事件(certain points)触发后被调用 。当”git init”命令被调用后, 一些非常有用的示例钩子文件(hooks)被拷到新仓库的hooks目录中; 但是在默认情况下这些钩子(hooks)是不生效的 。 把这些子文件(hooks)的”.sample”文件名后缀去掉就可以使它们生效了。\n需要关注的是post-receive的钩子，当push操作完成之后这个钩子就会被调用。\n</code></pre><p>进入到hooks目录</p>\n<p>建立<code>post-receive</code>文件，输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/sh</span><br><span class=\"line\">git --work-tree=/web/blog/hexo --git-dir=/web/blog/hexo.git checkout -f</span><br></pre></td></tr></table></figure>\n<p>赋予可执行权限：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x post-receive</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://i.imgur.com/0UwN6HX.jpg\" alt=\"git hooks\"></p>\n<p>本文使用的是自己搭建的Gitolite，已经添加了无密码登陆权限。</p>\n<p>4.1.3 nginx web server配置<br>首先建立虚拟主机配置文件夹：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>"},{"title":"KEA DHCP安装配置及使用","date":"2018-04-07T04:26:15.000Z","keywords":["DHCP"],"description":["KEA DHCP的安装配置及使用"],"summary_img":null,"_content":"\n## 1 前言\n\n![KEAD DHCP LOGO](https://www.isc.org/wp-content/uploads/2017/04/Kea-logo-300x250.png)\n\nKEA 是由Internet Systems Consortium开发的开源DHCPv4 / DHCPv6服务器。 Kea是一款高性能，可扩展的DHCP服务器引擎，可以轻松修改和扩展钩子库。KEA具有以下特性[1]：\n\n- 开源，使用MPL 2.0许可证\n- 直接地址分配支持v4和v6，或DHCPv6 前缀授权\n- 动态地址分配和主机地址保留\n- 更新DNS记录作为续租或过期的动态DNS\n- MAC地址追踪，包括 v4和v6\n- 支持自定义扩展钩子库\n\n\n## 2 安装KEA\n\nKEA的安装可以通过apt的方式直接安装，但是如果需要数据库支持或者需要使用钩子扩展则需要自行编译，本文以自编译的方式介绍如何安装配置KEA。\n\n1) 首先下载源码：\n\n```shell\nroot@ubuntu:~# wget https://ftp.isc.org/isc/kea/1.3.0/kea-1.3.0.tar.gz\n```\n\n2) 安装必要的编译软件包\n\n```shell\nroot@ubuntu:~# apt install -y gcc build-essential make libmysql++-dev openssl libssl-dev libboost-system-dev liblog4cplus-dev liblog4cplus-1.1-9 libmysqlclient-dev\n```\n\n3) 配置编译\n\n指明需要使用mysql，若需要修改默认安装路径需要单独指定`--prefix`和`--exec-prefix`两个参数，前者是编译生成的二进制文件拷贝路径，后者是软件运行时依赖库的查找路径，可以通过`./configure -h`查看。\n\n```shell\nroot@ubuntu:~# tar xf kea-1.3.0.tar.gz\nroot@ubuntu:~# cd kea-1.3.0\nroot@ubuntu:~/kea-1.3.0# ./configure  --with-dhcp-mysql=/usr/bin/mysql_config\n```\n\n4) 编译\n\n配置完编译依旧是编译二连`make`和`make install`\n\n```shell\nroot@ubuntu:~# make -j8\nroot@ubuntu:~# make install\n```\n\n编译完成后默认安装到`/usr/local/kea`目录下，相应的配置文件放置在`/usr/local/kea/etc/kea`路径下。\n\n## 3 配置KEA\n\nkea的配置文件是json格式，配置完kea可以先使用[json在线解析](https://www.bejson.com/jsoneditoronline/)查看配置是否正确，需要注意的是必须去除配置中的注释才能正确解析。详细的kea配置需要查看官网的介绍[2]，同时配置文件`kea-dhcp6.conf.sample`示例中也有详细的解释。\n\n\n如下所示为配置文件参数的含义[3]：\n\n```json\n{\n\"Dhcp6\": {\n    // 向服务器租用地址时间，以秒为单位\n    \"valid-lifetime\": 4000,\n    // 可选，续借时间，如果没有指定将根据RFC 2131进行设置\n    \"renew-timer\": 1000,\n    // 可选，重新绑定时间，如果没有指定这将根据RFC 2131进行设置\n    \"rebind-timer\": 2000,\n\n    \"interfaces-config\": {\n        // 1. 指定服务器要监听哪张网卡的DHCP消息，可以指定多张网卡。\n        // 2.允许使用*，如：\"interfaces\": [\"*\"]，表示监听所有网卡\n        \"interfaces\": [\"eth1/2001:db8:1::2\"],\n        // 默认raw，表示处理所有报文\n        // udp：处理udp报文\n        \"dhcp-socket-type\": \"udp\"，\n        // 只有dhcp-socket-type为udp才生效\n        // 默认是same-as-inbound：从哪里来滚哪里去\n        // use-routing：从哪里来，滚哪里去，得问下kernel的路由表(routing table)       \"outbound-interface\": \"use-routing\"\n    },\n    // 控制平面接收\n    \"control-socket\": {\n        \"socket-type\": \"unix\",\n        \"socket-name\": \"/tmp/kea-dhcp6-ctrl.sock\"\n    },\n    // 租期数据使用库类型指定，类型不同，对应的配置也有所不同，这里以MySQL为例\n    \"lease-database\": {\n        // 支持memfile\", \"mysql\", \"postgresql\"， \"cql\"四个选项\n        \"type\": \"mysql\",\n        // 数据库所在的主机ip\n        \"host\": \"localhost\",\n        // 数据库端口号\n        \"port\": 3306,\n        // 数据库名称\n        \"name\": \"keadhcp\",\n        // 数据库用户名\n        \"user\": \"root\",\n        // 数据库密码\n        \"password\": \"root\",\n        // 当type为memfile这里会涉及到一个比较重要的配置，这里不说明，详情请看(http://kea.isc.org/wiki/LFCDesign)\n        // 1. 指定服务器将执行租约文件清理（LFC）的时间间隔（以秒为单位\n        // 2. 默认3600，0的时候表示禁用lease file cleanup(LFC)\n        // \"lfc-interval\": 1800\n    },\n\n    // 1.下面的配置可选。主机预定数据使用的数据库类型。和租期配置类同，不在赘述\n    // 2. 当然你也可以不使用数据库，在数据量不大的情况下推荐使用配置文件。随着数据量的增大可以改用数据库\n    // 3. 这个配置允许数据库和配置文件共存使用\n    // 4. 同时使用时，先检查配置文件，在检查数据库的数据\n    // \"hosts-database\": {\n    //     \"type\": \"mysql\",\n    //     \"host\": \"localhost\",\n    //     \"port\": 3306,\n    //     \"name\": \"kea\",\n    //     \"user\": \"kea\",\n    //     \"password\": \"kea\"\n    // },\n\n    \"subnet6\": [{\n        // 子网标识符，没有指定或者为0，则自动分配\n        // 建议手动分配，如果有多个子网，某个子网被删除，id可能被自动重新分配，导致租期数据混乱\n        \"id\":\"1024\"\n        // 网段 这里需要注意下网段必须和服务器所在网段一样，不然接收不到客户的请求\n        \"subnet\": \"2001:db8:1::/64\",\n        // 可分配地址范围\n        \"pools\": [{\"pool\": \"2001:db8:1::1000 - 2001:db8:1::2000\"}]\n    }]\n}，\n// 若不配置logging字段则日志记录默认输出在终端\n\"Logging\":\n{\n  \"loggers\": [\n    {\n        \"name\": \"kea-dhcp6\",\n        \"output_options\": [\n            {\n                // 指定日志输出路径\n                \"output\": \"/var/log/dhcp/dhcp6.log\",\n                // 当为true时每次更新日志文件都会同步到磁盘\n                \"flush\": true,\n                // 单个日志文件最大容量\n                \"maxsize\": 1048576,\n                // 同时存储日志文件最大个数\n                \"maxver\": 8\n            }\n        ],\n        // 日志输出等级\n        \"severity\": \"INFO\",\n        // 当日志输出等级为debug时，可选择debug输出等级0-100,0最低\n        \"debuglevel\": 0\n    }\n  ]\n}\n}\n```\n\n配置完成后重启kea服务即可，重启哪些服务可以在`/usr/local/kea/etc/kea/keactrl.conf`文件指定\n\n```shell\nroot@ubuntu:/usr/local/kea/etc/kea$ cat keactrl.conf\n# This is a configuration file for keactrl script which controls\n# the startup, shutdown, reconfiguration and gathering the status\n# of the Kea's processes.\n\n# prefix holds the location where the Kea is installed.\nprefix=/usr/local/kea\n\n# Location of Kea configuration files.\nkea_dhcp4_config_file=${prefix}/etc/kea/kea-dhcp4.conf\nkea_dhcp6_config_file=${prefix}/etc/kea/kea-dhcp6.conf\nkea_dhcp_ddns_config_file=${prefix}/etc/kea/kea-dhcp-ddns.conf\nkea_ctrl_agent_config_file=${prefix}/etc/kea/kea-ctrl-agent.conf\n\n# Location of Kea binaries.\nexec_prefix=/usr/local/kea\ndhcp4_srv=${exec_prefix}/sbin/kea-dhcp4\ndhcp6_srv=${exec_prefix}/sbin/kea-dhcp6\ndhcp_ddns_srv=${exec_prefix}/sbin/kea-dhcp-ddns\nctrl_agent_srv=${exec_prefix}/sbin/kea-ctrl-agent\n\n# Start DHCPv4 server?\ndhcp4=yes\n\n# Start DHCPv6 server?\ndhcp6=yes\n\n# Start DHCP DDNS server?\ndhcp_ddns=no\n\n# Start Control Agent?\nctrl_agent=yes\n\n# Be verbose?\nkea_verbose=no\n```\n\n重启DHCP服务\n\n```shell\nroot@ubuntu:~# keactrl start\n```\n\n首次运行时可能出现kea库找不到的错误，执行`ldconfig`命令即可。\n\n若需要指定重启v6或v4则需要添加相应参数\n\n```shell\nroot@ubuntu:~# keactrl start -s dhcpv6\n```\n\n关于如何配置KEA的钩子模式可以查看：[传送门](https://github.com/zorun/kea-hook-runscript)\n\n测试\n\n使用kea自带的perfdhcp性能测试工具，可以进行dhcp客户端模拟的测试\n\n1. 查看每秒能处理多少个discover(v4)或者solicit(v6)消息 \n2. 查看每秒能处理处理4-way packet exchanges(v4 - DORA, v6 - SARR)(即一个完成的请求动态ip的过程)\n\n\n```shell\nroot@ubuntu:~# perfdhcp -l eth1 -6 -R 100\n```\n\n使用上述命令申请100个v6地址。\n\n| 参数  | 含义             |\n| ----- | ---------------- |\n| -l    | 指定申请IP接口   |\n| -4/-6 | 指定申请的IP类型 |\n| -R    | 模拟客户端数量   |\n\n\n\n\n## 4 其他\n\n### 4.1 KEA 高可用\n\n目前KEA 1.3版本尚不支持HA高可用模式，官方介绍将在[1.4版本](https://www.isc.org/blogs/planning-for-kea-1-4/)支持，当前状态下若想使用HA可以通过数据库后端HA的方式来实现，也可以通过keepalived来实现，见[传送门](https://arch-ed.dk/kea-1-3-0-site-failover)，结合上一篇的keepalived可以很好的实现，原文中需要三台服务器，笔者在实验中使用了两台服务器也可以测试通过，由于keepalived不支持监听UDP端口，因此主要的实现方式是添加keepalived健康检查脚本定时检查kea进程。\n\n### 4.2 KEA配合phpIPAM\n\n当前phpIPAM并没有直接的插件配合KEA，因此需要自己实现，实现方式有两种：1)直接采用数据库同步的方式，将kea的数据导入phpIPAM中；2）采用phpIPAM的restful接口，同时phpIPAM也给出了API客户端[4]。遇到的困难是KEA的子网标记ID和phIPAM中子网号ID同步转换出错进而导致hosts同步错误，尤其是当KEA的子网号在重启会重新分配(未指定子网号时)或修改子网但未更新子网号时造成的租期数据混乱。\n\n\n\n【参考链接】\n\n1)[KEA官网](https://www.isc.org/kea/)\n\n2)[KEA官方文档](https://ftp.isc.org/isc/kea/1.3.0/doc/kea-guide.html)\n\n3)[KEA配置介绍](https://blog.csdn.net/z475382220/article/details/78844227)\n\n4)[phpIPAM API客户端](https://github.com/phpipam/phpipam-api-clients)\n","source":"_posts/keadhcp-usage.md","raw":"---\ntitle: KEA DHCP安装配置及使用\ndate: 2018-04-07 12:26:15\ntags:\n  - KEA\n  - ubuntu\nkeywords:\n  - DHCP\ncategories:\n  - ubuntu\ndescription:\n  - KEA DHCP的安装配置及使用\nsummary_img:\n---\n\n## 1 前言\n\n![KEAD DHCP LOGO](https://www.isc.org/wp-content/uploads/2017/04/Kea-logo-300x250.png)\n\nKEA 是由Internet Systems Consortium开发的开源DHCPv4 / DHCPv6服务器。 Kea是一款高性能，可扩展的DHCP服务器引擎，可以轻松修改和扩展钩子库。KEA具有以下特性[1]：\n\n- 开源，使用MPL 2.0许可证\n- 直接地址分配支持v4和v6，或DHCPv6 前缀授权\n- 动态地址分配和主机地址保留\n- 更新DNS记录作为续租或过期的动态DNS\n- MAC地址追踪，包括 v4和v6\n- 支持自定义扩展钩子库\n\n\n## 2 安装KEA\n\nKEA的安装可以通过apt的方式直接安装，但是如果需要数据库支持或者需要使用钩子扩展则需要自行编译，本文以自编译的方式介绍如何安装配置KEA。\n\n1) 首先下载源码：\n\n```shell\nroot@ubuntu:~# wget https://ftp.isc.org/isc/kea/1.3.0/kea-1.3.0.tar.gz\n```\n\n2) 安装必要的编译软件包\n\n```shell\nroot@ubuntu:~# apt install -y gcc build-essential make libmysql++-dev openssl libssl-dev libboost-system-dev liblog4cplus-dev liblog4cplus-1.1-9 libmysqlclient-dev\n```\n\n3) 配置编译\n\n指明需要使用mysql，若需要修改默认安装路径需要单独指定`--prefix`和`--exec-prefix`两个参数，前者是编译生成的二进制文件拷贝路径，后者是软件运行时依赖库的查找路径，可以通过`./configure -h`查看。\n\n```shell\nroot@ubuntu:~# tar xf kea-1.3.0.tar.gz\nroot@ubuntu:~# cd kea-1.3.0\nroot@ubuntu:~/kea-1.3.0# ./configure  --with-dhcp-mysql=/usr/bin/mysql_config\n```\n\n4) 编译\n\n配置完编译依旧是编译二连`make`和`make install`\n\n```shell\nroot@ubuntu:~# make -j8\nroot@ubuntu:~# make install\n```\n\n编译完成后默认安装到`/usr/local/kea`目录下，相应的配置文件放置在`/usr/local/kea/etc/kea`路径下。\n\n## 3 配置KEA\n\nkea的配置文件是json格式，配置完kea可以先使用[json在线解析](https://www.bejson.com/jsoneditoronline/)查看配置是否正确，需要注意的是必须去除配置中的注释才能正确解析。详细的kea配置需要查看官网的介绍[2]，同时配置文件`kea-dhcp6.conf.sample`示例中也有详细的解释。\n\n\n如下所示为配置文件参数的含义[3]：\n\n```json\n{\n\"Dhcp6\": {\n    // 向服务器租用地址时间，以秒为单位\n    \"valid-lifetime\": 4000,\n    // 可选，续借时间，如果没有指定将根据RFC 2131进行设置\n    \"renew-timer\": 1000,\n    // 可选，重新绑定时间，如果没有指定这将根据RFC 2131进行设置\n    \"rebind-timer\": 2000,\n\n    \"interfaces-config\": {\n        // 1. 指定服务器要监听哪张网卡的DHCP消息，可以指定多张网卡。\n        // 2.允许使用*，如：\"interfaces\": [\"*\"]，表示监听所有网卡\n        \"interfaces\": [\"eth1/2001:db8:1::2\"],\n        // 默认raw，表示处理所有报文\n        // udp：处理udp报文\n        \"dhcp-socket-type\": \"udp\"，\n        // 只有dhcp-socket-type为udp才生效\n        // 默认是same-as-inbound：从哪里来滚哪里去\n        // use-routing：从哪里来，滚哪里去，得问下kernel的路由表(routing table)       \"outbound-interface\": \"use-routing\"\n    },\n    // 控制平面接收\n    \"control-socket\": {\n        \"socket-type\": \"unix\",\n        \"socket-name\": \"/tmp/kea-dhcp6-ctrl.sock\"\n    },\n    // 租期数据使用库类型指定，类型不同，对应的配置也有所不同，这里以MySQL为例\n    \"lease-database\": {\n        // 支持memfile\", \"mysql\", \"postgresql\"， \"cql\"四个选项\n        \"type\": \"mysql\",\n        // 数据库所在的主机ip\n        \"host\": \"localhost\",\n        // 数据库端口号\n        \"port\": 3306,\n        // 数据库名称\n        \"name\": \"keadhcp\",\n        // 数据库用户名\n        \"user\": \"root\",\n        // 数据库密码\n        \"password\": \"root\",\n        // 当type为memfile这里会涉及到一个比较重要的配置，这里不说明，详情请看(http://kea.isc.org/wiki/LFCDesign)\n        // 1. 指定服务器将执行租约文件清理（LFC）的时间间隔（以秒为单位\n        // 2. 默认3600，0的时候表示禁用lease file cleanup(LFC)\n        // \"lfc-interval\": 1800\n    },\n\n    // 1.下面的配置可选。主机预定数据使用的数据库类型。和租期配置类同，不在赘述\n    // 2. 当然你也可以不使用数据库，在数据量不大的情况下推荐使用配置文件。随着数据量的增大可以改用数据库\n    // 3. 这个配置允许数据库和配置文件共存使用\n    // 4. 同时使用时，先检查配置文件，在检查数据库的数据\n    // \"hosts-database\": {\n    //     \"type\": \"mysql\",\n    //     \"host\": \"localhost\",\n    //     \"port\": 3306,\n    //     \"name\": \"kea\",\n    //     \"user\": \"kea\",\n    //     \"password\": \"kea\"\n    // },\n\n    \"subnet6\": [{\n        // 子网标识符，没有指定或者为0，则自动分配\n        // 建议手动分配，如果有多个子网，某个子网被删除，id可能被自动重新分配，导致租期数据混乱\n        \"id\":\"1024\"\n        // 网段 这里需要注意下网段必须和服务器所在网段一样，不然接收不到客户的请求\n        \"subnet\": \"2001:db8:1::/64\",\n        // 可分配地址范围\n        \"pools\": [{\"pool\": \"2001:db8:1::1000 - 2001:db8:1::2000\"}]\n    }]\n}，\n// 若不配置logging字段则日志记录默认输出在终端\n\"Logging\":\n{\n  \"loggers\": [\n    {\n        \"name\": \"kea-dhcp6\",\n        \"output_options\": [\n            {\n                // 指定日志输出路径\n                \"output\": \"/var/log/dhcp/dhcp6.log\",\n                // 当为true时每次更新日志文件都会同步到磁盘\n                \"flush\": true,\n                // 单个日志文件最大容量\n                \"maxsize\": 1048576,\n                // 同时存储日志文件最大个数\n                \"maxver\": 8\n            }\n        ],\n        // 日志输出等级\n        \"severity\": \"INFO\",\n        // 当日志输出等级为debug时，可选择debug输出等级0-100,0最低\n        \"debuglevel\": 0\n    }\n  ]\n}\n}\n```\n\n配置完成后重启kea服务即可，重启哪些服务可以在`/usr/local/kea/etc/kea/keactrl.conf`文件指定\n\n```shell\nroot@ubuntu:/usr/local/kea/etc/kea$ cat keactrl.conf\n# This is a configuration file for keactrl script which controls\n# the startup, shutdown, reconfiguration and gathering the status\n# of the Kea's processes.\n\n# prefix holds the location where the Kea is installed.\nprefix=/usr/local/kea\n\n# Location of Kea configuration files.\nkea_dhcp4_config_file=${prefix}/etc/kea/kea-dhcp4.conf\nkea_dhcp6_config_file=${prefix}/etc/kea/kea-dhcp6.conf\nkea_dhcp_ddns_config_file=${prefix}/etc/kea/kea-dhcp-ddns.conf\nkea_ctrl_agent_config_file=${prefix}/etc/kea/kea-ctrl-agent.conf\n\n# Location of Kea binaries.\nexec_prefix=/usr/local/kea\ndhcp4_srv=${exec_prefix}/sbin/kea-dhcp4\ndhcp6_srv=${exec_prefix}/sbin/kea-dhcp6\ndhcp_ddns_srv=${exec_prefix}/sbin/kea-dhcp-ddns\nctrl_agent_srv=${exec_prefix}/sbin/kea-ctrl-agent\n\n# Start DHCPv4 server?\ndhcp4=yes\n\n# Start DHCPv6 server?\ndhcp6=yes\n\n# Start DHCP DDNS server?\ndhcp_ddns=no\n\n# Start Control Agent?\nctrl_agent=yes\n\n# Be verbose?\nkea_verbose=no\n```\n\n重启DHCP服务\n\n```shell\nroot@ubuntu:~# keactrl start\n```\n\n首次运行时可能出现kea库找不到的错误，执行`ldconfig`命令即可。\n\n若需要指定重启v6或v4则需要添加相应参数\n\n```shell\nroot@ubuntu:~# keactrl start -s dhcpv6\n```\n\n关于如何配置KEA的钩子模式可以查看：[传送门](https://github.com/zorun/kea-hook-runscript)\n\n测试\n\n使用kea自带的perfdhcp性能测试工具，可以进行dhcp客户端模拟的测试\n\n1. 查看每秒能处理多少个discover(v4)或者solicit(v6)消息 \n2. 查看每秒能处理处理4-way packet exchanges(v4 - DORA, v6 - SARR)(即一个完成的请求动态ip的过程)\n\n\n```shell\nroot@ubuntu:~# perfdhcp -l eth1 -6 -R 100\n```\n\n使用上述命令申请100个v6地址。\n\n| 参数  | 含义             |\n| ----- | ---------------- |\n| -l    | 指定申请IP接口   |\n| -4/-6 | 指定申请的IP类型 |\n| -R    | 模拟客户端数量   |\n\n\n\n\n## 4 其他\n\n### 4.1 KEA 高可用\n\n目前KEA 1.3版本尚不支持HA高可用模式，官方介绍将在[1.4版本](https://www.isc.org/blogs/planning-for-kea-1-4/)支持，当前状态下若想使用HA可以通过数据库后端HA的方式来实现，也可以通过keepalived来实现，见[传送门](https://arch-ed.dk/kea-1-3-0-site-failover)，结合上一篇的keepalived可以很好的实现，原文中需要三台服务器，笔者在实验中使用了两台服务器也可以测试通过，由于keepalived不支持监听UDP端口，因此主要的实现方式是添加keepalived健康检查脚本定时检查kea进程。\n\n### 4.2 KEA配合phpIPAM\n\n当前phpIPAM并没有直接的插件配合KEA，因此需要自己实现，实现方式有两种：1)直接采用数据库同步的方式，将kea的数据导入phpIPAM中；2）采用phpIPAM的restful接口，同时phpIPAM也给出了API客户端[4]。遇到的困难是KEA的子网标记ID和phIPAM中子网号ID同步转换出错进而导致hosts同步错误，尤其是当KEA的子网号在重启会重新分配(未指定子网号时)或修改子网但未更新子网号时造成的租期数据混乱。\n\n\n\n【参考链接】\n\n1)[KEA官网](https://www.isc.org/kea/)\n\n2)[KEA官方文档](https://ftp.isc.org/isc/kea/1.3.0/doc/kea-guide.html)\n\n3)[KEA配置介绍](https://blog.csdn.net/z475382220/article/details/78844227)\n\n4)[phpIPAM API客户端](https://github.com/phpipam/phpipam-api-clients)\n","slug":"keadhcp-usage","published":1,"updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2wg000f6ijxinnd3y5l","content":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 前言</h2><p><img src=\"https://www.isc.org/wp-content/uploads/2017/04/Kea-logo-300x250.png\" alt=\"KEAD DHCP LOGO\"></p>\n<p>KEA 是由Internet Systems Consortium开发的开源DHCPv4 / DHCPv6服务器。 Kea是一款高性能，可扩展的DHCP服务器引擎，可以轻松修改和扩展钩子库。KEA具有以下特性[1]：</p>\n<ul>\n<li>开源，使用MPL 2.0许可证</li>\n<li>直接地址分配支持v4和v6，或DHCPv6 前缀授权</li>\n<li>动态地址分配和主机地址保留</li>\n<li>更新DNS记录作为续租或过期的动态DNS</li>\n<li>MAC地址追踪，包括 v4和v6</li>\n<li>支持自定义扩展钩子库</li>\n</ul>\n<h2 id=\"2-安装KEA\"><a href=\"#2-安装KEA\" class=\"headerlink\" title=\"2 安装KEA\"></a>2 安装KEA</h2><p>KEA的安装可以通过apt的方式直接安装，但是如果需要数据库支持或者需要使用钩子扩展则需要自行编译，本文以自编译的方式介绍如何安装配置KEA。</p>\n<p>1) 首先下载源码：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# wget https://ftp.isc.org/isc/kea/1.3.0/kea-1.3.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p>2) 安装必要的编译软件包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt install -y gcc build-essential make libmysql++-dev openssl libssl-dev libboost-system-dev liblog4cplus-dev liblog4cplus-1.1-9 libmysqlclient-dev</span><br></pre></td></tr></table></figure>\n<p>3) 配置编译</p>\n<p>指明需要使用mysql，若需要修改默认安装路径需要单独指定<code>--prefix</code>和<code>--exec-prefix</code>两个参数，前者是编译生成的二进制文件拷贝路径，后者是软件运行时依赖库的查找路径，可以通过<code>./configure -h</code>查看。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# tar xf kea-1.3.0.tar.gz</span><br><span class=\"line\">root@ubuntu:~# cd kea-1.3.0</span><br><span class=\"line\">root@ubuntu:~/kea-1.3.0# ./configure  --with-dhcp-mysql=/usr/bin/mysql_config</span><br></pre></td></tr></table></figure>\n<p>4) 编译</p>\n<p>配置完编译依旧是编译二连<code>make</code>和<code>make install</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# make -j8</span><br><span class=\"line\">root@ubuntu:~# make install</span><br></pre></td></tr></table></figure>\n<p>编译完成后默认安装到<code>/usr/local/kea</code>目录下，相应的配置文件放置在<code>/usr/local/kea/etc/kea</code>路径下。</p>\n<h2 id=\"3-配置KEA\"><a href=\"#3-配置KEA\" class=\"headerlink\" title=\"3 配置KEA\"></a>3 配置KEA</h2><p>kea的配置文件是json格式，配置完kea可以先使用<a href=\"https://www.bejson.com/jsoneditoronline/\" target=\"_blank\" rel=\"noopener\">json在线解析</a>查看配置是否正确，需要注意的是必须去除配置中的注释才能正确解析。详细的kea配置需要查看官网的介绍[2]，同时配置文件<code>kea-dhcp6.conf.sample</code>示例中也有详细的解释。</p>\n<p>如下所示为配置文件参数的含义[3]：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attr\">\"Dhcp6\"</span>: &#123;</span><br><span class=\"line\">    // 向服务器租用地址时间，以秒为单位</span><br><span class=\"line\">    \"valid-lifetime\": 4000,</span><br><span class=\"line\">    // 可选，续借时间，如果没有指定将根据RFC 2131进行设置</span><br><span class=\"line\">    \"renew-timer\": 1000,</span><br><span class=\"line\">    // 可选，重新绑定时间，如果没有指定这将根据RFC 2131进行设置</span><br><span class=\"line\">    \"rebind-timer\": 2000,</span><br><span class=\"line\"></span><br><span class=\"line\">    \"interfaces-config\": &#123;</span><br><span class=\"line\">        // 1. 指定服务器要监听哪张网卡的DHCP消息，可以指定多张网卡。</span><br><span class=\"line\">        // 2.允许使用*，如：\"interfaces\": [\"*\"]，表示监听所有网卡</span><br><span class=\"line\">        \"interfaces\": [\"eth1/2001:db8:1::2\"],</span><br><span class=\"line\">        // 默认raw，表示处理所有报文</span><br><span class=\"line\">        // udp：处理udp报文</span><br><span class=\"line\">        \"dhcp-socket-type\": \"udp\"，</span><br><span class=\"line\">        // 只有dhcp-socket-type为udp才生效</span><br><span class=\"line\">        // 默认是same-as-inbound：从哪里来滚哪里去</span><br><span class=\"line\">        // use-routing：从哪里来，滚哪里去，得问下kernel的路由表(routing table)       \"outbound-interface\": \"use-routing\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 控制平面接收</span><br><span class=\"line\">    \"control-socket\": &#123;</span><br><span class=\"line\">        \"socket-type\": \"unix\",</span><br><span class=\"line\">        \"socket-name\": \"/tmp/kea-dhcp6-ctrl.sock\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 租期数据使用库类型指定，类型不同，对应的配置也有所不同，这里以MySQL为例</span><br><span class=\"line\">    \"lease-database\": &#123;</span><br><span class=\"line\">        // 支持memfile\", \"mysql\", \"postgresql\"， \"cql\"四个选项</span><br><span class=\"line\">        \"type\": \"mysql\",</span><br><span class=\"line\">        // 数据库所在的主机ip</span><br><span class=\"line\">        \"host\": \"localhost\",</span><br><span class=\"line\">        // 数据库端口号</span><br><span class=\"line\">        \"port\": 3306,</span><br><span class=\"line\">        // 数据库名称</span><br><span class=\"line\">        \"name\": \"keadhcp\",</span><br><span class=\"line\">        // 数据库用户名</span><br><span class=\"line\">        \"user\": \"root\",</span><br><span class=\"line\">        // 数据库密码</span><br><span class=\"line\">        \"password\": \"root\",</span><br><span class=\"line\">        // 当type为memfile这里会涉及到一个比较重要的配置，这里不说明，详情请看(http://kea.isc.org/wiki/LFCDesign)</span><br><span class=\"line\">        // 1. 指定服务器将执行租约文件清理（LFC）的时间间隔（以秒为单位</span><br><span class=\"line\">        // 2. 默认3600，0的时候表示禁用lease file cleanup(LFC)</span><br><span class=\"line\">        // \"lfc-interval\": 1800</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 1.下面的配置可选。主机预定数据使用的数据库类型。和租期配置类同，不在赘述</span><br><span class=\"line\">    // 2. 当然你也可以不使用数据库，在数据量不大的情况下推荐使用配置文件。随着数据量的增大可以改用数据库</span><br><span class=\"line\">    // 3. 这个配置允许数据库和配置文件共存使用</span><br><span class=\"line\">    // 4. 同时使用时，先检查配置文件，在检查数据库的数据</span><br><span class=\"line\">    // \"hosts-database\": &#123;</span><br><span class=\"line\">    //     \"type\": \"mysql\",</span><br><span class=\"line\">    //     \"host\": \"localhost\",</span><br><span class=\"line\">    //     \"port\": 3306,</span><br><span class=\"line\">    //     \"name\": \"kea\",</span><br><span class=\"line\">    //     \"user\": \"kea\",</span><br><span class=\"line\">    //     \"password\": \"kea\"</span><br><span class=\"line\">    // &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    \"subnet6\": [&#123;</span><br><span class=\"line\">        // 子网标识符，没有指定或者为0，则自动分配</span><br><span class=\"line\">        // 建议手动分配，如果有多个子网，某个子网被删除，id可能被自动重新分配，导致租期数据混乱</span><br><span class=\"line\">        \"id\":\"1024\"</span><br><span class=\"line\">        // 网段 这里需要注意下网段必须和服务器所在网段一样，不然接收不到客户的请求</span><br><span class=\"line\">        \"subnet\": \"2001:db8:1::/64\",</span><br><span class=\"line\">        // 可分配地址范围</span><br><span class=\"line\">        \"pools\": [&#123;\"pool\": \"2001:db8:1::1000 - 2001:db8:1::2000\"&#125;]</span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">&#125;，</span><br><span class=\"line\">// 若不配置logging字段则日志记录默认输出在终端</span><br><span class=\"line\">\"Logging\":</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"loggers\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"kea-dhcp6\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"output_options\"</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                // 指定日志输出路径</span><br><span class=\"line\">                \"output\": \"/var/log/dhcp/dhcp6.log\",</span><br><span class=\"line\">                // 当为true时每次更新日志文件都会同步到磁盘</span><br><span class=\"line\">                \"flush\": true,</span><br><span class=\"line\">                // 单个日志文件最大容量</span><br><span class=\"line\">                \"maxsize\": 1048576,</span><br><span class=\"line\">                // 同时存储日志文件最大个数</span><br><span class=\"line\">                \"maxver\": 8</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        // 日志输出等级</span><br><span class=\"line\">        \"severity\": \"INFO\",</span><br><span class=\"line\">        // 当日志输出等级为debug时，可选择debug输出等级0-100,0最低</span><br><span class=\"line\">        \"debuglevel\": 0</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置完成后重启kea服务即可，重启哪些服务可以在<code>/usr/local/kea/etc/kea/keactrl.conf</code>文件指定</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/usr/local/kea/etc/kea$ cat keactrl.conf</span><br><span class=\"line\"><span class=\"meta\">#</span> This is a configuration file for keactrl script which controls</span><br><span class=\"line\"><span class=\"meta\">#</span> the startup, shutdown, reconfiguration and gathering the status</span><br><span class=\"line\"><span class=\"meta\">#</span> of the Kea's processes.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> prefix holds the location where the Kea is installed.</span><br><span class=\"line\">prefix=/usr/local/kea</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Location of Kea configuration files.</span><br><span class=\"line\">kea_dhcp4_config_file=$&#123;prefix&#125;/etc/kea/kea-dhcp4.conf</span><br><span class=\"line\">kea_dhcp6_config_file=$&#123;prefix&#125;/etc/kea/kea-dhcp6.conf</span><br><span class=\"line\">kea_dhcp_ddns_config_file=$&#123;prefix&#125;/etc/kea/kea-dhcp-ddns.conf</span><br><span class=\"line\">kea_ctrl_agent_config_file=$&#123;prefix&#125;/etc/kea/kea-ctrl-agent.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Location of Kea binaries.</span><br><span class=\"line\">exec_prefix=/usr/local/kea</span><br><span class=\"line\">dhcp4_srv=$&#123;exec_prefix&#125;/sbin/kea-dhcp4</span><br><span class=\"line\">dhcp6_srv=$&#123;exec_prefix&#125;/sbin/kea-dhcp6</span><br><span class=\"line\">dhcp_ddns_srv=$&#123;exec_prefix&#125;/sbin/kea-dhcp-ddns</span><br><span class=\"line\">ctrl_agent_srv=$&#123;exec_prefix&#125;/sbin/kea-ctrl-agent</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Start DHCPv4 server?</span><br><span class=\"line\">dhcp4=yes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Start DHCPv6 server?</span><br><span class=\"line\">dhcp6=yes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Start DHCP DDNS server?</span><br><span class=\"line\">dhcp_ddns=no</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Start Control Agent?</span><br><span class=\"line\">ctrl_agent=yes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Be verbose?</span><br><span class=\"line\">kea_verbose=no</span><br></pre></td></tr></table></figure>\n<p>重启DHCP服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# keactrl start</span><br></pre></td></tr></table></figure>\n<p>首次运行时可能出现kea库找不到的错误，执行<code>ldconfig</code>命令即可。</p>\n<p>若需要指定重启v6或v4则需要添加相应参数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# keactrl start -s dhcpv6</span><br></pre></td></tr></table></figure>\n<p>关于如何配置KEA的钩子模式可以查看：<a href=\"https://github.com/zorun/kea-hook-runscript\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<p>测试</p>\n<p>使用kea自带的perfdhcp性能测试工具，可以进行dhcp客户端模拟的测试</p>\n<ol>\n<li>查看每秒能处理多少个discover(v4)或者solicit(v6)消息 </li>\n<li>查看每秒能处理处理4-way packet exchanges(v4 - DORA, v6 - SARR)(即一个完成的请求动态ip的过程)</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# perfdhcp -l eth1 -6 -R 100</span><br></pre></td></tr></table></figure>\n<p>使用上述命令申请100个v6地址。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-l</td>\n<td>指定申请IP接口</td>\n</tr>\n<tr>\n<td>-4/-6</td>\n<td>指定申请的IP类型</td>\n</tr>\n<tr>\n<td>-R</td>\n<td>模拟客户端数量</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"4-其他\"><a href=\"#4-其他\" class=\"headerlink\" title=\"4 其他\"></a>4 其他</h2><h3 id=\"4-1-KEA-高可用\"><a href=\"#4-1-KEA-高可用\" class=\"headerlink\" title=\"4.1 KEA 高可用\"></a>4.1 KEA 高可用</h3><p>目前KEA 1.3版本尚不支持HA高可用模式，官方介绍将在<a href=\"https://www.isc.org/blogs/planning-for-kea-1-4/\" target=\"_blank\" rel=\"noopener\">1.4版本</a>支持，当前状态下若想使用HA可以通过数据库后端HA的方式来实现，也可以通过keepalived来实现，见<a href=\"https://arch-ed.dk/kea-1-3-0-site-failover\" target=\"_blank\" rel=\"noopener\">传送门</a>，结合上一篇的keepalived可以很好的实现，原文中需要三台服务器，笔者在实验中使用了两台服务器也可以测试通过，由于keepalived不支持监听UDP端口，因此主要的实现方式是添加keepalived健康检查脚本定时检查kea进程。</p>\n<h3 id=\"4-2-KEA配合phpIPAM\"><a href=\"#4-2-KEA配合phpIPAM\" class=\"headerlink\" title=\"4.2 KEA配合phpIPAM\"></a>4.2 KEA配合phpIPAM</h3><p>当前phpIPAM并没有直接的插件配合KEA，因此需要自己实现，实现方式有两种：1)直接采用数据库同步的方式，将kea的数据导入phpIPAM中；2）采用phpIPAM的restful接口，同时phpIPAM也给出了API客户端[4]。遇到的困难是KEA的子网标记ID和phIPAM中子网号ID同步转换出错进而导致hosts同步错误，尤其是当KEA的子网号在重启会重新分配(未指定子网号时)或修改子网但未更新子网号时造成的租期数据混乱。</p>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://www.isc.org/kea/\" target=\"_blank\" rel=\"noopener\">KEA官网</a></p>\n<p>2)<a href=\"https://ftp.isc.org/isc/kea/1.3.0/doc/kea-guide.html\" target=\"_blank\" rel=\"noopener\">KEA官方文档</a></p>\n<p>3)<a href=\"https://blog.csdn.net/z475382220/article/details/78844227\" target=\"_blank\" rel=\"noopener\">KEA配置介绍</a></p>\n<p>4)<a href=\"https://github.com/phpipam/phpipam-api-clients\" target=\"_blank\" rel=\"noopener\">phpIPAM API客户端</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 前言</h2><p><img src=\"https://www.isc.org/wp-content/uploads/2017/04/Kea-logo-300x250.png\" alt=\"KEAD DHCP LOGO\"></p>\n<p>KEA 是由Internet Systems Consortium开发的开源DHCPv4 / DHCPv6服务器。 Kea是一款高性能，可扩展的DHCP服务器引擎，可以轻松修改和扩展钩子库。KEA具有以下特性[1]：</p>\n<ul>\n<li>开源，使用MPL 2.0许可证</li>\n<li>直接地址分配支持v4和v6，或DHCPv6 前缀授权</li>\n<li>动态地址分配和主机地址保留</li>\n<li>更新DNS记录作为续租或过期的动态DNS</li>\n<li>MAC地址追踪，包括 v4和v6</li>\n<li>支持自定义扩展钩子库</li>\n</ul>\n<h2 id=\"2-安装KEA\"><a href=\"#2-安装KEA\" class=\"headerlink\" title=\"2 安装KEA\"></a>2 安装KEA</h2><p>KEA的安装可以通过apt的方式直接安装，但是如果需要数据库支持或者需要使用钩子扩展则需要自行编译，本文以自编译的方式介绍如何安装配置KEA。</p>\n<p>1) 首先下载源码：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# wget https://ftp.isc.org/isc/kea/1.3.0/kea-1.3.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p>2) 安装必要的编译软件包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# apt install -y gcc build-essential make libmysql++-dev openssl libssl-dev libboost-system-dev liblog4cplus-dev liblog4cplus-1.1-9 libmysqlclient-dev</span><br></pre></td></tr></table></figure>\n<p>3) 配置编译</p>\n<p>指明需要使用mysql，若需要修改默认安装路径需要单独指定<code>--prefix</code>和<code>--exec-prefix</code>两个参数，前者是编译生成的二进制文件拷贝路径，后者是软件运行时依赖库的查找路径，可以通过<code>./configure -h</code>查看。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# tar xf kea-1.3.0.tar.gz</span><br><span class=\"line\">root@ubuntu:~# cd kea-1.3.0</span><br><span class=\"line\">root@ubuntu:~/kea-1.3.0# ./configure  --with-dhcp-mysql=/usr/bin/mysql_config</span><br></pre></td></tr></table></figure>\n<p>4) 编译</p>\n<p>配置完编译依旧是编译二连<code>make</code>和<code>make install</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# make -j8</span><br><span class=\"line\">root@ubuntu:~# make install</span><br></pre></td></tr></table></figure>\n<p>编译完成后默认安装到<code>/usr/local/kea</code>目录下，相应的配置文件放置在<code>/usr/local/kea/etc/kea</code>路径下。</p>\n<h2 id=\"3-配置KEA\"><a href=\"#3-配置KEA\" class=\"headerlink\" title=\"3 配置KEA\"></a>3 配置KEA</h2><p>kea的配置文件是json格式，配置完kea可以先使用<a href=\"https://www.bejson.com/jsoneditoronline/\" target=\"_blank\" rel=\"noopener\">json在线解析</a>查看配置是否正确，需要注意的是必须去除配置中的注释才能正确解析。详细的kea配置需要查看官网的介绍[2]，同时配置文件<code>kea-dhcp6.conf.sample</code>示例中也有详细的解释。</p>\n<p>如下所示为配置文件参数的含义[3]：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attr\">\"Dhcp6\"</span>: &#123;</span><br><span class=\"line\">    // 向服务器租用地址时间，以秒为单位</span><br><span class=\"line\">    \"valid-lifetime\": 4000,</span><br><span class=\"line\">    // 可选，续借时间，如果没有指定将根据RFC 2131进行设置</span><br><span class=\"line\">    \"renew-timer\": 1000,</span><br><span class=\"line\">    // 可选，重新绑定时间，如果没有指定这将根据RFC 2131进行设置</span><br><span class=\"line\">    \"rebind-timer\": 2000,</span><br><span class=\"line\"></span><br><span class=\"line\">    \"interfaces-config\": &#123;</span><br><span class=\"line\">        // 1. 指定服务器要监听哪张网卡的DHCP消息，可以指定多张网卡。</span><br><span class=\"line\">        // 2.允许使用*，如：\"interfaces\": [\"*\"]，表示监听所有网卡</span><br><span class=\"line\">        \"interfaces\": [\"eth1/2001:db8:1::2\"],</span><br><span class=\"line\">        // 默认raw，表示处理所有报文</span><br><span class=\"line\">        // udp：处理udp报文</span><br><span class=\"line\">        \"dhcp-socket-type\": \"udp\"，</span><br><span class=\"line\">        // 只有dhcp-socket-type为udp才生效</span><br><span class=\"line\">        // 默认是same-as-inbound：从哪里来滚哪里去</span><br><span class=\"line\">        // use-routing：从哪里来，滚哪里去，得问下kernel的路由表(routing table)       \"outbound-interface\": \"use-routing\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 控制平面接收</span><br><span class=\"line\">    \"control-socket\": &#123;</span><br><span class=\"line\">        \"socket-type\": \"unix\",</span><br><span class=\"line\">        \"socket-name\": \"/tmp/kea-dhcp6-ctrl.sock\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 租期数据使用库类型指定，类型不同，对应的配置也有所不同，这里以MySQL为例</span><br><span class=\"line\">    \"lease-database\": &#123;</span><br><span class=\"line\">        // 支持memfile\", \"mysql\", \"postgresql\"， \"cql\"四个选项</span><br><span class=\"line\">        \"type\": \"mysql\",</span><br><span class=\"line\">        // 数据库所在的主机ip</span><br><span class=\"line\">        \"host\": \"localhost\",</span><br><span class=\"line\">        // 数据库端口号</span><br><span class=\"line\">        \"port\": 3306,</span><br><span class=\"line\">        // 数据库名称</span><br><span class=\"line\">        \"name\": \"keadhcp\",</span><br><span class=\"line\">        // 数据库用户名</span><br><span class=\"line\">        \"user\": \"root\",</span><br><span class=\"line\">        // 数据库密码</span><br><span class=\"line\">        \"password\": \"root\",</span><br><span class=\"line\">        // 当type为memfile这里会涉及到一个比较重要的配置，这里不说明，详情请看(http://kea.isc.org/wiki/LFCDesign)</span><br><span class=\"line\">        // 1. 指定服务器将执行租约文件清理（LFC）的时间间隔（以秒为单位</span><br><span class=\"line\">        // 2. 默认3600，0的时候表示禁用lease file cleanup(LFC)</span><br><span class=\"line\">        // \"lfc-interval\": 1800</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 1.下面的配置可选。主机预定数据使用的数据库类型。和租期配置类同，不在赘述</span><br><span class=\"line\">    // 2. 当然你也可以不使用数据库，在数据量不大的情况下推荐使用配置文件。随着数据量的增大可以改用数据库</span><br><span class=\"line\">    // 3. 这个配置允许数据库和配置文件共存使用</span><br><span class=\"line\">    // 4. 同时使用时，先检查配置文件，在检查数据库的数据</span><br><span class=\"line\">    // \"hosts-database\": &#123;</span><br><span class=\"line\">    //     \"type\": \"mysql\",</span><br><span class=\"line\">    //     \"host\": \"localhost\",</span><br><span class=\"line\">    //     \"port\": 3306,</span><br><span class=\"line\">    //     \"name\": \"kea\",</span><br><span class=\"line\">    //     \"user\": \"kea\",</span><br><span class=\"line\">    //     \"password\": \"kea\"</span><br><span class=\"line\">    // &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    \"subnet6\": [&#123;</span><br><span class=\"line\">        // 子网标识符，没有指定或者为0，则自动分配</span><br><span class=\"line\">        // 建议手动分配，如果有多个子网，某个子网被删除，id可能被自动重新分配，导致租期数据混乱</span><br><span class=\"line\">        \"id\":\"1024\"</span><br><span class=\"line\">        // 网段 这里需要注意下网段必须和服务器所在网段一样，不然接收不到客户的请求</span><br><span class=\"line\">        \"subnet\": \"2001:db8:1::/64\",</span><br><span class=\"line\">        // 可分配地址范围</span><br><span class=\"line\">        \"pools\": [&#123;\"pool\": \"2001:db8:1::1000 - 2001:db8:1::2000\"&#125;]</span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">&#125;，</span><br><span class=\"line\">// 若不配置logging字段则日志记录默认输出在终端</span><br><span class=\"line\">\"Logging\":</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"loggers\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"kea-dhcp6\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"output_options\"</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                // 指定日志输出路径</span><br><span class=\"line\">                \"output\": \"/var/log/dhcp/dhcp6.log\",</span><br><span class=\"line\">                // 当为true时每次更新日志文件都会同步到磁盘</span><br><span class=\"line\">                \"flush\": true,</span><br><span class=\"line\">                // 单个日志文件最大容量</span><br><span class=\"line\">                \"maxsize\": 1048576,</span><br><span class=\"line\">                // 同时存储日志文件最大个数</span><br><span class=\"line\">                \"maxver\": 8</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        // 日志输出等级</span><br><span class=\"line\">        \"severity\": \"INFO\",</span><br><span class=\"line\">        // 当日志输出等级为debug时，可选择debug输出等级0-100,0最低</span><br><span class=\"line\">        \"debuglevel\": 0</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置完成后重启kea服务即可，重启哪些服务可以在<code>/usr/local/kea/etc/kea/keactrl.conf</code>文件指定</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/usr/local/kea/etc/kea$ cat keactrl.conf</span><br><span class=\"line\"><span class=\"meta\">#</span> This is a configuration file for keactrl script which controls</span><br><span class=\"line\"><span class=\"meta\">#</span> the startup, shutdown, reconfiguration and gathering the status</span><br><span class=\"line\"><span class=\"meta\">#</span> of the Kea's processes.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> prefix holds the location where the Kea is installed.</span><br><span class=\"line\">prefix=/usr/local/kea</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Location of Kea configuration files.</span><br><span class=\"line\">kea_dhcp4_config_file=$&#123;prefix&#125;/etc/kea/kea-dhcp4.conf</span><br><span class=\"line\">kea_dhcp6_config_file=$&#123;prefix&#125;/etc/kea/kea-dhcp6.conf</span><br><span class=\"line\">kea_dhcp_ddns_config_file=$&#123;prefix&#125;/etc/kea/kea-dhcp-ddns.conf</span><br><span class=\"line\">kea_ctrl_agent_config_file=$&#123;prefix&#125;/etc/kea/kea-ctrl-agent.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Location of Kea binaries.</span><br><span class=\"line\">exec_prefix=/usr/local/kea</span><br><span class=\"line\">dhcp4_srv=$&#123;exec_prefix&#125;/sbin/kea-dhcp4</span><br><span class=\"line\">dhcp6_srv=$&#123;exec_prefix&#125;/sbin/kea-dhcp6</span><br><span class=\"line\">dhcp_ddns_srv=$&#123;exec_prefix&#125;/sbin/kea-dhcp-ddns</span><br><span class=\"line\">ctrl_agent_srv=$&#123;exec_prefix&#125;/sbin/kea-ctrl-agent</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Start DHCPv4 server?</span><br><span class=\"line\">dhcp4=yes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Start DHCPv6 server?</span><br><span class=\"line\">dhcp6=yes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Start DHCP DDNS server?</span><br><span class=\"line\">dhcp_ddns=no</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Start Control Agent?</span><br><span class=\"line\">ctrl_agent=yes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Be verbose?</span><br><span class=\"line\">kea_verbose=no</span><br></pre></td></tr></table></figure>\n<p>重启DHCP服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# keactrl start</span><br></pre></td></tr></table></figure>\n<p>首次运行时可能出现kea库找不到的错误，执行<code>ldconfig</code>命令即可。</p>\n<p>若需要指定重启v6或v4则需要添加相应参数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# keactrl start -s dhcpv6</span><br></pre></td></tr></table></figure>\n<p>关于如何配置KEA的钩子模式可以查看：<a href=\"https://github.com/zorun/kea-hook-runscript\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<p>测试</p>\n<p>使用kea自带的perfdhcp性能测试工具，可以进行dhcp客户端模拟的测试</p>\n<ol>\n<li>查看每秒能处理多少个discover(v4)或者solicit(v6)消息 </li>\n<li>查看每秒能处理处理4-way packet exchanges(v4 - DORA, v6 - SARR)(即一个完成的请求动态ip的过程)</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# perfdhcp -l eth1 -6 -R 100</span><br></pre></td></tr></table></figure>\n<p>使用上述命令申请100个v6地址。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-l</td>\n<td>指定申请IP接口</td>\n</tr>\n<tr>\n<td>-4/-6</td>\n<td>指定申请的IP类型</td>\n</tr>\n<tr>\n<td>-R</td>\n<td>模拟客户端数量</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"4-其他\"><a href=\"#4-其他\" class=\"headerlink\" title=\"4 其他\"></a>4 其他</h2><h3 id=\"4-1-KEA-高可用\"><a href=\"#4-1-KEA-高可用\" class=\"headerlink\" title=\"4.1 KEA 高可用\"></a>4.1 KEA 高可用</h3><p>目前KEA 1.3版本尚不支持HA高可用模式，官方介绍将在<a href=\"https://www.isc.org/blogs/planning-for-kea-1-4/\" target=\"_blank\" rel=\"noopener\">1.4版本</a>支持，当前状态下若想使用HA可以通过数据库后端HA的方式来实现，也可以通过keepalived来实现，见<a href=\"https://arch-ed.dk/kea-1-3-0-site-failover\" target=\"_blank\" rel=\"noopener\">传送门</a>，结合上一篇的keepalived可以很好的实现，原文中需要三台服务器，笔者在实验中使用了两台服务器也可以测试通过，由于keepalived不支持监听UDP端口，因此主要的实现方式是添加keepalived健康检查脚本定时检查kea进程。</p>\n<h3 id=\"4-2-KEA配合phpIPAM\"><a href=\"#4-2-KEA配合phpIPAM\" class=\"headerlink\" title=\"4.2 KEA配合phpIPAM\"></a>4.2 KEA配合phpIPAM</h3><p>当前phpIPAM并没有直接的插件配合KEA，因此需要自己实现，实现方式有两种：1)直接采用数据库同步的方式，将kea的数据导入phpIPAM中；2）采用phpIPAM的restful接口，同时phpIPAM也给出了API客户端[4]。遇到的困难是KEA的子网标记ID和phIPAM中子网号ID同步转换出错进而导致hosts同步错误，尤其是当KEA的子网号在重启会重新分配(未指定子网号时)或修改子网但未更新子网号时造成的租期数据混乱。</p>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://www.isc.org/kea/\" target=\"_blank\" rel=\"noopener\">KEA官网</a></p>\n<p>2)<a href=\"https://ftp.isc.org/isc/kea/1.3.0/doc/kea-guide.html\" target=\"_blank\" rel=\"noopener\">KEA官方文档</a></p>\n<p>3)<a href=\"https://blog.csdn.net/z475382220/article/details/78844227\" target=\"_blank\" rel=\"noopener\">KEA配置介绍</a></p>\n<p>4)<a href=\"https://github.com/phpipam/phpipam-api-clients\" target=\"_blank\" rel=\"noopener\">phpIPAM API客户端</a></p>\n"},{"title":"openstack中镜像的密码修改","date":"2018-01-04T02:17:24.000Z","keywords":["image password"],"description":["openstack 镜像密码修改"],"summary_img":null,"_content":"\n<span id=\"jump0\">开始</span>\n\n## 1 前言\n\n本文主要讲解如何修改openstack中镜像的密码以及开启镜像的ssh登录。\n\nopenstack中的镜像登录方式主要有以下几种：\n\n1）openstack的VNC终端密码登录；\n\n2）ssh使用密匙登录；\n\n3）ssh使用密码登录。\n\n除了密匙登录其他两种都需要密码，而一般的镜像初始状态是不能使用密码登录或者说密码未知的，因此需要对镜像进行处理，处理方法有以下几种：\n\n1）通过openstack的实例创建执行脚本修改；\n\n2）通过直接修改镜像加入初始密码。\n\n多数的系统镜像都加入了普通用户通过`sudo su`切换成root用户，原因是`/etc/sudoers`加入的`%sudo   ALL=(ALL:ALL) ALL`。\n\n## 2 镜像处理介绍\n\n### 2.1 cirros\n\ncirros镜像是目前openstack中测试使用非常广泛的镜像，体积较小，易于使用，下载地址：https://download.cirros-cloud.net/\n\ncirros 0.3.5的镜像账号密码为\n\n```\nuser:cirros\npass:cubswin:)\n```\n\ncirros 0.4.0的账号密码为\n\n```\nuser:cirros\npassword:gocubsgo\n```\n\n不同版本的cirros的镜像密码可能不同，但是在控制台日志中都会显示，同时该镜像也默认开启了ssh登录，可以使用账号密码登录。如无法登录记得查看镜像使用的安全组是否开始ssh访问权限\n\n![openstak-SR-ssh](https://i.imgur.com/5P14D7V.jpg)\n\n登录之后使用`sudo su`切换成root用户，若想直接使用root用户登录，需要拷贝密钥或者修改root用户密码，拷贝密钥的命令为：\n\n```shell\ncp -f /home/cirros/.ssh/authorized_keys /root/.ssh/\n```\n\n\n\n### 2.2 ubuntu镜像\n\nubuntu系统镜像的官方下载地址为：http://cloud-images.ubuntu.com\n\ntrusty为ubuntu 14，xenial为ubuntu 16，根据自己的喜好下载镜像。\n\n### 2.2.1 修改镜像\n\n使用guestfish工具直接修改镜像[1]，安装guestfish工具\n\n```shell\nsudo apt-get install libguestfs-tools -y\n```\n\n打开镜像：\n\n```shell\nsudo guestfish --rw -a xenial-server-cloudimg-amd64-disk1.img\n```\n\n挂载文件系统等操作如下图所示：\n\n![guestfish change passwd](https://i.imgur.com/TVe8pr4.jpg)\n\n打开`/etc/cloud/cloud.cfg`后修改一下内容：\n\n1）增加ssh密码登录\n\n将`disable_root`的值设为`false`即可允许root登录，增加`ssh_pwauth: true`即可允许ssh密码登录。\n\n![openstack-passwd2](https://i.imgur.com/Rzj5T7u.jpg)\n\n2）增加默认用户ubuntu的密码\n\n将`lock_passwd`设为`false`允许VNC终端密码登录，同时添加`plain_text_passwd: \"ubuntu\"`将默认用户的密码设为`ubuntu`。\n\n![openstack-passwd3](https://i.imgur.com/RLL7eEI.jpg)\n\n最后，建议在`/etc/issue`中加入配置的密码，方便后续的人查看默认用户密码。根据参看链接[2]还可以修改`/etc/passwd`的第一行`root:x:...`为`root::...`达到使用root用户的VNC免密登录，但是如果是ssh登录的话，需要在`/etc/ssh/sshd_config`中将`PermitEmptyPasswords no`设置为`PermitEmptyPasswords yes`。\n\n### 2.2.2 通过openstack用户数据修改密码\n\n如果不想修改镜像就可以使用openstack启动实例时导入用户数据的方式来修改密码，加入修改脚本如：\n\n```shell\n#!/bin/sh\npasswd ubuntu<<EOF\nubuntu\nubuntu\nEOF\nsed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config\nservice ssh restart\n```\n\n如下图所示加入上述脚本，不同的openstack版本此处有所不同，依具体版本操作。\n\n![openstack userdata](https://i.imgur.com/wQ0HrVd.jpg)\n\n此外还有修改openstack的nova.conf和dashboard配置的方式来加入修改密码选项[3]，由于openstack的版本修改该种方式不一定可行，视具体版本处理。\n\n## 2.3 centos镜像\n\ncentos官方的镜像地址为：http://cloud.centos.org/centos/7/images/\n\ncentos的镜像默认用户是\"centos\"，处理方式和ubuntu一样，可以通过guestfish或者在创建实例时导入脚本。\n\n同样是使用guetsfish打开镜像然后修改`/etc/cloud/cloud.cfg`文件，如下图所示：\n\n![](https://i.imgur.com/mdfElHS.jpg)\n\n![](https://i.imgur.com/Hmlwt2w.jpg)\n\n\n\n【参考链接】\n\n1）[guestfish工具修改ubuntu镜像密码](http://blog.csdn.net/shuaijiasanshao/article/details/51260673)\n\n2）[密码修改](https://ask.openstack.org/en/question/5531/defining-default-user-password-for-ubuntu-cloud-image/)\n\n3）[openstack镜像密码修改](https://xiexianbin.cn/openstack/2017/03/23/OpenStack-image-password-modification)\n\n[返回文首](#jump0)\n\n\n\n\n\n\n\n\n\n","source":"_posts/openstack-images-password.md","raw":"---\ntitle: openstack中镜像的密码修改\ndate: 2018-01-04 10:17:24\ntags: \n   - Openstack\n   - OPNFV\nkeywords:\n   - image password\ncategories:\n   - Openstack\ndescription:\n   - openstack 镜像密码修改\nsummary_img:\n---\n\n<span id=\"jump0\">开始</span>\n\n## 1 前言\n\n本文主要讲解如何修改openstack中镜像的密码以及开启镜像的ssh登录。\n\nopenstack中的镜像登录方式主要有以下几种：\n\n1）openstack的VNC终端密码登录；\n\n2）ssh使用密匙登录；\n\n3）ssh使用密码登录。\n\n除了密匙登录其他两种都需要密码，而一般的镜像初始状态是不能使用密码登录或者说密码未知的，因此需要对镜像进行处理，处理方法有以下几种：\n\n1）通过openstack的实例创建执行脚本修改；\n\n2）通过直接修改镜像加入初始密码。\n\n多数的系统镜像都加入了普通用户通过`sudo su`切换成root用户，原因是`/etc/sudoers`加入的`%sudo   ALL=(ALL:ALL) ALL`。\n\n## 2 镜像处理介绍\n\n### 2.1 cirros\n\ncirros镜像是目前openstack中测试使用非常广泛的镜像，体积较小，易于使用，下载地址：https://download.cirros-cloud.net/\n\ncirros 0.3.5的镜像账号密码为\n\n```\nuser:cirros\npass:cubswin:)\n```\n\ncirros 0.4.0的账号密码为\n\n```\nuser:cirros\npassword:gocubsgo\n```\n\n不同版本的cirros的镜像密码可能不同，但是在控制台日志中都会显示，同时该镜像也默认开启了ssh登录，可以使用账号密码登录。如无法登录记得查看镜像使用的安全组是否开始ssh访问权限\n\n![openstak-SR-ssh](https://i.imgur.com/5P14D7V.jpg)\n\n登录之后使用`sudo su`切换成root用户，若想直接使用root用户登录，需要拷贝密钥或者修改root用户密码，拷贝密钥的命令为：\n\n```shell\ncp -f /home/cirros/.ssh/authorized_keys /root/.ssh/\n```\n\n\n\n### 2.2 ubuntu镜像\n\nubuntu系统镜像的官方下载地址为：http://cloud-images.ubuntu.com\n\ntrusty为ubuntu 14，xenial为ubuntu 16，根据自己的喜好下载镜像。\n\n### 2.2.1 修改镜像\n\n使用guestfish工具直接修改镜像[1]，安装guestfish工具\n\n```shell\nsudo apt-get install libguestfs-tools -y\n```\n\n打开镜像：\n\n```shell\nsudo guestfish --rw -a xenial-server-cloudimg-amd64-disk1.img\n```\n\n挂载文件系统等操作如下图所示：\n\n![guestfish change passwd](https://i.imgur.com/TVe8pr4.jpg)\n\n打开`/etc/cloud/cloud.cfg`后修改一下内容：\n\n1）增加ssh密码登录\n\n将`disable_root`的值设为`false`即可允许root登录，增加`ssh_pwauth: true`即可允许ssh密码登录。\n\n![openstack-passwd2](https://i.imgur.com/Rzj5T7u.jpg)\n\n2）增加默认用户ubuntu的密码\n\n将`lock_passwd`设为`false`允许VNC终端密码登录，同时添加`plain_text_passwd: \"ubuntu\"`将默认用户的密码设为`ubuntu`。\n\n![openstack-passwd3](https://i.imgur.com/RLL7eEI.jpg)\n\n最后，建议在`/etc/issue`中加入配置的密码，方便后续的人查看默认用户密码。根据参看链接[2]还可以修改`/etc/passwd`的第一行`root:x:...`为`root::...`达到使用root用户的VNC免密登录，但是如果是ssh登录的话，需要在`/etc/ssh/sshd_config`中将`PermitEmptyPasswords no`设置为`PermitEmptyPasswords yes`。\n\n### 2.2.2 通过openstack用户数据修改密码\n\n如果不想修改镜像就可以使用openstack启动实例时导入用户数据的方式来修改密码，加入修改脚本如：\n\n```shell\n#!/bin/sh\npasswd ubuntu<<EOF\nubuntu\nubuntu\nEOF\nsed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config\nservice ssh restart\n```\n\n如下图所示加入上述脚本，不同的openstack版本此处有所不同，依具体版本操作。\n\n![openstack userdata](https://i.imgur.com/wQ0HrVd.jpg)\n\n此外还有修改openstack的nova.conf和dashboard配置的方式来加入修改密码选项[3]，由于openstack的版本修改该种方式不一定可行，视具体版本处理。\n\n## 2.3 centos镜像\n\ncentos官方的镜像地址为：http://cloud.centos.org/centos/7/images/\n\ncentos的镜像默认用户是\"centos\"，处理方式和ubuntu一样，可以通过guestfish或者在创建实例时导入脚本。\n\n同样是使用guetsfish打开镜像然后修改`/etc/cloud/cloud.cfg`文件，如下图所示：\n\n![](https://i.imgur.com/mdfElHS.jpg)\n\n![](https://i.imgur.com/Hmlwt2w.jpg)\n\n\n\n【参考链接】\n\n1）[guestfish工具修改ubuntu镜像密码](http://blog.csdn.net/shuaijiasanshao/article/details/51260673)\n\n2）[密码修改](https://ask.openstack.org/en/question/5531/defining-default-user-password-for-ubuntu-cloud-image/)\n\n3）[openstack镜像密码修改](https://xiexianbin.cn/openstack/2017/03/23/OpenStack-image-password-modification)\n\n[返回文首](#jump0)\n\n\n\n\n\n\n\n\n\n","slug":"openstack-images-password","published":1,"updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2wi000g6ijxsqplxlam","content":"<p><span id=\"jump0\">开始</span></p>\n<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 前言</h2><p>本文主要讲解如何修改openstack中镜像的密码以及开启镜像的ssh登录。</p>\n<p>openstack中的镜像登录方式主要有以下几种：</p>\n<p>1）openstack的VNC终端密码登录；</p>\n<p>2）ssh使用密匙登录；</p>\n<p>3）ssh使用密码登录。</p>\n<p>除了密匙登录其他两种都需要密码，而一般的镜像初始状态是不能使用密码登录或者说密码未知的，因此需要对镜像进行处理，处理方法有以下几种：</p>\n<p>1）通过openstack的实例创建执行脚本修改；</p>\n<p>2）通过直接修改镜像加入初始密码。</p>\n<p>多数的系统镜像都加入了普通用户通过<code>sudo su</code>切换成root用户，原因是<code>/etc/sudoers</code>加入的<code>%sudo   ALL=(ALL:ALL) ALL</code>。</p>\n<h2 id=\"2-镜像处理介绍\"><a href=\"#2-镜像处理介绍\" class=\"headerlink\" title=\"2 镜像处理介绍\"></a>2 镜像处理介绍</h2><h3 id=\"2-1-cirros\"><a href=\"#2-1-cirros\" class=\"headerlink\" title=\"2.1 cirros\"></a>2.1 cirros</h3><p>cirros镜像是目前openstack中测试使用非常广泛的镜像，体积较小，易于使用，下载地址：<a href=\"https://download.cirros-cloud.net/\" target=\"_blank\" rel=\"noopener\">https://download.cirros-cloud.net/</a></p>\n<p>cirros 0.3.5的镜像账号密码为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user:cirros</span><br><span class=\"line\">pass:cubswin:)</span><br></pre></td></tr></table></figure>\n<p>cirros 0.4.0的账号密码为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user:cirros</span><br><span class=\"line\">password:gocubsgo</span><br></pre></td></tr></table></figure>\n<p>不同版本的cirros的镜像密码可能不同，但是在控制台日志中都会显示，同时该镜像也默认开启了ssh登录，可以使用账号密码登录。如无法登录记得查看镜像使用的安全组是否开始ssh访问权限</p>\n<p><img src=\"https://i.imgur.com/5P14D7V.jpg\" alt=\"openstak-SR-ssh\"></p>\n<p>登录之后使用<code>sudo su</code>切换成root用户，若想直接使用root用户登录，需要拷贝密钥或者修改root用户密码，拷贝密钥的命令为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -f /home/cirros/.ssh/authorized_keys /root/.ssh/</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-ubuntu镜像\"><a href=\"#2-2-ubuntu镜像\" class=\"headerlink\" title=\"2.2 ubuntu镜像\"></a>2.2 ubuntu镜像</h3><p>ubuntu系统镜像的官方下载地址为：<a href=\"http://cloud-images.ubuntu.com\" target=\"_blank\" rel=\"noopener\">http://cloud-images.ubuntu.com</a></p>\n<p>trusty为ubuntu 14，xenial为ubuntu 16，根据自己的喜好下载镜像。</p>\n<h3 id=\"2-2-1-修改镜像\"><a href=\"#2-2-1-修改镜像\" class=\"headerlink\" title=\"2.2.1 修改镜像\"></a>2.2.1 修改镜像</h3><p>使用guestfish工具直接修改镜像[1]，安装guestfish工具</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libguestfs-tools -y</span><br></pre></td></tr></table></figure>\n<p>打开镜像：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo guestfish --rw -a xenial-server-cloudimg-amd64-disk1.img</span><br></pre></td></tr></table></figure>\n<p>挂载文件系统等操作如下图所示：</p>\n<p><img src=\"https://i.imgur.com/TVe8pr4.jpg\" alt=\"guestfish change passwd\"></p>\n<p>打开<code>/etc/cloud/cloud.cfg</code>后修改一下内容：</p>\n<p>1）增加ssh密码登录</p>\n<p>将<code>disable_root</code>的值设为<code>false</code>即可允许root登录，增加<code>ssh_pwauth: true</code>即可允许ssh密码登录。</p>\n<p><img src=\"https://i.imgur.com/Rzj5T7u.jpg\" alt=\"openstack-passwd2\"></p>\n<p>2）增加默认用户ubuntu的密码</p>\n<p>将<code>lock_passwd</code>设为<code>false</code>允许VNC终端密码登录，同时添加<code>plain_text_passwd: &quot;ubuntu&quot;</code>将默认用户的密码设为<code>ubuntu</code>。</p>\n<p><img src=\"https://i.imgur.com/RLL7eEI.jpg\" alt=\"openstack-passwd3\"></p>\n<p>最后，建议在<code>/etc/issue</code>中加入配置的密码，方便后续的人查看默认用户密码。根据参看链接[2]还可以修改<code>/etc/passwd</code>的第一行<code>root:x:...</code>为<code>root::...</code>达到使用root用户的VNC免密登录，但是如果是ssh登录的话，需要在<code>/etc/ssh/sshd_config</code>中将<code>PermitEmptyPasswords no</code>设置为<code>PermitEmptyPasswords yes</code>。</p>\n<h3 id=\"2-2-2-通过openstack用户数据修改密码\"><a href=\"#2-2-2-通过openstack用户数据修改密码\" class=\"headerlink\" title=\"2.2.2 通过openstack用户数据修改密码\"></a>2.2.2 通过openstack用户数据修改密码</h3><p>如果不想修改镜像就可以使用openstack启动实例时导入用户数据的方式来修改密码，加入修改脚本如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/sh</span><br><span class=\"line\">passwd ubuntu&lt;&lt;EOF</span><br><span class=\"line\">ubuntu</span><br><span class=\"line\">ubuntu</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config</span><br><span class=\"line\">service ssh restart</span><br></pre></td></tr></table></figure>\n<p>如下图所示加入上述脚本，不同的openstack版本此处有所不同，依具体版本操作。</p>\n<p><img src=\"https://i.imgur.com/wQ0HrVd.jpg\" alt=\"openstack userdata\"></p>\n<p>此外还有修改openstack的nova.conf和dashboard配置的方式来加入修改密码选项[3]，由于openstack的版本修改该种方式不一定可行，视具体版本处理。</p>\n<h2 id=\"2-3-centos镜像\"><a href=\"#2-3-centos镜像\" class=\"headerlink\" title=\"2.3 centos镜像\"></a>2.3 centos镜像</h2><p>centos官方的镜像地址为：<a href=\"http://cloud.centos.org/centos/7/images/\" target=\"_blank\" rel=\"noopener\">http://cloud.centos.org/centos/7/images/</a></p>\n<p>centos的镜像默认用户是”centos”，处理方式和ubuntu一样，可以通过guestfish或者在创建实例时导入脚本。</p>\n<p>同样是使用guetsfish打开镜像然后修改<code>/etc/cloud/cloud.cfg</code>文件，如下图所示：</p>\n<p><img src=\"https://i.imgur.com/mdfElHS.jpg\" alt=\"\"></p>\n<p><img src=\"https://i.imgur.com/Hmlwt2w.jpg\" alt=\"\"></p>\n<p>【参考链接】</p>\n<p>1）<a href=\"http://blog.csdn.net/shuaijiasanshao/article/details/51260673\" target=\"_blank\" rel=\"noopener\">guestfish工具修改ubuntu镜像密码</a></p>\n<p>2）<a href=\"https://ask.openstack.org/en/question/5531/defining-default-user-password-for-ubuntu-cloud-image/\" target=\"_blank\" rel=\"noopener\">密码修改</a></p>\n<p>3）<a href=\"https://xiexianbin.cn/openstack/2017/03/23/OpenStack-image-password-modification\" target=\"_blank\" rel=\"noopener\">openstack镜像密码修改</a></p>\n<p><a href=\"#jump0\">返回文首</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><span id=\"jump0\">开始</span></p>\n<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 前言</h2><p>本文主要讲解如何修改openstack中镜像的密码以及开启镜像的ssh登录。</p>\n<p>openstack中的镜像登录方式主要有以下几种：</p>\n<p>1）openstack的VNC终端密码登录；</p>\n<p>2）ssh使用密匙登录；</p>\n<p>3）ssh使用密码登录。</p>\n<p>除了密匙登录其他两种都需要密码，而一般的镜像初始状态是不能使用密码登录或者说密码未知的，因此需要对镜像进行处理，处理方法有以下几种：</p>\n<p>1）通过openstack的实例创建执行脚本修改；</p>\n<p>2）通过直接修改镜像加入初始密码。</p>\n<p>多数的系统镜像都加入了普通用户通过<code>sudo su</code>切换成root用户，原因是<code>/etc/sudoers</code>加入的<code>%sudo   ALL=(ALL:ALL) ALL</code>。</p>\n<h2 id=\"2-镜像处理介绍\"><a href=\"#2-镜像处理介绍\" class=\"headerlink\" title=\"2 镜像处理介绍\"></a>2 镜像处理介绍</h2><h3 id=\"2-1-cirros\"><a href=\"#2-1-cirros\" class=\"headerlink\" title=\"2.1 cirros\"></a>2.1 cirros</h3><p>cirros镜像是目前openstack中测试使用非常广泛的镜像，体积较小，易于使用，下载地址：<a href=\"https://download.cirros-cloud.net/\" target=\"_blank\" rel=\"noopener\">https://download.cirros-cloud.net/</a></p>\n<p>cirros 0.3.5的镜像账号密码为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user:cirros</span><br><span class=\"line\">pass:cubswin:)</span><br></pre></td></tr></table></figure>\n<p>cirros 0.4.0的账号密码为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user:cirros</span><br><span class=\"line\">password:gocubsgo</span><br></pre></td></tr></table></figure>\n<p>不同版本的cirros的镜像密码可能不同，但是在控制台日志中都会显示，同时该镜像也默认开启了ssh登录，可以使用账号密码登录。如无法登录记得查看镜像使用的安全组是否开始ssh访问权限</p>\n<p><img src=\"https://i.imgur.com/5P14D7V.jpg\" alt=\"openstak-SR-ssh\"></p>\n<p>登录之后使用<code>sudo su</code>切换成root用户，若想直接使用root用户登录，需要拷贝密钥或者修改root用户密码，拷贝密钥的命令为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -f /home/cirros/.ssh/authorized_keys /root/.ssh/</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-ubuntu镜像\"><a href=\"#2-2-ubuntu镜像\" class=\"headerlink\" title=\"2.2 ubuntu镜像\"></a>2.2 ubuntu镜像</h3><p>ubuntu系统镜像的官方下载地址为：<a href=\"http://cloud-images.ubuntu.com\" target=\"_blank\" rel=\"noopener\">http://cloud-images.ubuntu.com</a></p>\n<p>trusty为ubuntu 14，xenial为ubuntu 16，根据自己的喜好下载镜像。</p>\n<h3 id=\"2-2-1-修改镜像\"><a href=\"#2-2-1-修改镜像\" class=\"headerlink\" title=\"2.2.1 修改镜像\"></a>2.2.1 修改镜像</h3><p>使用guestfish工具直接修改镜像[1]，安装guestfish工具</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libguestfs-tools -y</span><br></pre></td></tr></table></figure>\n<p>打开镜像：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo guestfish --rw -a xenial-server-cloudimg-amd64-disk1.img</span><br></pre></td></tr></table></figure>\n<p>挂载文件系统等操作如下图所示：</p>\n<p><img src=\"https://i.imgur.com/TVe8pr4.jpg\" alt=\"guestfish change passwd\"></p>\n<p>打开<code>/etc/cloud/cloud.cfg</code>后修改一下内容：</p>\n<p>1）增加ssh密码登录</p>\n<p>将<code>disable_root</code>的值设为<code>false</code>即可允许root登录，增加<code>ssh_pwauth: true</code>即可允许ssh密码登录。</p>\n<p><img src=\"https://i.imgur.com/Rzj5T7u.jpg\" alt=\"openstack-passwd2\"></p>\n<p>2）增加默认用户ubuntu的密码</p>\n<p>将<code>lock_passwd</code>设为<code>false</code>允许VNC终端密码登录，同时添加<code>plain_text_passwd: &quot;ubuntu&quot;</code>将默认用户的密码设为<code>ubuntu</code>。</p>\n<p><img src=\"https://i.imgur.com/RLL7eEI.jpg\" alt=\"openstack-passwd3\"></p>\n<p>最后，建议在<code>/etc/issue</code>中加入配置的密码，方便后续的人查看默认用户密码。根据参看链接[2]还可以修改<code>/etc/passwd</code>的第一行<code>root:x:...</code>为<code>root::...</code>达到使用root用户的VNC免密登录，但是如果是ssh登录的话，需要在<code>/etc/ssh/sshd_config</code>中将<code>PermitEmptyPasswords no</code>设置为<code>PermitEmptyPasswords yes</code>。</p>\n<h3 id=\"2-2-2-通过openstack用户数据修改密码\"><a href=\"#2-2-2-通过openstack用户数据修改密码\" class=\"headerlink\" title=\"2.2.2 通过openstack用户数据修改密码\"></a>2.2.2 通过openstack用户数据修改密码</h3><p>如果不想修改镜像就可以使用openstack启动实例时导入用户数据的方式来修改密码，加入修改脚本如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/sh</span><br><span class=\"line\">passwd ubuntu&lt;&lt;EOF</span><br><span class=\"line\">ubuntu</span><br><span class=\"line\">ubuntu</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config</span><br><span class=\"line\">service ssh restart</span><br></pre></td></tr></table></figure>\n<p>如下图所示加入上述脚本，不同的openstack版本此处有所不同，依具体版本操作。</p>\n<p><img src=\"https://i.imgur.com/wQ0HrVd.jpg\" alt=\"openstack userdata\"></p>\n<p>此外还有修改openstack的nova.conf和dashboard配置的方式来加入修改密码选项[3]，由于openstack的版本修改该种方式不一定可行，视具体版本处理。</p>\n<h2 id=\"2-3-centos镜像\"><a href=\"#2-3-centos镜像\" class=\"headerlink\" title=\"2.3 centos镜像\"></a>2.3 centos镜像</h2><p>centos官方的镜像地址为：<a href=\"http://cloud.centos.org/centos/7/images/\" target=\"_blank\" rel=\"noopener\">http://cloud.centos.org/centos/7/images/</a></p>\n<p>centos的镜像默认用户是”centos”，处理方式和ubuntu一样，可以通过guestfish或者在创建实例时导入脚本。</p>\n<p>同样是使用guetsfish打开镜像然后修改<code>/etc/cloud/cloud.cfg</code>文件，如下图所示：</p>\n<p><img src=\"https://i.imgur.com/mdfElHS.jpg\" alt=\"\"></p>\n<p><img src=\"https://i.imgur.com/Hmlwt2w.jpg\" alt=\"\"></p>\n<p>【参考链接】</p>\n<p>1）<a href=\"http://blog.csdn.net/shuaijiasanshao/article/details/51260673\" target=\"_blank\" rel=\"noopener\">guestfish工具修改ubuntu镜像密码</a></p>\n<p>2）<a href=\"https://ask.openstack.org/en/question/5531/defining-default-user-password-for-ubuntu-cloud-image/\" target=\"_blank\" rel=\"noopener\">密码修改</a></p>\n<p>3）<a href=\"https://xiexianbin.cn/openstack/2017/03/23/OpenStack-image-password-modification\" target=\"_blank\" rel=\"noopener\">openstack镜像密码修改</a></p>\n<p><a href=\"#jump0\">返回文首</a></p>\n"},{"title":"OPNFV Euphrates 安装（一）","date":"2017-10-31T07:05:57.000Z","keywords":["Euphrates"],"description":["OPNFV Euphrates"],"summary_img":["https://i.imgur.com/yNc6FFv.jpg"],"top":null,"_content":"\n## 1 Euphrates新特性介绍\n\nOPNFV社区于2017年10月24发布的第五个版本Euphrates（幼发拉底河，位于亚洲），新版本增加了对***Kubernetes***容器技术的支持，也就是说OPNFV的底层VIM不再仅仅是Openstack架构了，同时社区采用了***[XCI](http://docs.opnfv.org/en/latest/submodules/releng-xci/docs/xci-overview.html#xci-overview)***（cross community continuous integration）跨社区持续集成技术，能够更快更好的使用上游社区最新的版本和代码，在MANO管理层集成了ETSI NFV的***Open Baton***项目。E版本的详细新特性如下[1][2]：\n\n- 底层架构增加：OPNFV即将开启容器之旅。Euphrates将Kubernetes和容器集成到端到端堆栈的多个组件，以及通过Kolla部署容器化OpenStack的能力，Kolla提供生产就绪的容器和部署工具，用于运行可扩展、快速、可靠的OpenStack云，并使用社区最佳实践升级。这些增强功能可以更轻松地管理基础设施、支持NFV中的原生云网络应用，以及轻权重控制平面功能，为运营商支持5G和IoT奠定基础。\n- XCI持续集成：能够与最新的上游开源项目集成。在OPNFV第四个版本Danube中持续集成/持续部署（CI/CD）集成工作的基础上，Euphrates在OPNFV、OpenStack、OpenDaylight和FD.io中引入了XCI集成CI/CD管道的实现。OPNFVC CI管道并不需要官方的稳定版本，而是集成了上游项目的最新代码，以更快地解决错误并验证功能。这减少了新功能反馈和错误修复的时间，大大提升了创新的速度。XCI还可实现多分布式支持，促进开发人员之间的联系。\n- 电信级功能。通过整合Calipso项目，运营商现在可以对其复杂的虚拟网络进行可视化操作。结合现有的Barometer and Doctor项目中的遥测增强功能，用户可以获得强大的服务保障架构。Euphrates还包括ARM架构的性能改进，以及FD.io的3层性能。此外，Euphrates通过Moon给用户带来新的安全的管理功能，持续改进了服务功能链（SFC）、FD.io、EVPN性能。Euphrates还将OVN网络虚拟化项目以及最新版本的其他上游项目整合在一起，为网络控制提供额外的选择。\n- 测试和集成功能增强：OPNFV集成和测试工作提供广泛的工具来测试NFV云、VNF和完整的网络服务方面取得了重大进展。包括Sample VNF在内的新项目提供对VIM/NFVI层的测试，以及接近实际应用工作负载的应用程序。NFVBench项目提供了端到端数据平台基准测试架构。\n\n## 2 Euphrates 安装\n\n### 2.1 配置要求\n\n官方对于虚拟部署的配置要求如下\n\n| 硬件           | 配置需求                               |\n| ------------ | ---------------------------------- |\n| 1 Jumpserver | 1个物理的节点用于安装Salt Master虚拟机和其他节点的虚拟机 |\n| CPU          | 最少一个插槽并且支持虚拟化                      |\n| RAM          | 最小32G内存（与VNF的工作负载有关）               |\n| Disk         | 最小100G（SSD或者HDD（15k rpm最佳））        |\n\n本文采用fuel部署脚本在一个服务器上部署虚拟POD，硬件配置及系统如下\n\n- Dell R720服务器，8核E5-2609，24G内存\n- ubuntu 16.06 server，8 cpu，24G内存，300G磁盘\n\n本文中将称ubuntu 16.04系统为host。\n\n### 2.1 部署前准备\n\n#### 2.1.1 CPU开启KVM虚拟化\n\n本次安装使用的是在ESXI上安装的虚拟机，需要开启CPU的KVM虚拟化支持\n\n![](https://i.imgur.com/Xo9eSSj.jpg)\n\n#### 2.1.2 虚拟机管理工具virsh\n\n```shell\nsudo apt-get -y install libvirt-bin\n```\n\n*2017年12月12日更新*：社区最新的代码中已经添加了libvirt的安装，将安装过程调整为先安装libvirt后做`virsh list`的检查，因此该步骤安装可以省略。\n\n*可选步骤*：在国内为了加快部署进度，可以修改host上软件源将软件源替换为[清华源](https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/ \" 清华源\")\n\n修改`/etc/apt/source.list`文件内容全部替换为\n\n```shell\n  # 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释\n  deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse\n  # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse\n  deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\n  # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\n  deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\n  # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\n  deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\n  # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\t\n```\n\n替换完成之后运行`sudo apt-get update`\n\n### 2.2 fuel脚本部署Euphrates\n\n下载x86版本fuel部署脚本并切换至5.02版本分支[3]\n\n```shell\ngit clone https://git.opnfv.org/fuel\ngit checkout opnfv-5.0.2\n```\n\n*2017年12月12日更新*：由于XCI的特性，社区的代码实时更新，使用`git fetch origin stable/euphrates && git checkout stable/euphrates`切换至Euphrates的最新稳定版代码，然后再部署。\n\n*Note*：最开始尝试部署时由于内存只有8G出现过未部署成功，因此需要适当削减部署时的配置，修改`fuel/mcp/config/scenario/defaults-x86_64.yaml`中ram的大小，以及`mcp/config/scenario/virtual/os-nosdn-nofeature-noha.yaml`中ram的大小，甚至可以减少一个计算节点`cmp02`。\n\n最简单的虚拟部署方式命令如下\n\n```shell\nci/deploy.sh -D -p virtual_kvm -l localhost -s os-nosdn-nofeature-noha\n```\n\n使用`deploy -h`可以常看使用帮助，常用的参数说明如下\n\n| -b   | 指定部署配置的目录可以使用本地文件和远程链接，配置文件的路径格式为`<base-uri>/labs/<lab-name>/<pod-name>.yaml`,默认路径为`./mcp/config` |\n| ---- | ---------------------------------------- |\n| -l   | 指明使用配置目录下哪个实验室的配置文件，如`-l lf`为使用linux基金会实验室的配置文件。当使用虚拟部署时甚至`-l`参数都可以不使用 |\n| -p   | 指明使用实验室下的哪一个POD，如`-p pod2`               |\n| -s   | 指明使用哪种部署场景，如`-s os-nosdn-nofeature-noha`指使用openstack作为VIM，不采用sdn控制器，无其他特性，不使用ha。其他场景可以在`fuel/mcp/config/scenario/`下看到 |\n\n使用ssh登录到生成的虚拟机中,登录虚拟机后使用`sudo su`命令即可切换成root用户。\n\n```shell\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.20.0.2\n```\n\n本次部署过程中并未指定节点的相关信息因此诸如控制节点、计算节点等信息是随机生成，在接下来的第二篇详细介绍。\n\n### 2.3 dashboard的访问\n\n由于部署的是虚拟环境，各网络都是内部网络（internal network）因此需要做路由转换才能够正常访问。\n\n首先需要找到控制节点的IP通过登录到配置节点cfg01查找其他节点，使用`arp -a`命令可以看到其他节点的IP。\n\n![其它节点IP](https://i.imgur.com/t09x2yW.jpg)\n\n登录到ctl01节点上查看文件`/etc/apache2/conf-available/openstack-dashboard.conf`可以得知dashboard页面的监听端口为8078。\n\n访问dashboard的方式有**两种**，第一种是在host上做端口映射；第二种是通过putty、xshell等终端登录工具做隧道。不管哪种方式由于fuel在部署时防火墙的配置中多了一些选项需要先对iptables做一些修改。\n\n首先在host上备份防火墙规则`iptables-save > rule.v4`,然后打开rule.v4修改`-A FORWARD -d 10.20.0.0/24 -o mcpcontrol -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT`为`-A FORWARD -d 10.20.0.0/24 -o mcpcontrol -j ACCEPT`，随后重新加载防火墙规则`iptables-restore rule.v4`。\n\n#### 2.3.1 隧道方式访问\n\n打开终端的配置页面增加隧道条目，如图所示将本机的8000端口映射到控制节点的8078端口\n\n![隧道配置](https://i.imgur.com/D1CDnUI.jpg)\n\n随后在本机的浏览器输入`127.0.0.1:8000`即可访问dashboard，**账户/密码：admin/opnfv_secret**。密码存放在控制节点的`/etc/keystone/keystone.conf`文件中，为`admin_token`参数的值。\n\n#### 2.3.2 host端口映射方式访问\n\n在host上的防火墙规则中添加一个端口映射，`iptables -t nat -A PREROUTING -d 192.168.2.235 -p tcp --dport 8000 -j DNAT --to-destination 10.20.0.118:8078`，随后直接访问host主机的8000端口即可登录dashboard。\n\n\n\n**参考链接**：\n\n1)[OPNFV官方WIKI](https://www.opnfv.org/software)\n\n2)[OPNFV 第五个版本发布](http://www.sdnlab.com/20009.html)\n\n3)[Euphrates安装手册](http://docs.opnfv.org/en/stable-euphrates/submodules/fuel/docs/release/installation/installation.instruction.html)\n\n\n\n\n\n\n\n\n\n","source":"_posts/opnfv_Euphrates_install-01.md","raw":"---\ntitle: OPNFV Euphrates 安装（一）\ndate: 2017-10-31 15:05:57\ntags:\n  - OPNFV\n  - Euphrates\nkeywords:\n  - Euphrates\ncategories:\n  - OPNFV\ndescription:\n  - OPNFV Euphrates\nsummary_img:\n  - https://i.imgur.com/yNc6FFv.jpg\ntop:\n---\n\n## 1 Euphrates新特性介绍\n\nOPNFV社区于2017年10月24发布的第五个版本Euphrates（幼发拉底河，位于亚洲），新版本增加了对***Kubernetes***容器技术的支持，也就是说OPNFV的底层VIM不再仅仅是Openstack架构了，同时社区采用了***[XCI](http://docs.opnfv.org/en/latest/submodules/releng-xci/docs/xci-overview.html#xci-overview)***（cross community continuous integration）跨社区持续集成技术，能够更快更好的使用上游社区最新的版本和代码，在MANO管理层集成了ETSI NFV的***Open Baton***项目。E版本的详细新特性如下[1][2]：\n\n- 底层架构增加：OPNFV即将开启容器之旅。Euphrates将Kubernetes和容器集成到端到端堆栈的多个组件，以及通过Kolla部署容器化OpenStack的能力，Kolla提供生产就绪的容器和部署工具，用于运行可扩展、快速、可靠的OpenStack云，并使用社区最佳实践升级。这些增强功能可以更轻松地管理基础设施、支持NFV中的原生云网络应用，以及轻权重控制平面功能，为运营商支持5G和IoT奠定基础。\n- XCI持续集成：能够与最新的上游开源项目集成。在OPNFV第四个版本Danube中持续集成/持续部署（CI/CD）集成工作的基础上，Euphrates在OPNFV、OpenStack、OpenDaylight和FD.io中引入了XCI集成CI/CD管道的实现。OPNFVC CI管道并不需要官方的稳定版本，而是集成了上游项目的最新代码，以更快地解决错误并验证功能。这减少了新功能反馈和错误修复的时间，大大提升了创新的速度。XCI还可实现多分布式支持，促进开发人员之间的联系。\n- 电信级功能。通过整合Calipso项目，运营商现在可以对其复杂的虚拟网络进行可视化操作。结合现有的Barometer and Doctor项目中的遥测增强功能，用户可以获得强大的服务保障架构。Euphrates还包括ARM架构的性能改进，以及FD.io的3层性能。此外，Euphrates通过Moon给用户带来新的安全的管理功能，持续改进了服务功能链（SFC）、FD.io、EVPN性能。Euphrates还将OVN网络虚拟化项目以及最新版本的其他上游项目整合在一起，为网络控制提供额外的选择。\n- 测试和集成功能增强：OPNFV集成和测试工作提供广泛的工具来测试NFV云、VNF和完整的网络服务方面取得了重大进展。包括Sample VNF在内的新项目提供对VIM/NFVI层的测试，以及接近实际应用工作负载的应用程序。NFVBench项目提供了端到端数据平台基准测试架构。\n\n## 2 Euphrates 安装\n\n### 2.1 配置要求\n\n官方对于虚拟部署的配置要求如下\n\n| 硬件           | 配置需求                               |\n| ------------ | ---------------------------------- |\n| 1 Jumpserver | 1个物理的节点用于安装Salt Master虚拟机和其他节点的虚拟机 |\n| CPU          | 最少一个插槽并且支持虚拟化                      |\n| RAM          | 最小32G内存（与VNF的工作负载有关）               |\n| Disk         | 最小100G（SSD或者HDD（15k rpm最佳））        |\n\n本文采用fuel部署脚本在一个服务器上部署虚拟POD，硬件配置及系统如下\n\n- Dell R720服务器，8核E5-2609，24G内存\n- ubuntu 16.06 server，8 cpu，24G内存，300G磁盘\n\n本文中将称ubuntu 16.04系统为host。\n\n### 2.1 部署前准备\n\n#### 2.1.1 CPU开启KVM虚拟化\n\n本次安装使用的是在ESXI上安装的虚拟机，需要开启CPU的KVM虚拟化支持\n\n![](https://i.imgur.com/Xo9eSSj.jpg)\n\n#### 2.1.2 虚拟机管理工具virsh\n\n```shell\nsudo apt-get -y install libvirt-bin\n```\n\n*2017年12月12日更新*：社区最新的代码中已经添加了libvirt的安装，将安装过程调整为先安装libvirt后做`virsh list`的检查，因此该步骤安装可以省略。\n\n*可选步骤*：在国内为了加快部署进度，可以修改host上软件源将软件源替换为[清华源](https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/ \" 清华源\")\n\n修改`/etc/apt/source.list`文件内容全部替换为\n\n```shell\n  # 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释\n  deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse\n  # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse\n  deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\n  # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\n  deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\n  # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\n  deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\n  # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\t\n```\n\n替换完成之后运行`sudo apt-get update`\n\n### 2.2 fuel脚本部署Euphrates\n\n下载x86版本fuel部署脚本并切换至5.02版本分支[3]\n\n```shell\ngit clone https://git.opnfv.org/fuel\ngit checkout opnfv-5.0.2\n```\n\n*2017年12月12日更新*：由于XCI的特性，社区的代码实时更新，使用`git fetch origin stable/euphrates && git checkout stable/euphrates`切换至Euphrates的最新稳定版代码，然后再部署。\n\n*Note*：最开始尝试部署时由于内存只有8G出现过未部署成功，因此需要适当削减部署时的配置，修改`fuel/mcp/config/scenario/defaults-x86_64.yaml`中ram的大小，以及`mcp/config/scenario/virtual/os-nosdn-nofeature-noha.yaml`中ram的大小，甚至可以减少一个计算节点`cmp02`。\n\n最简单的虚拟部署方式命令如下\n\n```shell\nci/deploy.sh -D -p virtual_kvm -l localhost -s os-nosdn-nofeature-noha\n```\n\n使用`deploy -h`可以常看使用帮助，常用的参数说明如下\n\n| -b   | 指定部署配置的目录可以使用本地文件和远程链接，配置文件的路径格式为`<base-uri>/labs/<lab-name>/<pod-name>.yaml`,默认路径为`./mcp/config` |\n| ---- | ---------------------------------------- |\n| -l   | 指明使用配置目录下哪个实验室的配置文件，如`-l lf`为使用linux基金会实验室的配置文件。当使用虚拟部署时甚至`-l`参数都可以不使用 |\n| -p   | 指明使用实验室下的哪一个POD，如`-p pod2`               |\n| -s   | 指明使用哪种部署场景，如`-s os-nosdn-nofeature-noha`指使用openstack作为VIM，不采用sdn控制器，无其他特性，不使用ha。其他场景可以在`fuel/mcp/config/scenario/`下看到 |\n\n使用ssh登录到生成的虚拟机中,登录虚拟机后使用`sudo su`命令即可切换成root用户。\n\n```shell\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.20.0.2\n```\n\n本次部署过程中并未指定节点的相关信息因此诸如控制节点、计算节点等信息是随机生成，在接下来的第二篇详细介绍。\n\n### 2.3 dashboard的访问\n\n由于部署的是虚拟环境，各网络都是内部网络（internal network）因此需要做路由转换才能够正常访问。\n\n首先需要找到控制节点的IP通过登录到配置节点cfg01查找其他节点，使用`arp -a`命令可以看到其他节点的IP。\n\n![其它节点IP](https://i.imgur.com/t09x2yW.jpg)\n\n登录到ctl01节点上查看文件`/etc/apache2/conf-available/openstack-dashboard.conf`可以得知dashboard页面的监听端口为8078。\n\n访问dashboard的方式有**两种**，第一种是在host上做端口映射；第二种是通过putty、xshell等终端登录工具做隧道。不管哪种方式由于fuel在部署时防火墙的配置中多了一些选项需要先对iptables做一些修改。\n\n首先在host上备份防火墙规则`iptables-save > rule.v4`,然后打开rule.v4修改`-A FORWARD -d 10.20.0.0/24 -o mcpcontrol -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT`为`-A FORWARD -d 10.20.0.0/24 -o mcpcontrol -j ACCEPT`，随后重新加载防火墙规则`iptables-restore rule.v4`。\n\n#### 2.3.1 隧道方式访问\n\n打开终端的配置页面增加隧道条目，如图所示将本机的8000端口映射到控制节点的8078端口\n\n![隧道配置](https://i.imgur.com/D1CDnUI.jpg)\n\n随后在本机的浏览器输入`127.0.0.1:8000`即可访问dashboard，**账户/密码：admin/opnfv_secret**。密码存放在控制节点的`/etc/keystone/keystone.conf`文件中，为`admin_token`参数的值。\n\n#### 2.3.2 host端口映射方式访问\n\n在host上的防火墙规则中添加一个端口映射，`iptables -t nat -A PREROUTING -d 192.168.2.235 -p tcp --dport 8000 -j DNAT --to-destination 10.20.0.118:8078`，随后直接访问host主机的8000端口即可登录dashboard。\n\n\n\n**参考链接**：\n\n1)[OPNFV官方WIKI](https://www.opnfv.org/software)\n\n2)[OPNFV 第五个版本发布](http://www.sdnlab.com/20009.html)\n\n3)[Euphrates安装手册](http://docs.opnfv.org/en/stable-euphrates/submodules/fuel/docs/release/installation/installation.instruction.html)\n\n\n\n\n\n\n\n\n\n","slug":"opnfv_Euphrates_install-01","published":1,"updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2wk000k6ijx50n2o908","content":"<h2 id=\"1-Euphrates新特性介绍\"><a href=\"#1-Euphrates新特性介绍\" class=\"headerlink\" title=\"1 Euphrates新特性介绍\"></a>1 Euphrates新特性介绍</h2><p>OPNFV社区于2017年10月24发布的第五个版本Euphrates（幼发拉底河，位于亚洲），新版本增加了对<strong><em>Kubernetes</em></strong>容器技术的支持，也就是说OPNFV的底层VIM不再仅仅是Openstack架构了，同时社区采用了<strong><em><a href=\"http://docs.opnfv.org/en/latest/submodules/releng-xci/docs/xci-overview.html#xci-overview\" target=\"_blank\" rel=\"noopener\">XCI</a></em></strong>（cross community continuous integration）跨社区持续集成技术，能够更快更好的使用上游社区最新的版本和代码，在MANO管理层集成了ETSI NFV的<strong><em>Open Baton</em></strong>项目。E版本的详细新特性如下[1][2]：</p>\n<ul>\n<li>底层架构增加：OPNFV即将开启容器之旅。Euphrates将Kubernetes和容器集成到端到端堆栈的多个组件，以及通过Kolla部署容器化OpenStack的能力，Kolla提供生产就绪的容器和部署工具，用于运行可扩展、快速、可靠的OpenStack云，并使用社区最佳实践升级。这些增强功能可以更轻松地管理基础设施、支持NFV中的原生云网络应用，以及轻权重控制平面功能，为运营商支持5G和IoT奠定基础。</li>\n<li>XCI持续集成：能够与最新的上游开源项目集成。在OPNFV第四个版本Danube中持续集成/持续部署（CI/CD）集成工作的基础上，Euphrates在OPNFV、OpenStack、OpenDaylight和FD.io中引入了XCI集成CI/CD管道的实现。OPNFVC CI管道并不需要官方的稳定版本，而是集成了上游项目的最新代码，以更快地解决错误并验证功能。这减少了新功能反馈和错误修复的时间，大大提升了创新的速度。XCI还可实现多分布式支持，促进开发人员之间的联系。</li>\n<li>电信级功能。通过整合Calipso项目，运营商现在可以对其复杂的虚拟网络进行可视化操作。结合现有的Barometer and Doctor项目中的遥测增强功能，用户可以获得强大的服务保障架构。Euphrates还包括ARM架构的性能改进，以及FD.io的3层性能。此外，Euphrates通过Moon给用户带来新的安全的管理功能，持续改进了服务功能链（SFC）、FD.io、EVPN性能。Euphrates还将OVN网络虚拟化项目以及最新版本的其他上游项目整合在一起，为网络控制提供额外的选择。</li>\n<li>测试和集成功能增强：OPNFV集成和测试工作提供广泛的工具来测试NFV云、VNF和完整的网络服务方面取得了重大进展。包括Sample VNF在内的新项目提供对VIM/NFVI层的测试，以及接近实际应用工作负载的应用程序。NFVBench项目提供了端到端数据平台基准测试架构。</li>\n</ul>\n<h2 id=\"2-Euphrates-安装\"><a href=\"#2-Euphrates-安装\" class=\"headerlink\" title=\"2 Euphrates 安装\"></a>2 Euphrates 安装</h2><h3 id=\"2-1-配置要求\"><a href=\"#2-1-配置要求\" class=\"headerlink\" title=\"2.1 配置要求\"></a>2.1 配置要求</h3><p>官方对于虚拟部署的配置要求如下</p>\n<table>\n<thead>\n<tr>\n<th>硬件</th>\n<th>配置需求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1 Jumpserver</td>\n<td>1个物理的节点用于安装Salt Master虚拟机和其他节点的虚拟机</td>\n</tr>\n<tr>\n<td>CPU</td>\n<td>最少一个插槽并且支持虚拟化</td>\n</tr>\n<tr>\n<td>RAM</td>\n<td>最小32G内存（与VNF的工作负载有关）</td>\n</tr>\n<tr>\n<td>Disk</td>\n<td>最小100G（SSD或者HDD（15k rpm最佳））</td>\n</tr>\n</tbody>\n</table>\n<p>本文采用fuel部署脚本在一个服务器上部署虚拟POD，硬件配置及系统如下</p>\n<ul>\n<li>Dell R720服务器，8核E5-2609，24G内存</li>\n<li>ubuntu 16.06 server，8 cpu，24G内存，300G磁盘</li>\n</ul>\n<p>本文中将称ubuntu 16.04系统为host。</p>\n<h3 id=\"2-1-部署前准备\"><a href=\"#2-1-部署前准备\" class=\"headerlink\" title=\"2.1 部署前准备\"></a>2.1 部署前准备</h3><h4 id=\"2-1-1-CPU开启KVM虚拟化\"><a href=\"#2-1-1-CPU开启KVM虚拟化\" class=\"headerlink\" title=\"2.1.1 CPU开启KVM虚拟化\"></a>2.1.1 CPU开启KVM虚拟化</h4><p>本次安装使用的是在ESXI上安装的虚拟机，需要开启CPU的KVM虚拟化支持</p>\n<p><img src=\"https://i.imgur.com/Xo9eSSj.jpg\" alt=\"\"></p>\n<h4 id=\"2-1-2-虚拟机管理工具virsh\"><a href=\"#2-1-2-虚拟机管理工具virsh\" class=\"headerlink\" title=\"2.1.2 虚拟机管理工具virsh\"></a>2.1.2 虚拟机管理工具virsh</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get -y install libvirt-bin</span><br></pre></td></tr></table></figure>\n<p><em>2017年12月12日更新</em>：社区最新的代码中已经添加了libvirt的安装，将安装过程调整为先安装libvirt后做<code>virsh list</code>的检查，因此该步骤安装可以省略。</p>\n<p><em>可选步骤</em>：在国内为了加快部署进度，可以修改host上软件源将软件源替换为<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\" title=\" 清华源\" target=\"_blank\" rel=\"noopener\">清华源</a></p>\n<p>修改<code>/etc/apt/source.list</code>文件内容全部替换为</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br></pre></td></tr></table></figure>\n<p>替换完成之后运行<code>sudo apt-get update</code></p>\n<h3 id=\"2-2-fuel脚本部署Euphrates\"><a href=\"#2-2-fuel脚本部署Euphrates\" class=\"headerlink\" title=\"2.2 fuel脚本部署Euphrates\"></a>2.2 fuel脚本部署Euphrates</h3><p>下载x86版本fuel部署脚本并切换至5.02版本分支[3]</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://git.opnfv.org/fuel</span><br><span class=\"line\">git checkout opnfv-5.0.2</span><br></pre></td></tr></table></figure>\n<p><em>2017年12月12日更新</em>：由于XCI的特性，社区的代码实时更新，使用<code>git fetch origin stable/euphrates &amp;&amp; git checkout stable/euphrates</code>切换至Euphrates的最新稳定版代码，然后再部署。</p>\n<p><em>Note</em>：最开始尝试部署时由于内存只有8G出现过未部署成功，因此需要适当削减部署时的配置，修改<code>fuel/mcp/config/scenario/defaults-x86_64.yaml</code>中ram的大小，以及<code>mcp/config/scenario/virtual/os-nosdn-nofeature-noha.yaml</code>中ram的大小，甚至可以减少一个计算节点<code>cmp02</code>。</p>\n<p>最简单的虚拟部署方式命令如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ci/deploy.sh -D -p virtual_kvm -l localhost -s os-nosdn-nofeature-noha</span><br></pre></td></tr></table></figure>\n<p>使用<code>deploy -h</code>可以常看使用帮助，常用的参数说明如下</p>\n<table>\n<thead>\n<tr>\n<th>-b</th>\n<th>指定部署配置的目录可以使用本地文件和远程链接，配置文件的路径格式为<code>&lt;base-uri&gt;/labs/&lt;lab-name&gt;/&lt;pod-name&gt;.yaml</code>,默认路径为<code>./mcp/config</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-l</td>\n<td>指明使用配置目录下哪个实验室的配置文件，如<code>-l lf</code>为使用linux基金会实验室的配置文件。当使用虚拟部署时甚至<code>-l</code>参数都可以不使用</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>指明使用实验室下的哪一个POD，如<code>-p pod2</code></td>\n</tr>\n<tr>\n<td>-s</td>\n<td>指明使用哪种部署场景，如<code>-s os-nosdn-nofeature-noha</code>指使用openstack作为VIM，不采用sdn控制器，无其他特性，不使用ha。其他场景可以在<code>fuel/mcp/config/scenario/</code>下看到</td>\n</tr>\n</tbody>\n</table>\n<p>使用ssh登录到生成的虚拟机中,登录虚拟机后使用<code>sudo su</code>命令即可切换成root用户。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.20.0.2</span><br></pre></td></tr></table></figure>\n<p>本次部署过程中并未指定节点的相关信息因此诸如控制节点、计算节点等信息是随机生成，在接下来的第二篇详细介绍。</p>\n<h3 id=\"2-3-dashboard的访问\"><a href=\"#2-3-dashboard的访问\" class=\"headerlink\" title=\"2.3 dashboard的访问\"></a>2.3 dashboard的访问</h3><p>由于部署的是虚拟环境，各网络都是内部网络（internal network）因此需要做路由转换才能够正常访问。</p>\n<p>首先需要找到控制节点的IP通过登录到配置节点cfg01查找其他节点，使用<code>arp -a</code>命令可以看到其他节点的IP。</p>\n<p><img src=\"https://i.imgur.com/t09x2yW.jpg\" alt=\"其它节点IP\"></p>\n<p>登录到ctl01节点上查看文件<code>/etc/apache2/conf-available/openstack-dashboard.conf</code>可以得知dashboard页面的监听端口为8078。</p>\n<p>访问dashboard的方式有<strong>两种</strong>，第一种是在host上做端口映射；第二种是通过putty、xshell等终端登录工具做隧道。不管哪种方式由于fuel在部署时防火墙的配置中多了一些选项需要先对iptables做一些修改。</p>\n<p>首先在host上备份防火墙规则<code>iptables-save &gt; rule.v4</code>,然后打开rule.v4修改<code>-A FORWARD -d 10.20.0.0/24 -o mcpcontrol -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</code>为<code>-A FORWARD -d 10.20.0.0/24 -o mcpcontrol -j ACCEPT</code>，随后重新加载防火墙规则<code>iptables-restore rule.v4</code>。</p>\n<h4 id=\"2-3-1-隧道方式访问\"><a href=\"#2-3-1-隧道方式访问\" class=\"headerlink\" title=\"2.3.1 隧道方式访问\"></a>2.3.1 隧道方式访问</h4><p>打开终端的配置页面增加隧道条目，如图所示将本机的8000端口映射到控制节点的8078端口</p>\n<p><img src=\"https://i.imgur.com/D1CDnUI.jpg\" alt=\"隧道配置\"></p>\n<p>随后在本机的浏览器输入<code>127.0.0.1:8000</code>即可访问dashboard，<strong>账户/密码：admin/opnfv_secret</strong>。密码存放在控制节点的<code>/etc/keystone/keystone.conf</code>文件中，为<code>admin_token</code>参数的值。</p>\n<h4 id=\"2-3-2-host端口映射方式访问\"><a href=\"#2-3-2-host端口映射方式访问\" class=\"headerlink\" title=\"2.3.2 host端口映射方式访问\"></a>2.3.2 host端口映射方式访问</h4><p>在host上的防火墙规则中添加一个端口映射，<code>iptables -t nat -A PREROUTING -d 192.168.2.235 -p tcp --dport 8000 -j DNAT --to-destination 10.20.0.118:8078</code>，随后直接访问host主机的8000端口即可登录dashboard。</p>\n<p><strong>参考链接</strong>：</p>\n<p>1)<a href=\"https://www.opnfv.org/software\" target=\"_blank\" rel=\"noopener\">OPNFV官方WIKI</a></p>\n<p>2)<a href=\"http://www.sdnlab.com/20009.html\" target=\"_blank\" rel=\"noopener\">OPNFV 第五个版本发布</a></p>\n<p>3)<a href=\"http://docs.opnfv.org/en/stable-euphrates/submodules/fuel/docs/release/installation/installation.instruction.html\" target=\"_blank\" rel=\"noopener\">Euphrates安装手册</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-Euphrates新特性介绍\"><a href=\"#1-Euphrates新特性介绍\" class=\"headerlink\" title=\"1 Euphrates新特性介绍\"></a>1 Euphrates新特性介绍</h2><p>OPNFV社区于2017年10月24发布的第五个版本Euphrates（幼发拉底河，位于亚洲），新版本增加了对<strong><em>Kubernetes</em></strong>容器技术的支持，也就是说OPNFV的底层VIM不再仅仅是Openstack架构了，同时社区采用了<strong><em><a href=\"http://docs.opnfv.org/en/latest/submodules/releng-xci/docs/xci-overview.html#xci-overview\" target=\"_blank\" rel=\"noopener\">XCI</a></em></strong>（cross community continuous integration）跨社区持续集成技术，能够更快更好的使用上游社区最新的版本和代码，在MANO管理层集成了ETSI NFV的<strong><em>Open Baton</em></strong>项目。E版本的详细新特性如下[1][2]：</p>\n<ul>\n<li>底层架构增加：OPNFV即将开启容器之旅。Euphrates将Kubernetes和容器集成到端到端堆栈的多个组件，以及通过Kolla部署容器化OpenStack的能力，Kolla提供生产就绪的容器和部署工具，用于运行可扩展、快速、可靠的OpenStack云，并使用社区最佳实践升级。这些增强功能可以更轻松地管理基础设施、支持NFV中的原生云网络应用，以及轻权重控制平面功能，为运营商支持5G和IoT奠定基础。</li>\n<li>XCI持续集成：能够与最新的上游开源项目集成。在OPNFV第四个版本Danube中持续集成/持续部署（CI/CD）集成工作的基础上，Euphrates在OPNFV、OpenStack、OpenDaylight和FD.io中引入了XCI集成CI/CD管道的实现。OPNFVC CI管道并不需要官方的稳定版本，而是集成了上游项目的最新代码，以更快地解决错误并验证功能。这减少了新功能反馈和错误修复的时间，大大提升了创新的速度。XCI还可实现多分布式支持，促进开发人员之间的联系。</li>\n<li>电信级功能。通过整合Calipso项目，运营商现在可以对其复杂的虚拟网络进行可视化操作。结合现有的Barometer and Doctor项目中的遥测增强功能，用户可以获得强大的服务保障架构。Euphrates还包括ARM架构的性能改进，以及FD.io的3层性能。此外，Euphrates通过Moon给用户带来新的安全的管理功能，持续改进了服务功能链（SFC）、FD.io、EVPN性能。Euphrates还将OVN网络虚拟化项目以及最新版本的其他上游项目整合在一起，为网络控制提供额外的选择。</li>\n<li>测试和集成功能增强：OPNFV集成和测试工作提供广泛的工具来测试NFV云、VNF和完整的网络服务方面取得了重大进展。包括Sample VNF在内的新项目提供对VIM/NFVI层的测试，以及接近实际应用工作负载的应用程序。NFVBench项目提供了端到端数据平台基准测试架构。</li>\n</ul>\n<h2 id=\"2-Euphrates-安装\"><a href=\"#2-Euphrates-安装\" class=\"headerlink\" title=\"2 Euphrates 安装\"></a>2 Euphrates 安装</h2><h3 id=\"2-1-配置要求\"><a href=\"#2-1-配置要求\" class=\"headerlink\" title=\"2.1 配置要求\"></a>2.1 配置要求</h3><p>官方对于虚拟部署的配置要求如下</p>\n<table>\n<thead>\n<tr>\n<th>硬件</th>\n<th>配置需求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1 Jumpserver</td>\n<td>1个物理的节点用于安装Salt Master虚拟机和其他节点的虚拟机</td>\n</tr>\n<tr>\n<td>CPU</td>\n<td>最少一个插槽并且支持虚拟化</td>\n</tr>\n<tr>\n<td>RAM</td>\n<td>最小32G内存（与VNF的工作负载有关）</td>\n</tr>\n<tr>\n<td>Disk</td>\n<td>最小100G（SSD或者HDD（15k rpm最佳））</td>\n</tr>\n</tbody>\n</table>\n<p>本文采用fuel部署脚本在一个服务器上部署虚拟POD，硬件配置及系统如下</p>\n<ul>\n<li>Dell R720服务器，8核E5-2609，24G内存</li>\n<li>ubuntu 16.06 server，8 cpu，24G内存，300G磁盘</li>\n</ul>\n<p>本文中将称ubuntu 16.04系统为host。</p>\n<h3 id=\"2-1-部署前准备\"><a href=\"#2-1-部署前准备\" class=\"headerlink\" title=\"2.1 部署前准备\"></a>2.1 部署前准备</h3><h4 id=\"2-1-1-CPU开启KVM虚拟化\"><a href=\"#2-1-1-CPU开启KVM虚拟化\" class=\"headerlink\" title=\"2.1.1 CPU开启KVM虚拟化\"></a>2.1.1 CPU开启KVM虚拟化</h4><p>本次安装使用的是在ESXI上安装的虚拟机，需要开启CPU的KVM虚拟化支持</p>\n<p><img src=\"https://i.imgur.com/Xo9eSSj.jpg\" alt=\"\"></p>\n<h4 id=\"2-1-2-虚拟机管理工具virsh\"><a href=\"#2-1-2-虚拟机管理工具virsh\" class=\"headerlink\" title=\"2.1.2 虚拟机管理工具virsh\"></a>2.1.2 虚拟机管理工具virsh</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get -y install libvirt-bin</span><br></pre></td></tr></table></figure>\n<p><em>2017年12月12日更新</em>：社区最新的代码中已经添加了libvirt的安装，将安装过程调整为先安装libvirt后做<code>virsh list</code>的检查，因此该步骤安装可以省略。</p>\n<p><em>可选步骤</em>：在国内为了加快部署进度，可以修改host上软件源将软件源替换为<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\" title=\" 清华源\" target=\"_blank\" rel=\"noopener\">清华源</a></p>\n<p>修改<code>/etc/apt/source.list</code>文件内容全部替换为</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta\">#</span> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br></pre></td></tr></table></figure>\n<p>替换完成之后运行<code>sudo apt-get update</code></p>\n<h3 id=\"2-2-fuel脚本部署Euphrates\"><a href=\"#2-2-fuel脚本部署Euphrates\" class=\"headerlink\" title=\"2.2 fuel脚本部署Euphrates\"></a>2.2 fuel脚本部署Euphrates</h3><p>下载x86版本fuel部署脚本并切换至5.02版本分支[3]</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://git.opnfv.org/fuel</span><br><span class=\"line\">git checkout opnfv-5.0.2</span><br></pre></td></tr></table></figure>\n<p><em>2017年12月12日更新</em>：由于XCI的特性，社区的代码实时更新，使用<code>git fetch origin stable/euphrates &amp;&amp; git checkout stable/euphrates</code>切换至Euphrates的最新稳定版代码，然后再部署。</p>\n<p><em>Note</em>：最开始尝试部署时由于内存只有8G出现过未部署成功，因此需要适当削减部署时的配置，修改<code>fuel/mcp/config/scenario/defaults-x86_64.yaml</code>中ram的大小，以及<code>mcp/config/scenario/virtual/os-nosdn-nofeature-noha.yaml</code>中ram的大小，甚至可以减少一个计算节点<code>cmp02</code>。</p>\n<p>最简单的虚拟部署方式命令如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ci/deploy.sh -D -p virtual_kvm -l localhost -s os-nosdn-nofeature-noha</span><br></pre></td></tr></table></figure>\n<p>使用<code>deploy -h</code>可以常看使用帮助，常用的参数说明如下</p>\n<table>\n<thead>\n<tr>\n<th>-b</th>\n<th>指定部署配置的目录可以使用本地文件和远程链接，配置文件的路径格式为<code>&lt;base-uri&gt;/labs/&lt;lab-name&gt;/&lt;pod-name&gt;.yaml</code>,默认路径为<code>./mcp/config</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-l</td>\n<td>指明使用配置目录下哪个实验室的配置文件，如<code>-l lf</code>为使用linux基金会实验室的配置文件。当使用虚拟部署时甚至<code>-l</code>参数都可以不使用</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>指明使用实验室下的哪一个POD，如<code>-p pod2</code></td>\n</tr>\n<tr>\n<td>-s</td>\n<td>指明使用哪种部署场景，如<code>-s os-nosdn-nofeature-noha</code>指使用openstack作为VIM，不采用sdn控制器，无其他特性，不使用ha。其他场景可以在<code>fuel/mcp/config/scenario/</code>下看到</td>\n</tr>\n</tbody>\n</table>\n<p>使用ssh登录到生成的虚拟机中,登录虚拟机后使用<code>sudo su</code>命令即可切换成root用户。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.20.0.2</span><br></pre></td></tr></table></figure>\n<p>本次部署过程中并未指定节点的相关信息因此诸如控制节点、计算节点等信息是随机生成，在接下来的第二篇详细介绍。</p>\n<h3 id=\"2-3-dashboard的访问\"><a href=\"#2-3-dashboard的访问\" class=\"headerlink\" title=\"2.3 dashboard的访问\"></a>2.3 dashboard的访问</h3><p>由于部署的是虚拟环境，各网络都是内部网络（internal network）因此需要做路由转换才能够正常访问。</p>\n<p>首先需要找到控制节点的IP通过登录到配置节点cfg01查找其他节点，使用<code>arp -a</code>命令可以看到其他节点的IP。</p>\n<p><img src=\"https://i.imgur.com/t09x2yW.jpg\" alt=\"其它节点IP\"></p>\n<p>登录到ctl01节点上查看文件<code>/etc/apache2/conf-available/openstack-dashboard.conf</code>可以得知dashboard页面的监听端口为8078。</p>\n<p>访问dashboard的方式有<strong>两种</strong>，第一种是在host上做端口映射；第二种是通过putty、xshell等终端登录工具做隧道。不管哪种方式由于fuel在部署时防火墙的配置中多了一些选项需要先对iptables做一些修改。</p>\n<p>首先在host上备份防火墙规则<code>iptables-save &gt; rule.v4</code>,然后打开rule.v4修改<code>-A FORWARD -d 10.20.0.0/24 -o mcpcontrol -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</code>为<code>-A FORWARD -d 10.20.0.0/24 -o mcpcontrol -j ACCEPT</code>，随后重新加载防火墙规则<code>iptables-restore rule.v4</code>。</p>\n<h4 id=\"2-3-1-隧道方式访问\"><a href=\"#2-3-1-隧道方式访问\" class=\"headerlink\" title=\"2.3.1 隧道方式访问\"></a>2.3.1 隧道方式访问</h4><p>打开终端的配置页面增加隧道条目，如图所示将本机的8000端口映射到控制节点的8078端口</p>\n<p><img src=\"https://i.imgur.com/D1CDnUI.jpg\" alt=\"隧道配置\"></p>\n<p>随后在本机的浏览器输入<code>127.0.0.1:8000</code>即可访问dashboard，<strong>账户/密码：admin/opnfv_secret</strong>。密码存放在控制节点的<code>/etc/keystone/keystone.conf</code>文件中，为<code>admin_token</code>参数的值。</p>\n<h4 id=\"2-3-2-host端口映射方式访问\"><a href=\"#2-3-2-host端口映射方式访问\" class=\"headerlink\" title=\"2.3.2 host端口映射方式访问\"></a>2.3.2 host端口映射方式访问</h4><p>在host上的防火墙规则中添加一个端口映射，<code>iptables -t nat -A PREROUTING -d 192.168.2.235 -p tcp --dport 8000 -j DNAT --to-destination 10.20.0.118:8078</code>，随后直接访问host主机的8000端口即可登录dashboard。</p>\n<p><strong>参考链接</strong>：</p>\n<p>1)<a href=\"https://www.opnfv.org/software\" target=\"_blank\" rel=\"noopener\">OPNFV官方WIKI</a></p>\n<p>2)<a href=\"http://www.sdnlab.com/20009.html\" target=\"_blank\" rel=\"noopener\">OPNFV 第五个版本发布</a></p>\n<p>3)<a href=\"http://docs.opnfv.org/en/stable-euphrates/submodules/fuel/docs/release/installation/installation.instruction.html\" target=\"_blank\" rel=\"noopener\">Euphrates安装手册</a></p>\n"},{"title":"OPNFV Euphrates 安装（三）","date":"2018-03-06T09:50:43.000Z","keywords":["dpdk"],"description":["OPNFV Euphrates DPDK scenario deploy"],"summary_img":["http://dpdk.org/logos/dpdk.png"],"top":null,"_content":"\n## 1 <span id=\"jump0\">前言</span>\n\n近期在研究NFV的网络性能测试，考虑到NFV的网络性能的转发瓶颈，现在的商用NFV产品都会使用诸如DPDK、SR_IOV等网络加速技术，相应的也就需要对应的硬件支持。在尝试部署后本文总结一下使用OPNFV的E版本部署DPDK场景的过程，部署过程中需要修改配置文件以匹配硬件。\n\n## 2 配置文件修改\n\n### 2.1 部署节点配置修改\n\n部署节点的配置文件修改主要是增加DPDK网卡的PCI地址和MAC地址，原配置文件参看[Euphrates部署(二)](http://ylong.net.cn/opnfv_Euphrates_install(02).html)的2.1节。\n\n#### 2.1.1 idf-pod1.yaml修改\n\n在network字段下增加dpdk网卡名，总线地址，接口参数三项\n\n```yaml\n    network:\n      node:\n        # Ordered-list, index should be in sync with node index in PDF\n        - interfaces: &interfaces\n            # Ordered-list, index should be in sync with interface index in PDF\n            - 'eno1'\n            - 'eno2'\n            - 'eno3'\n            - 'eno4'\n            - 'enp66s0f0'\n            - 'enp66s0f1'\n          busaddr: &busaddr\n            # Bus-info reported by `ethtool -i ethX`\n            - '0000:01:00.0'\n            - '0000:01:00.1'\n            - '0000:02:00.0'\n            - '0000:02:00.1'\n            - '0000:42:00.0'\n            - '0000:42:00.1'\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n```\n\n#### 2.1.2 pod1.yaml修改\n\n修改private网络接口为4，接口数按照idf-pod1.yaml的`busaddr`字段下网卡总线地址顺序确定，从0开始计数。\n\n```yaml\n  private:\n    interface: 4\n    vlan: 102\n    network: 192.168.102.0\n    mask: 24\n```\n\n在compute节点上增加DPDK网卡的MAC地址，以及添加`DPDK`特性字段，**Fuel在部署过程中并不是按照节点名称来确定节点类型的，而是按照节点顺序来配置，前三个节点为控制节点，后两个节点为计算节点**。\n\n```yaml\n  - name: compute1\n    node: *nodeparas\n    disks: *disks_A\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.201\n      mac_address: \"44:A8:42:1A:70:BE\"\n    interfaces:                           # physical interface list\n      - mac_address: \"44:a8:42:14:ee:64\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:65\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:66\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:67\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"00:1b:21:89:5e:f2\"\n        speed: 10gb\n        feature: 'dpdk'\n      - mac_address: \"00:1b:21:89:5e:f3\"\n        speed: 10gb\n        feature: 'dpdk'\n    fixed_ips:\n      admin: 10.20.0.14\n      mgmt: 192.168.101.14\n      public: 192.168.20.14\n```\n\n### 2.2 openstack部署相关配置文件修改\n\nOPNFV的Fuel部署中目前只有一种策略默认支持DPDK，即`os-nosdn-ovs-ha`，打开`mcp/config/scenario/baremetal/os-nosdn-ovs-ha.yaml`文件开一看DPDK字样。\n\n```yaml\n---\ncluster:\n  domain: baremetal-mcp-ocata-ovs-dpdk-ha.local\n  states:\n    - maas\n    - baremetal_init\n    - virtual_control_plane\n    - dpdk\n    - openstack_ha\n    - networks\n    - networking_gw\nvirtual:\n  nodes:\n    - cfg01\n    - mas01\n  cfg01:\n    vcpus: 4\n    ram: 6144\n  mas01:\n    vcpus: 4\n    ram: 6144\n```\n\n在部署DPDK场景前需要修改配置文件`mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/init.yml`[1],配置文件的内容如下：\n\n```yaml\n---\nclasses:\n  - cluster.baremetal-mcp-ocata-common-ha.openstack_init\nparameters:\n  _param:\n    neutron_tenant_network_types: \"flat,vlan\"\n    neutron_tenant_vlan_range: \"1000:1030\"\n    nova_cpu_pinning: \"1-3,4,6\"\n    compute_hugepages_size: 2M\n    compute_hugepages_count: 8192\n    compute_hugepages_mount: /mnt/hugepages_2M\n    compute_kernel_isolcpu: 1,2,3,4,5,6,7\n    compute_dpdk_driver: uio\n    compute_ovs_pmd_cpu_mask: \"0x80\"\n    compute_ovs_dpdk_socket_mem: \"2048,2048\"\n    compute_ovs_dpdk_lcore_mask: \"0x20\"\n    compute_ovs_memory_channels: \"2\"\n  linux:\n    system:\n      repo:\n        uca:\n          source: \"deb http://ubuntu-cloud.archive.canonical.com/ubuntu xenial-updates/ocata main\"\n          architectures: amd64\n          key_id: EC4926EA\n          key_server: keyserver.ubuntu.com\n      kernel:\n        sysctl:\n          net.ipv4.tcp_congestion_control: yeah\n          net.ipv4.tcp_slow_start_after_idle: 0\n          net.ipv4.tcp_fin_timeout: 30\n```\n\n配置文件的参数说明如下：\n\n- neutron_tenant_network_types：表明openstack中将要使用的网络类型，vlan是指创建的虚拟机之间通信的网络类型；\n- neutron_tenant_vlan_range：openstack创建的vlan网络vlan范围，需要在物理交换机上进行配置运行该段的vlan数据包通过，否则创建的虚拟机无法进行通信；\n- nova_cpu_pinning：计算节点分配给openstack的cpu核心数目，本次部署使用的物理服务器核心为2（CPU）*4（core），共有8个核心，openvswitch和计算节点自身也需要占用cpu资源因此不能完全分配给openstack，同时考虑到dpdk策略下vswitch的核心独占，该项数值与compute_ovs_pmd_cpu_mask和compute_ovs_dpdk_lcore_mask是互斥的；\n- compute_hugepages_size：计算节点的大页内存配置，默认一个页面是2M；\n- compute_hugepages_count：大页内存页面个数，本次部署中计算节点的物理内存是32G，本次分配给计算资源的大页内存总数为8192*2M=16G内存；\n- compute_kernel_isolcpu：计算节点cpu核心隔离，设置计算节点的内核*不要使用*这些核心；\n- compute_dpdk_driver：dpdk使用的内核模块；\n- compute_ovs_pmd_cpu_mask：为了保证转发性能需要给ovs的PMD分配核心独占，CPU核心的分配采用掩码的方式，如本文中将cpu7分配给OVS，则掩码为0x80，cpu数从0开始计算，同时尽量**将DPDK和OVS分配的核心在同一个NUMA节点上**，关于OVS下的DPDK配置可以查阅官方手册[2];\n- compute_ovs_dpdk_socket_mem：分配给dpdk的大页内存数，每个NUMA节点各4个G；\n- compute_ovs_dpdk_lcore_mask：ovs中dpdk占用核心，同样采用掩码计算方式，最好与dpdk网卡所在NUMA节点一致，可以通过查看`/sys/bus/pci/devices/`目录下对应网卡总线的numa_node值查看，如dpdk网卡总线值为0000:42:00.0则使用命令`cat /sys/bus/pci/devices/0000\\:42\\:00.0/numa_node`查看所在NUMA节点；\n- compute_ovs_memory_channels：内存通道，对应的物理服务器内存所使用的通道数；\n\n\n然后修改dpdk网卡所使用的驱动，配置文件`mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/compute.yml`默认使用的是`igb_uio`[3]由于部署的系统中没有`igb_uio`驱动，因此改为使用`uio_pci_generic`驱动。\n\n配置完上述文件后使用`sudo ci/deploy.sh -b file:///home/opnfv/fuel/mcp/config/ -l bii -p pod1 -s os-nosdn-ovs-ha -B br-pxe,br-ctl -D `命令部署即可，推荐使用下述命令部署：\n\n```shell\nsudo nohup ci/deploy.sh -b file:///home/opnfv/fuel/mcp/config/ -l bii -p pod1 -s os-nosdn-ovs-ha -B br-pxe,br-ctl -D > opnfv_install_date +%Y-%m-%d`.log 2>&1 &\n```\n\n部署过程不占用终端，还可以通过`tail -f opnfv_install_date[date].log `查看部署过程。\n\n【NOTE】当前的部署完成后存在一个BUG，网络服务的外网不正常，通过`service networking status`参看是否有错误。创建的虚拟机要想访问外网`float-to-ex`网桥需要存在，或者使用`route -n`查看是否存在能够访问外网的网关。\n\n```shell\nroot@cmp001:~# brctl show\nbridge name\tbridge id\t\tSTP enabled\tinterfaces\nbr-ctl\t\t8000.44a84214ee66\tno\t\teno3.101\nbr-ex\t\t8000.1efd4c8920ac\tno\t\teno2\n\t\t\t\t\t\t\t           float-to-ex\nvirbr0\t\t8000.525400b2f405\tyes\t\tvirbr0-nic\n\nroot@cmp001:~# route -n\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0.0.0.0         192.168.20.1    0.0.0.0         UG    0      0        0 br-ex\n10.20.0.0       0.0.0.0         255.255.255.0   U     0      0        0 eno1\n192.168.20.0    0.0.0.0         255.255.255.0   U     0      0        0 br-ex\n192.168.101.0   0.0.0.0         255.255.255.0   U     0      0        0 br-ctl\n192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0\n```\n\n如不存在则需要重启网络服务`service networking restart`\n\n错误1：\n\n重启网络失败，通过`journalctl -xe`查看错误原因\n\n![重启网络失败](https://i.imgur.com/QfUS2Rr.jpg)\n\n先将`/etc/network/if-up.d/route-br-ex`中的路由配置注释，然后使用`ip addr flush dev br-ctl`和`ip addr flush dev br-ex`（注意若使用的是`mgmt`网络访问会导致终端连接断开，在清除`br-ctl`的网址时请使用`pxe`网络的地址连接计算节点），随后使用`service networking restart`重启网络。\n\n错误2:\n\n创建虚拟机错误，查看`vim /var/log/nova/nova-compute.log`显示ovs权限不足，需要修改计算节点neutron插件中ovs配置`/etc/neutron/plugins/ml2/openvswitch_agent.ini`将`vhostuser_socket_dir = /var/run/openvswitch `改为`vhostuser_socket_dir = /var/run/openvswitch-vhost`\n\n随后重启ovs服务`service neutron-openvswitch-agent restart`。\n\n\n\n## 3 使能第二个DPDK网口\n\n当前Fuel部署DPDK仅支持一块网卡配置，一般来说DPDK网卡中网口个数都是成对的，因此需要手动配置第二个DPDK网口。\n\n### 3.1 控制节点neutron配置修改\n\n#### 3.1.1 新增网络MTU修改\n\n修改controller节点的`/etc/neutron/plugins/ml2/ml2_conf.ini`中\n\n```ini\n[ml2]\nphysical_network_mtus = physnet1:1500,physnet2:1500 \n```\n\n改为`physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500`\n\n#### 3.1.2 vlan配置\n\n修改controller节点的`/etc/neutron/plugins/ml2/ml2_conf.ini`中\n\n```ini\n[ml2_type_vlan]\nnetwork_vlan_ranges = physnet2:1000:1030\n```\n\n改为`network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060`\n\n**同时需要在物理交换机上配置1031~1060段的vlan支持。**\n\n修改完成后使用`service neutron-server restart`重启neutron服务。\n\n【Tips】因为需要修改三个控制节点，可以使用如下命令修改\n\n```shell\nsed -i 's/^physical_network_mtus =.*$/physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500/g' /etc/neutron/plugins/ml2/ml2_conf.ini\nsed -i 's/^network_vlan_ranges =.*$/network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060/g' /etc/neutron/plugins/ml2/ml2_conf.ini\n```\n\n配合saltstack命令可以更便捷的修改三个控制节点，登录到cfg01节点使用salt命令修改控制节点\n\n```shell\nroot@cfg01:~# salt -C \"ctl*\" cmd.run \"sed -i 's/^physical_network_mtus =.*$/physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500/g' /etc/neutron/plugins/ml2/ml2_conf.ini\"\nroot@cfg01:~# salt -C \"ctl*\" cmd.run \"sed -i 's/^network_vlan_ranges =.*$/network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060/g' /etc/neutron/plugins/ml2/ml2_conf.ini\"\nroot@cfg01:~# salt -C \"ctl*\" cmd.run \"service neutron-server restart\"\n```\n\n### 3.2 计算节点neutron配置修改\n\n修改节点节点的`/etc/neutron/plugins/ml2/openvswitch_agent.ini`中ovs段\n\n```ini\n[ovs]\nbridge_mappings = physnet1:br-floating,physnet2:br-prv \n```\n\n改为`bridge_mappings = physnet1:br-floating,physnet2:br-prv,physnet3:br-prv1`，随后重启neutron服务`service neutron-openvswitch-agent restart`\n\n[Tips]使用如下命令修改，同样的配合saltstack的命令可以更便捷的修改两个控制节点\n\n```shell\nsed -i 's/^bridge_mappings = .*$/bridge_mappings = physnet1:br-floating,physnet2:br-prv,physnet3:br-prv1/g' /etc/neutron/plugins/ml2/openvswitch_agent.ini\n```\n\n重启完neutron服务后通过`ovs-vsctl show`可以看到已经生成了一个br-prv1的网桥，如果没有生成，在控制节点上检查网络代理服务是否正常\n\n```shell\nroot@ctl01:~# openstack network agent list\n+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+\n| ID                                   | Agent Type         | Host   | Availability Zone | Alive | State | Binary                    |\n+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+\n| 03ee7d4d-f17a-4ca2-b864-71decdd58bac | Metadata agent     | cmp002 | None              | True  | UP    | neutron-metadata-agent    |\n| 63b23081-2844-4712-a9d9-b5da80596558 | Open vSwitch agent | cmp001 | None              | True  | UP    | neutron-openvswitch-agent |\n| 69acde22-0890-4e90-9f26-c20e69dace43 | DHCP agent         | cmp001 | nova              | True  | UP    | neutron-dhcp-agent        |\n| 73ed4645-c22d-4150-a7aa-bd59474b5f59 | L3 agent           | cmp002 | nova              | True  | UP    | neutron-l3-agent          |\n| b8e1e749-2254-48d7-ae46-54a6223971d1 | Open vSwitch agent | cmp002 | None              | True  | UP    | neutron-openvswitch-agent |\n| bb0329cf-021b-42b4-a0b0-749889f5c619 | Metadata agent     | cmp001 | None              | True  | UP    | neutron-metadata-agent    |\n| e0c05cb5-16c8-4da4-8eb2-d22087b69402 | DHCP agent         | cmp002 | nova              | True  | UP    | neutron-dhcp-agent        |\n| ed1ed0f4-d3da-4486-828a-40f4a1759a7a | L3 agent           | cmp001 | nova              | True  | UP    | neutron-l3-agent          |\n+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+\n```\n\nbr-prv1成功创建后需要手动添加dpdk网卡，首先为第二个网卡加载驱动\n\n```shell\nroot@cmp001:~# ifconfig enp66s0f1 down\nroot@cmp001:~# dpdk-devbind -b uio_pci_generic 42:00.1\nroot@cmp001:~# dpdk-devbind -s\n\nNetwork devices using DPDK-compatible driver\n============================================\n0000:42:00.0 '82599ES 10-Gigabit SFI/SFP+ Network Connection' drv=uio_pci_generic unused=ixgbe\n0000:42:00.1 '82599ES 10-Gigabit SFI/SFP+ Network Connection' drv=uio_pci_generic unused=ixgbe\n```\n\n随后在ovs中配置dpdk网卡\n\n```shell\nroot@cmp001:~# ovs-vsctl add-port br-prv1 dpdk1 -- set interface dpdk0 type=dpdk options:dpdk-devargs=0000:42:00.1 options:n_rxq=2\nroot@cmp001:~# service openvswitch-switch restart\n```\n\n\n\n【NOTE】在创建虚拟机时需要在虚拟机类型中额外添加大页内存特性设置，如\n\n```shell\nroot@ctl01:~# source keystonercv3\nroot@ctl01:~# openstack flavor create m1.tiny --ram 64 --disk 0 --vcpus 1 --public\nroot@ctl01:~# nova flavor-key m1.tiny set hw:mem_page_size=large\n```\n\n\n\n\n[返回文首](#jump0)\n\n【参考链接】\n\n1)[dpdk配置](https://github.com/opnfv/Fuel/blob/stable/euphrates/mcp/reclass/classes/cluster/virtual-mcp-ocata-ovs-dpdk-noha/openstack/init.yml)\n\n2)[OVS中DPDK配置](http://docs.openvswitch.org/en/latest/intro/install/dpdk/?highlight=pmd)\n\n3)[DPDK网卡驱动](https://github.com/opnfv/Fuel/blob/fe9be64738ff1a1091e7df5b04b391fb15d6abc0/mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/compute.yml#L37)","source":"_posts/opnfv-Euphrates-install-03.md","raw":"---\ntitle: OPNFV Euphrates 安装（三）\ndate: 2018-03-06 17:50:43\ntags:\n  - OPNFV\n  - Euphrates\n  - dpdk\nkeywords:\n  - dpdk\ncategories:\n  - OPNFV\ndescription:\n  - OPNFV Euphrates DPDK scenario deploy\nsummary_img:\n  - http://dpdk.org/logos/dpdk.png\ntop:\n---\n\n## 1 <span id=\"jump0\">前言</span>\n\n近期在研究NFV的网络性能测试，考虑到NFV的网络性能的转发瓶颈，现在的商用NFV产品都会使用诸如DPDK、SR_IOV等网络加速技术，相应的也就需要对应的硬件支持。在尝试部署后本文总结一下使用OPNFV的E版本部署DPDK场景的过程，部署过程中需要修改配置文件以匹配硬件。\n\n## 2 配置文件修改\n\n### 2.1 部署节点配置修改\n\n部署节点的配置文件修改主要是增加DPDK网卡的PCI地址和MAC地址，原配置文件参看[Euphrates部署(二)](http://ylong.net.cn/opnfv_Euphrates_install(02).html)的2.1节。\n\n#### 2.1.1 idf-pod1.yaml修改\n\n在network字段下增加dpdk网卡名，总线地址，接口参数三项\n\n```yaml\n    network:\n      node:\n        # Ordered-list, index should be in sync with node index in PDF\n        - interfaces: &interfaces\n            # Ordered-list, index should be in sync with interface index in PDF\n            - 'eno1'\n            - 'eno2'\n            - 'eno3'\n            - 'eno4'\n            - 'enp66s0f0'\n            - 'enp66s0f1'\n          busaddr: &busaddr\n            # Bus-info reported by `ethtool -i ethX`\n            - '0000:01:00.0'\n            - '0000:01:00.1'\n            - '0000:02:00.0'\n            - '0000:02:00.1'\n            - '0000:42:00.0'\n            - '0000:42:00.1'\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n```\n\n#### 2.1.2 pod1.yaml修改\n\n修改private网络接口为4，接口数按照idf-pod1.yaml的`busaddr`字段下网卡总线地址顺序确定，从0开始计数。\n\n```yaml\n  private:\n    interface: 4\n    vlan: 102\n    network: 192.168.102.0\n    mask: 24\n```\n\n在compute节点上增加DPDK网卡的MAC地址，以及添加`DPDK`特性字段，**Fuel在部署过程中并不是按照节点名称来确定节点类型的，而是按照节点顺序来配置，前三个节点为控制节点，后两个节点为计算节点**。\n\n```yaml\n  - name: compute1\n    node: *nodeparas\n    disks: *disks_A\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.201\n      mac_address: \"44:A8:42:1A:70:BE\"\n    interfaces:                           # physical interface list\n      - mac_address: \"44:a8:42:14:ee:64\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:65\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:66\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:67\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"00:1b:21:89:5e:f2\"\n        speed: 10gb\n        feature: 'dpdk'\n      - mac_address: \"00:1b:21:89:5e:f3\"\n        speed: 10gb\n        feature: 'dpdk'\n    fixed_ips:\n      admin: 10.20.0.14\n      mgmt: 192.168.101.14\n      public: 192.168.20.14\n```\n\n### 2.2 openstack部署相关配置文件修改\n\nOPNFV的Fuel部署中目前只有一种策略默认支持DPDK，即`os-nosdn-ovs-ha`，打开`mcp/config/scenario/baremetal/os-nosdn-ovs-ha.yaml`文件开一看DPDK字样。\n\n```yaml\n---\ncluster:\n  domain: baremetal-mcp-ocata-ovs-dpdk-ha.local\n  states:\n    - maas\n    - baremetal_init\n    - virtual_control_plane\n    - dpdk\n    - openstack_ha\n    - networks\n    - networking_gw\nvirtual:\n  nodes:\n    - cfg01\n    - mas01\n  cfg01:\n    vcpus: 4\n    ram: 6144\n  mas01:\n    vcpus: 4\n    ram: 6144\n```\n\n在部署DPDK场景前需要修改配置文件`mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/init.yml`[1],配置文件的内容如下：\n\n```yaml\n---\nclasses:\n  - cluster.baremetal-mcp-ocata-common-ha.openstack_init\nparameters:\n  _param:\n    neutron_tenant_network_types: \"flat,vlan\"\n    neutron_tenant_vlan_range: \"1000:1030\"\n    nova_cpu_pinning: \"1-3,4,6\"\n    compute_hugepages_size: 2M\n    compute_hugepages_count: 8192\n    compute_hugepages_mount: /mnt/hugepages_2M\n    compute_kernel_isolcpu: 1,2,3,4,5,6,7\n    compute_dpdk_driver: uio\n    compute_ovs_pmd_cpu_mask: \"0x80\"\n    compute_ovs_dpdk_socket_mem: \"2048,2048\"\n    compute_ovs_dpdk_lcore_mask: \"0x20\"\n    compute_ovs_memory_channels: \"2\"\n  linux:\n    system:\n      repo:\n        uca:\n          source: \"deb http://ubuntu-cloud.archive.canonical.com/ubuntu xenial-updates/ocata main\"\n          architectures: amd64\n          key_id: EC4926EA\n          key_server: keyserver.ubuntu.com\n      kernel:\n        sysctl:\n          net.ipv4.tcp_congestion_control: yeah\n          net.ipv4.tcp_slow_start_after_idle: 0\n          net.ipv4.tcp_fin_timeout: 30\n```\n\n配置文件的参数说明如下：\n\n- neutron_tenant_network_types：表明openstack中将要使用的网络类型，vlan是指创建的虚拟机之间通信的网络类型；\n- neutron_tenant_vlan_range：openstack创建的vlan网络vlan范围，需要在物理交换机上进行配置运行该段的vlan数据包通过，否则创建的虚拟机无法进行通信；\n- nova_cpu_pinning：计算节点分配给openstack的cpu核心数目，本次部署使用的物理服务器核心为2（CPU）*4（core），共有8个核心，openvswitch和计算节点自身也需要占用cpu资源因此不能完全分配给openstack，同时考虑到dpdk策略下vswitch的核心独占，该项数值与compute_ovs_pmd_cpu_mask和compute_ovs_dpdk_lcore_mask是互斥的；\n- compute_hugepages_size：计算节点的大页内存配置，默认一个页面是2M；\n- compute_hugepages_count：大页内存页面个数，本次部署中计算节点的物理内存是32G，本次分配给计算资源的大页内存总数为8192*2M=16G内存；\n- compute_kernel_isolcpu：计算节点cpu核心隔离，设置计算节点的内核*不要使用*这些核心；\n- compute_dpdk_driver：dpdk使用的内核模块；\n- compute_ovs_pmd_cpu_mask：为了保证转发性能需要给ovs的PMD分配核心独占，CPU核心的分配采用掩码的方式，如本文中将cpu7分配给OVS，则掩码为0x80，cpu数从0开始计算，同时尽量**将DPDK和OVS分配的核心在同一个NUMA节点上**，关于OVS下的DPDK配置可以查阅官方手册[2];\n- compute_ovs_dpdk_socket_mem：分配给dpdk的大页内存数，每个NUMA节点各4个G；\n- compute_ovs_dpdk_lcore_mask：ovs中dpdk占用核心，同样采用掩码计算方式，最好与dpdk网卡所在NUMA节点一致，可以通过查看`/sys/bus/pci/devices/`目录下对应网卡总线的numa_node值查看，如dpdk网卡总线值为0000:42:00.0则使用命令`cat /sys/bus/pci/devices/0000\\:42\\:00.0/numa_node`查看所在NUMA节点；\n- compute_ovs_memory_channels：内存通道，对应的物理服务器内存所使用的通道数；\n\n\n然后修改dpdk网卡所使用的驱动，配置文件`mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/compute.yml`默认使用的是`igb_uio`[3]由于部署的系统中没有`igb_uio`驱动，因此改为使用`uio_pci_generic`驱动。\n\n配置完上述文件后使用`sudo ci/deploy.sh -b file:///home/opnfv/fuel/mcp/config/ -l bii -p pod1 -s os-nosdn-ovs-ha -B br-pxe,br-ctl -D `命令部署即可，推荐使用下述命令部署：\n\n```shell\nsudo nohup ci/deploy.sh -b file:///home/opnfv/fuel/mcp/config/ -l bii -p pod1 -s os-nosdn-ovs-ha -B br-pxe,br-ctl -D > opnfv_install_date +%Y-%m-%d`.log 2>&1 &\n```\n\n部署过程不占用终端，还可以通过`tail -f opnfv_install_date[date].log `查看部署过程。\n\n【NOTE】当前的部署完成后存在一个BUG，网络服务的外网不正常，通过`service networking status`参看是否有错误。创建的虚拟机要想访问外网`float-to-ex`网桥需要存在，或者使用`route -n`查看是否存在能够访问外网的网关。\n\n```shell\nroot@cmp001:~# brctl show\nbridge name\tbridge id\t\tSTP enabled\tinterfaces\nbr-ctl\t\t8000.44a84214ee66\tno\t\teno3.101\nbr-ex\t\t8000.1efd4c8920ac\tno\t\teno2\n\t\t\t\t\t\t\t           float-to-ex\nvirbr0\t\t8000.525400b2f405\tyes\t\tvirbr0-nic\n\nroot@cmp001:~# route -n\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0.0.0.0         192.168.20.1    0.0.0.0         UG    0      0        0 br-ex\n10.20.0.0       0.0.0.0         255.255.255.0   U     0      0        0 eno1\n192.168.20.0    0.0.0.0         255.255.255.0   U     0      0        0 br-ex\n192.168.101.0   0.0.0.0         255.255.255.0   U     0      0        0 br-ctl\n192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0\n```\n\n如不存在则需要重启网络服务`service networking restart`\n\n错误1：\n\n重启网络失败，通过`journalctl -xe`查看错误原因\n\n![重启网络失败](https://i.imgur.com/QfUS2Rr.jpg)\n\n先将`/etc/network/if-up.d/route-br-ex`中的路由配置注释，然后使用`ip addr flush dev br-ctl`和`ip addr flush dev br-ex`（注意若使用的是`mgmt`网络访问会导致终端连接断开，在清除`br-ctl`的网址时请使用`pxe`网络的地址连接计算节点），随后使用`service networking restart`重启网络。\n\n错误2:\n\n创建虚拟机错误，查看`vim /var/log/nova/nova-compute.log`显示ovs权限不足，需要修改计算节点neutron插件中ovs配置`/etc/neutron/plugins/ml2/openvswitch_agent.ini`将`vhostuser_socket_dir = /var/run/openvswitch `改为`vhostuser_socket_dir = /var/run/openvswitch-vhost`\n\n随后重启ovs服务`service neutron-openvswitch-agent restart`。\n\n\n\n## 3 使能第二个DPDK网口\n\n当前Fuel部署DPDK仅支持一块网卡配置，一般来说DPDK网卡中网口个数都是成对的，因此需要手动配置第二个DPDK网口。\n\n### 3.1 控制节点neutron配置修改\n\n#### 3.1.1 新增网络MTU修改\n\n修改controller节点的`/etc/neutron/plugins/ml2/ml2_conf.ini`中\n\n```ini\n[ml2]\nphysical_network_mtus = physnet1:1500,physnet2:1500 \n```\n\n改为`physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500`\n\n#### 3.1.2 vlan配置\n\n修改controller节点的`/etc/neutron/plugins/ml2/ml2_conf.ini`中\n\n```ini\n[ml2_type_vlan]\nnetwork_vlan_ranges = physnet2:1000:1030\n```\n\n改为`network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060`\n\n**同时需要在物理交换机上配置1031~1060段的vlan支持。**\n\n修改完成后使用`service neutron-server restart`重启neutron服务。\n\n【Tips】因为需要修改三个控制节点，可以使用如下命令修改\n\n```shell\nsed -i 's/^physical_network_mtus =.*$/physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500/g' /etc/neutron/plugins/ml2/ml2_conf.ini\nsed -i 's/^network_vlan_ranges =.*$/network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060/g' /etc/neutron/plugins/ml2/ml2_conf.ini\n```\n\n配合saltstack命令可以更便捷的修改三个控制节点，登录到cfg01节点使用salt命令修改控制节点\n\n```shell\nroot@cfg01:~# salt -C \"ctl*\" cmd.run \"sed -i 's/^physical_network_mtus =.*$/physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500/g' /etc/neutron/plugins/ml2/ml2_conf.ini\"\nroot@cfg01:~# salt -C \"ctl*\" cmd.run \"sed -i 's/^network_vlan_ranges =.*$/network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060/g' /etc/neutron/plugins/ml2/ml2_conf.ini\"\nroot@cfg01:~# salt -C \"ctl*\" cmd.run \"service neutron-server restart\"\n```\n\n### 3.2 计算节点neutron配置修改\n\n修改节点节点的`/etc/neutron/plugins/ml2/openvswitch_agent.ini`中ovs段\n\n```ini\n[ovs]\nbridge_mappings = physnet1:br-floating,physnet2:br-prv \n```\n\n改为`bridge_mappings = physnet1:br-floating,physnet2:br-prv,physnet3:br-prv1`，随后重启neutron服务`service neutron-openvswitch-agent restart`\n\n[Tips]使用如下命令修改，同样的配合saltstack的命令可以更便捷的修改两个控制节点\n\n```shell\nsed -i 's/^bridge_mappings = .*$/bridge_mappings = physnet1:br-floating,physnet2:br-prv,physnet3:br-prv1/g' /etc/neutron/plugins/ml2/openvswitch_agent.ini\n```\n\n重启完neutron服务后通过`ovs-vsctl show`可以看到已经生成了一个br-prv1的网桥，如果没有生成，在控制节点上检查网络代理服务是否正常\n\n```shell\nroot@ctl01:~# openstack network agent list\n+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+\n| ID                                   | Agent Type         | Host   | Availability Zone | Alive | State | Binary                    |\n+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+\n| 03ee7d4d-f17a-4ca2-b864-71decdd58bac | Metadata agent     | cmp002 | None              | True  | UP    | neutron-metadata-agent    |\n| 63b23081-2844-4712-a9d9-b5da80596558 | Open vSwitch agent | cmp001 | None              | True  | UP    | neutron-openvswitch-agent |\n| 69acde22-0890-4e90-9f26-c20e69dace43 | DHCP agent         | cmp001 | nova              | True  | UP    | neutron-dhcp-agent        |\n| 73ed4645-c22d-4150-a7aa-bd59474b5f59 | L3 agent           | cmp002 | nova              | True  | UP    | neutron-l3-agent          |\n| b8e1e749-2254-48d7-ae46-54a6223971d1 | Open vSwitch agent | cmp002 | None              | True  | UP    | neutron-openvswitch-agent |\n| bb0329cf-021b-42b4-a0b0-749889f5c619 | Metadata agent     | cmp001 | None              | True  | UP    | neutron-metadata-agent    |\n| e0c05cb5-16c8-4da4-8eb2-d22087b69402 | DHCP agent         | cmp002 | nova              | True  | UP    | neutron-dhcp-agent        |\n| ed1ed0f4-d3da-4486-828a-40f4a1759a7a | L3 agent           | cmp001 | nova              | True  | UP    | neutron-l3-agent          |\n+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+\n```\n\nbr-prv1成功创建后需要手动添加dpdk网卡，首先为第二个网卡加载驱动\n\n```shell\nroot@cmp001:~# ifconfig enp66s0f1 down\nroot@cmp001:~# dpdk-devbind -b uio_pci_generic 42:00.1\nroot@cmp001:~# dpdk-devbind -s\n\nNetwork devices using DPDK-compatible driver\n============================================\n0000:42:00.0 '82599ES 10-Gigabit SFI/SFP+ Network Connection' drv=uio_pci_generic unused=ixgbe\n0000:42:00.1 '82599ES 10-Gigabit SFI/SFP+ Network Connection' drv=uio_pci_generic unused=ixgbe\n```\n\n随后在ovs中配置dpdk网卡\n\n```shell\nroot@cmp001:~# ovs-vsctl add-port br-prv1 dpdk1 -- set interface dpdk0 type=dpdk options:dpdk-devargs=0000:42:00.1 options:n_rxq=2\nroot@cmp001:~# service openvswitch-switch restart\n```\n\n\n\n【NOTE】在创建虚拟机时需要在虚拟机类型中额外添加大页内存特性设置，如\n\n```shell\nroot@ctl01:~# source keystonercv3\nroot@ctl01:~# openstack flavor create m1.tiny --ram 64 --disk 0 --vcpus 1 --public\nroot@ctl01:~# nova flavor-key m1.tiny set hw:mem_page_size=large\n```\n\n\n\n\n[返回文首](#jump0)\n\n【参考链接】\n\n1)[dpdk配置](https://github.com/opnfv/Fuel/blob/stable/euphrates/mcp/reclass/classes/cluster/virtual-mcp-ocata-ovs-dpdk-noha/openstack/init.yml)\n\n2)[OVS中DPDK配置](http://docs.openvswitch.org/en/latest/intro/install/dpdk/?highlight=pmd)\n\n3)[DPDK网卡驱动](https://github.com/opnfv/Fuel/blob/fe9be64738ff1a1091e7df5b04b391fb15d6abc0/mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/compute.yml#L37)","slug":"opnfv-Euphrates-install-03","published":1,"updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2wm000m6ijxzn8vw5ts","content":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 <span id=\"jump0\">前言</span></h2><p>近期在研究NFV的网络性能测试，考虑到NFV的网络性能的转发瓶颈，现在的商用NFV产品都会使用诸如DPDK、SR_IOV等网络加速技术，相应的也就需要对应的硬件支持。在尝试部署后本文总结一下使用OPNFV的E版本部署DPDK场景的过程，部署过程中需要修改配置文件以匹配硬件。</p>\n<h2 id=\"2-配置文件修改\"><a href=\"#2-配置文件修改\" class=\"headerlink\" title=\"2 配置文件修改\"></a>2 配置文件修改</h2><h3 id=\"2-1-部署节点配置修改\"><a href=\"#2-1-部署节点配置修改\" class=\"headerlink\" title=\"2.1 部署节点配置修改\"></a>2.1 部署节点配置修改</h3><p>部署节点的配置文件修改主要是增加DPDK网卡的PCI地址和MAC地址，原配置文件参看<a href=\"http://ylong.net.cn/opnfv_Euphrates_install(02\" target=\"_blank\" rel=\"noopener\">Euphrates部署(二)</a>.html)的2.1节。</p>\n<h4 id=\"2-1-1-idf-pod1-yaml修改\"><a href=\"#2-1-1-idf-pod1-yaml修改\" class=\"headerlink\" title=\"2.1.1 idf-pod1.yaml修改\"></a>2.1.1 idf-pod1.yaml修改</h4><p>在network字段下增加dpdk网卡名，总线地址，接口参数三项</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">network:</span></span><br><span class=\"line\"><span class=\"attr\">  node:</span></span><br><span class=\"line\">    <span class=\"comment\"># Ordered-list, index should be in sync with node index in PDF</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">&amp;interfaces</span></span><br><span class=\"line\">        <span class=\"comment\"># Ordered-list, index should be in sync with interface index in PDF</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'eno1'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'eno2'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'eno3'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'eno4'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'enp66s0f0'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'enp66s0f1'</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">&amp;busaddr</span></span><br><span class=\"line\">        <span class=\"comment\"># Bus-info reported by `ethtool -i ethX`</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:01:00.0'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:01:00.1'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:02:00.0'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:02:00.1'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:42:00.0'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:42:00.1'</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-1-2-pod1-yaml修改\"><a href=\"#2-1-2-pod1-yaml修改\" class=\"headerlink\" title=\"2.1.2 pod1.yaml修改\"></a>2.1.2 pod1.yaml修改</h4><p>修改private网络接口为4，接口数按照idf-pod1.yaml的<code>busaddr</code>字段下网卡总线地址顺序确定，从0开始计数。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">private:</span></span><br><span class=\"line\"><span class=\"attr\">  interface:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attr\">  vlan:</span> <span class=\"number\">102</span></span><br><span class=\"line\"><span class=\"attr\">  network:</span> <span class=\"number\">192.168</span><span class=\"number\">.102</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"attr\">  mask:</span> <span class=\"number\">24</span></span><br></pre></td></tr></table></figure>\n<p>在compute节点上增加DPDK网卡的MAC地址，以及添加<code>DPDK</code>特性字段，<strong>Fuel在部署过程中并不是按照节点名称来确定节点类型的，而是按照节点顺序来配置，前三个节点为控制节点，后两个节点为计算节点</strong>。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">- name:</span> <span class=\"string\">compute1</span></span><br><span class=\"line\"><span class=\"attr\">  node:</span> <span class=\"meta\">*nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">  disks:</span> <span class=\"meta\">*disks_A</span></span><br><span class=\"line\"><span class=\"attr\">  remote_management:</span></span><br><span class=\"line\">    <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">    address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.201</span></span><br><span class=\"line\"><span class=\"attr\">    mac_address:</span> <span class=\"string\">\"44:A8:42:1A:70:BE\"</span></span><br><span class=\"line\"><span class=\"attr\">  interfaces:</span>                           <span class=\"comment\"># physical interface list</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:64\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:65\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:66\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:67\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"00:1b:21:89:5e:f2\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">10</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      feature:</span> <span class=\"string\">'dpdk'</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"00:1b:21:89:5e:f3\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">10</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      feature:</span> <span class=\"string\">'dpdk'</span></span><br><span class=\"line\"><span class=\"attr\">  fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">    admin:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.14</span></span><br><span class=\"line\"><span class=\"attr\">    mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.14</span></span><br><span class=\"line\"><span class=\"attr\">    public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.14</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-openstack部署相关配置文件修改\"><a href=\"#2-2-openstack部署相关配置文件修改\" class=\"headerlink\" title=\"2.2 openstack部署相关配置文件修改\"></a>2.2 openstack部署相关配置文件修改</h3><p>OPNFV的Fuel部署中目前只有一种策略默认支持DPDK，即<code>os-nosdn-ovs-ha</code>，打开<code>mcp/config/scenario/baremetal/os-nosdn-ovs-ha.yaml</code>文件开一看DPDK字样。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">cluster:</span></span><br><span class=\"line\"><span class=\"attr\">  domain:</span> <span class=\"string\">baremetal-mcp-ocata-ovs-dpdk-ha.local</span></span><br><span class=\"line\"><span class=\"attr\">  states:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">maas</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">baremetal_init</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">virtual_control_plane</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">dpdk</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">openstack_ha</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">networks</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">networking_gw</span></span><br><span class=\"line\"><span class=\"attr\">virtual:</span></span><br><span class=\"line\"><span class=\"attr\">  nodes:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">cfg01</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">mas01</span></span><br><span class=\"line\"><span class=\"attr\">  cfg01:</span></span><br><span class=\"line\"><span class=\"attr\">    vcpus:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attr\">    ram:</span> <span class=\"number\">6144</span></span><br><span class=\"line\"><span class=\"attr\">  mas01:</span></span><br><span class=\"line\"><span class=\"attr\">    vcpus:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attr\">    ram:</span> <span class=\"number\">6144</span></span><br></pre></td></tr></table></figure>\n<p>在部署DPDK场景前需要修改配置文件<code>mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/init.yml</code>[1],配置文件的内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">classes:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">cluster.baremetal-mcp-ocata-common-ha.openstack_init</span></span><br><span class=\"line\"><span class=\"attr\">parameters:</span></span><br><span class=\"line\"><span class=\"attr\">  _param:</span></span><br><span class=\"line\"><span class=\"attr\">    neutron_tenant_network_types:</span> <span class=\"string\">\"flat,vlan\"</span></span><br><span class=\"line\"><span class=\"attr\">    neutron_tenant_vlan_range:</span> <span class=\"string\">\"1000:1030\"</span></span><br><span class=\"line\"><span class=\"attr\">    nova_cpu_pinning:</span> <span class=\"string\">\"1-3,4,6\"</span></span><br><span class=\"line\"><span class=\"attr\">    compute_hugepages_size:</span> <span class=\"number\">2</span><span class=\"string\">M</span></span><br><span class=\"line\"><span class=\"attr\">    compute_hugepages_count:</span> <span class=\"number\">8192</span></span><br><span class=\"line\"><span class=\"attr\">    compute_hugepages_mount:</span> <span class=\"string\">/mnt/hugepages_2M</span></span><br><span class=\"line\"><span class=\"attr\">    compute_kernel_isolcpu:</span> <span class=\"number\">1</span><span class=\"string\">,2,3,4,5,6,7</span></span><br><span class=\"line\"><span class=\"attr\">    compute_dpdk_driver:</span> <span class=\"string\">uio</span></span><br><span class=\"line\"><span class=\"attr\">    compute_ovs_pmd_cpu_mask:</span> <span class=\"string\">\"0x80\"</span></span><br><span class=\"line\"><span class=\"attr\">    compute_ovs_dpdk_socket_mem:</span> <span class=\"string\">\"2048,2048\"</span></span><br><span class=\"line\"><span class=\"attr\">    compute_ovs_dpdk_lcore_mask:</span> <span class=\"string\">\"0x20\"</span></span><br><span class=\"line\"><span class=\"attr\">    compute_ovs_memory_channels:</span> <span class=\"string\">\"2\"</span></span><br><span class=\"line\"><span class=\"attr\">  linux:</span></span><br><span class=\"line\"><span class=\"attr\">    system:</span></span><br><span class=\"line\"><span class=\"attr\">      repo:</span></span><br><span class=\"line\"><span class=\"attr\">        uca:</span></span><br><span class=\"line\"><span class=\"attr\">          source:</span> <span class=\"string\">\"deb http://ubuntu-cloud.archive.canonical.com/ubuntu xenial-updates/ocata main\"</span></span><br><span class=\"line\"><span class=\"attr\">          architectures:</span> <span class=\"string\">amd64</span></span><br><span class=\"line\"><span class=\"attr\">          key_id:</span> <span class=\"string\">EC4926EA</span></span><br><span class=\"line\"><span class=\"attr\">          key_server:</span> <span class=\"string\">keyserver.ubuntu.com</span></span><br><span class=\"line\"><span class=\"attr\">      kernel:</span></span><br><span class=\"line\"><span class=\"attr\">        sysctl:</span></span><br><span class=\"line\">          <span class=\"string\">net.ipv4.tcp_congestion_control:</span> <span class=\"string\">yeah</span></span><br><span class=\"line\">          <span class=\"string\">net.ipv4.tcp_slow_start_after_idle:</span> <span class=\"number\">0</span></span><br><span class=\"line\">          <span class=\"string\">net.ipv4.tcp_fin_timeout:</span> <span class=\"number\">30</span></span><br></pre></td></tr></table></figure>\n<p>配置文件的参数说明如下：</p>\n<ul>\n<li>neutron_tenant_network_types：表明openstack中将要使用的网络类型，vlan是指创建的虚拟机之间通信的网络类型；</li>\n<li>neutron_tenant_vlan_range：openstack创建的vlan网络vlan范围，需要在物理交换机上进行配置运行该段的vlan数据包通过，否则创建的虚拟机无法进行通信；</li>\n<li>nova_cpu_pinning：计算节点分配给openstack的cpu核心数目，本次部署使用的物理服务器核心为2（CPU）*4（core），共有8个核心，openvswitch和计算节点自身也需要占用cpu资源因此不能完全分配给openstack，同时考虑到dpdk策略下vswitch的核心独占，该项数值与compute_ovs_pmd_cpu_mask和compute_ovs_dpdk_lcore_mask是互斥的；</li>\n<li>compute_hugepages_size：计算节点的大页内存配置，默认一个页面是2M；</li>\n<li>compute_hugepages_count：大页内存页面个数，本次部署中计算节点的物理内存是32G，本次分配给计算资源的大页内存总数为8192*2M=16G内存；</li>\n<li>compute_kernel_isolcpu：计算节点cpu核心隔离，设置计算节点的内核<em>不要使用</em>这些核心；</li>\n<li>compute_dpdk_driver：dpdk使用的内核模块；</li>\n<li>compute_ovs_pmd_cpu_mask：为了保证转发性能需要给ovs的PMD分配核心独占，CPU核心的分配采用掩码的方式，如本文中将cpu7分配给OVS，则掩码为0x80，cpu数从0开始计算，同时尽量<strong>将DPDK和OVS分配的核心在同一个NUMA节点上</strong>，关于OVS下的DPDK配置可以查阅官方手册[2];</li>\n<li>compute_ovs_dpdk_socket_mem：分配给dpdk的大页内存数，每个NUMA节点各4个G；</li>\n<li>compute_ovs_dpdk_lcore_mask：ovs中dpdk占用核心，同样采用掩码计算方式，最好与dpdk网卡所在NUMA节点一致，可以通过查看<code>/sys/bus/pci/devices/</code>目录下对应网卡总线的numa_node值查看，如dpdk网卡总线值为0000:42:00.0则使用命令<code>cat /sys/bus/pci/devices/0000\\:42\\:00.0/numa_node</code>查看所在NUMA节点；</li>\n<li>compute_ovs_memory_channels：内存通道，对应的物理服务器内存所使用的通道数；</li>\n</ul>\n<p>然后修改dpdk网卡所使用的驱动，配置文件<code>mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/compute.yml</code>默认使用的是<code>igb_uio</code>[3]由于部署的系统中没有<code>igb_uio</code>驱动，因此改为使用<code>uio_pci_generic</code>驱动。</p>\n<p>配置完上述文件后使用<code>sudo ci/deploy.sh -b file:///home/opnfv/fuel/mcp/config/ -l bii -p pod1 -s os-nosdn-ovs-ha -B br-pxe,br-ctl -D</code>命令部署即可，推荐使用下述命令部署：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nohup ci/deploy.sh -b file:///home/opnfv/fuel/mcp/config/ -l bii -p pod1 -s os-nosdn-ovs-ha -B br-pxe,br-ctl -D &gt; opnfv_install_date +%Y-%m-%d`.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n<p>部署过程不占用终端，还可以通过<code>tail -f opnfv_install_date[date].log</code>查看部署过程。</p>\n<p>【NOTE】当前的部署完成后存在一个BUG，网络服务的外网不正常，通过<code>service networking status</code>参看是否有错误。创建的虚拟机要想访问外网<code>float-to-ex</code>网桥需要存在，或者使用<code>route -n</code>查看是否存在能够访问外网的网关。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@cmp001:~# brctl show</span><br><span class=\"line\">bridge name\tbridge id\t\tSTP enabled\tinterfaces</span><br><span class=\"line\">br-ctl\t\t8000.44a84214ee66\tno\t\teno3.101</span><br><span class=\"line\">br-ex\t\t8000.1efd4c8920ac\tno\t\teno2</span><br><span class=\"line\">\t\t\t\t\t\t\t           float-to-ex</span><br><span class=\"line\">virbr0\t\t8000.525400b2f405\tyes\t\tvirbr0-nic</span><br><span class=\"line\"></span><br><span class=\"line\">root@cmp001:~# route -n</span><br><span class=\"line\">Kernel IP routing table</span><br><span class=\"line\">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class=\"line\">0.0.0.0         192.168.20.1    0.0.0.0         UG    0      0        0 br-ex</span><br><span class=\"line\">10.20.0.0       0.0.0.0         255.255.255.0   U     0      0        0 eno1</span><br><span class=\"line\">192.168.20.0    0.0.0.0         255.255.255.0   U     0      0        0 br-ex</span><br><span class=\"line\">192.168.101.0   0.0.0.0         255.255.255.0   U     0      0        0 br-ctl</span><br><span class=\"line\">192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0</span><br></pre></td></tr></table></figure>\n<p>如不存在则需要重启网络服务<code>service networking restart</code></p>\n<p>错误1：</p>\n<p>重启网络失败，通过<code>journalctl -xe</code>查看错误原因</p>\n<p><img src=\"https://i.imgur.com/QfUS2Rr.jpg\" alt=\"重启网络失败\"></p>\n<p>先将<code>/etc/network/if-up.d/route-br-ex</code>中的路由配置注释，然后使用<code>ip addr flush dev br-ctl</code>和<code>ip addr flush dev br-ex</code>（注意若使用的是<code>mgmt</code>网络访问会导致终端连接断开，在清除<code>br-ctl</code>的网址时请使用<code>pxe</code>网络的地址连接计算节点），随后使用<code>service networking restart</code>重启网络。</p>\n<p>错误2:</p>\n<p>创建虚拟机错误，查看<code>vim /var/log/nova/nova-compute.log</code>显示ovs权限不足，需要修改计算节点neutron插件中ovs配置<code>/etc/neutron/plugins/ml2/openvswitch_agent.ini</code>将<code>vhostuser_socket_dir = /var/run/openvswitch</code>改为<code>vhostuser_socket_dir = /var/run/openvswitch-vhost</code></p>\n<p>随后重启ovs服务<code>service neutron-openvswitch-agent restart</code>。</p>\n<h2 id=\"3-使能第二个DPDK网口\"><a href=\"#3-使能第二个DPDK网口\" class=\"headerlink\" title=\"3 使能第二个DPDK网口\"></a>3 使能第二个DPDK网口</h2><p>当前Fuel部署DPDK仅支持一块网卡配置，一般来说DPDK网卡中网口个数都是成对的，因此需要手动配置第二个DPDK网口。</p>\n<h3 id=\"3-1-控制节点neutron配置修改\"><a href=\"#3-1-控制节点neutron配置修改\" class=\"headerlink\" title=\"3.1 控制节点neutron配置修改\"></a>3.1 控制节点neutron配置修改</h3><h4 id=\"3-1-1-新增网络MTU修改\"><a href=\"#3-1-1-新增网络MTU修改\" class=\"headerlink\" title=\"3.1.1 新增网络MTU修改\"></a>3.1.1 新增网络MTU修改</h4><p>修改controller节点的<code>/etc/neutron/plugins/ml2/ml2_conf.ini</code>中</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[ml2]</span></span><br><span class=\"line\"><span class=\"attr\">physical_network_mtus</span> = physnet1:<span class=\"number\">1500</span>,physnet2:<span class=\"number\">1500</span></span><br></pre></td></tr></table></figure>\n<p>改为<code>physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500</code></p>\n<h4 id=\"3-1-2-vlan配置\"><a href=\"#3-1-2-vlan配置\" class=\"headerlink\" title=\"3.1.2 vlan配置\"></a>3.1.2 vlan配置</h4><p>修改controller节点的<code>/etc/neutron/plugins/ml2/ml2_conf.ini</code>中</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[ml2_type_vlan]</span></span><br><span class=\"line\"><span class=\"attr\">network_vlan_ranges</span> = physnet2:<span class=\"number\">1000</span>:<span class=\"number\">1030</span></span><br></pre></td></tr></table></figure>\n<p>改为<code>network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060</code></p>\n<p><strong>同时需要在物理交换机上配置1031~1060段的vlan支持。</strong></p>\n<p>修改完成后使用<code>service neutron-server restart</code>重启neutron服务。</p>\n<p>【Tips】因为需要修改三个控制节点，可以使用如下命令修改</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i 's/^physical_network_mtus =.*$/physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500/g' /etc/neutron/plugins/ml2/ml2_conf.ini</span><br><span class=\"line\">sed -i 's/^network_vlan_ranges =.*$/network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060/g' /etc/neutron/plugins/ml2/ml2_conf.ini</span><br></pre></td></tr></table></figure>\n<p>配合saltstack命令可以更便捷的修改三个控制节点，登录到cfg01节点使用salt命令修改控制节点</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@cfg01:~# salt -C \"ctl*\" cmd.run \"sed -i 's/^physical_network_mtus =.*$/physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500/g' /etc/neutron/plugins/ml2/ml2_conf.ini\"</span><br><span class=\"line\">root@cfg01:~# salt -C \"ctl*\" cmd.run \"sed -i 's/^network_vlan_ranges =.*$/network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060/g' /etc/neutron/plugins/ml2/ml2_conf.ini\"</span><br><span class=\"line\">root@cfg01:~# salt -C \"ctl*\" cmd.run \"service neutron-server restart\"</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-计算节点neutron配置修改\"><a href=\"#3-2-计算节点neutron配置修改\" class=\"headerlink\" title=\"3.2 计算节点neutron配置修改\"></a>3.2 计算节点neutron配置修改</h3><p>修改节点节点的<code>/etc/neutron/plugins/ml2/openvswitch_agent.ini</code>中ovs段</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[ovs]</span></span><br><span class=\"line\"><span class=\"attr\">bridge_mappings</span> = physnet1:br-floating,physnet2:br-prv</span><br></pre></td></tr></table></figure>\n<p>改为<code>bridge_mappings = physnet1:br-floating,physnet2:br-prv,physnet3:br-prv1</code>，随后重启neutron服务<code>service neutron-openvswitch-agent restart</code></p>\n<p>[Tips]使用如下命令修改，同样的配合saltstack的命令可以更便捷的修改两个控制节点</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i 's/^bridge_mappings = .*$/bridge_mappings = physnet1:br-floating,physnet2:br-prv,physnet3:br-prv1/g' /etc/neutron/plugins/ml2/openvswitch_agent.ini</span><br></pre></td></tr></table></figure>\n<p>重启完neutron服务后通过<code>ovs-vsctl show</code>可以看到已经生成了一个br-prv1的网桥，如果没有生成，在控制节点上检查网络代理服务是否正常</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ctl01:~# openstack network agent list</span><br><span class=\"line\">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br><span class=\"line\">| ID                                   | Agent Type         | Host   | Availability Zone | Alive | State | Binary                    |</span><br><span class=\"line\">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br><span class=\"line\">| 03ee7d4d-f17a-4ca2-b864-71decdd58bac | Metadata agent     | cmp002 | None              | True  | UP    | neutron-metadata-agent    |</span><br><span class=\"line\">| 63b23081-2844-4712-a9d9-b5da80596558 | Open vSwitch agent | cmp001 | None              | True  | UP    | neutron-openvswitch-agent |</span><br><span class=\"line\">| 69acde22-0890-4e90-9f26-c20e69dace43 | DHCP agent         | cmp001 | nova              | True  | UP    | neutron-dhcp-agent        |</span><br><span class=\"line\">| 73ed4645-c22d-4150-a7aa-bd59474b5f59 | L3 agent           | cmp002 | nova              | True  | UP    | neutron-l3-agent          |</span><br><span class=\"line\">| b8e1e749-2254-48d7-ae46-54a6223971d1 | Open vSwitch agent | cmp002 | None              | True  | UP    | neutron-openvswitch-agent |</span><br><span class=\"line\">| bb0329cf-021b-42b4-a0b0-749889f5c619 | Metadata agent     | cmp001 | None              | True  | UP    | neutron-metadata-agent    |</span><br><span class=\"line\">| e0c05cb5-16c8-4da4-8eb2-d22087b69402 | DHCP agent         | cmp002 | nova              | True  | UP    | neutron-dhcp-agent        |</span><br><span class=\"line\">| ed1ed0f4-d3da-4486-828a-40f4a1759a7a | L3 agent           | cmp001 | nova              | True  | UP    | neutron-l3-agent          |</span><br><span class=\"line\">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br></pre></td></tr></table></figure>\n<p>br-prv1成功创建后需要手动添加dpdk网卡，首先为第二个网卡加载驱动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@cmp001:~# ifconfig enp66s0f1 down</span><br><span class=\"line\">root@cmp001:~# dpdk-devbind -b uio_pci_generic 42:00.1</span><br><span class=\"line\">root@cmp001:~# dpdk-devbind -s</span><br><span class=\"line\"></span><br><span class=\"line\">Network devices using DPDK-compatible driver</span><br><span class=\"line\">============================================</span><br><span class=\"line\">0000:42:00.0 '82599ES 10-Gigabit SFI/SFP+ Network Connection' drv=uio_pci_generic unused=ixgbe</span><br><span class=\"line\">0000:42:00.1 '82599ES 10-Gigabit SFI/SFP+ Network Connection' drv=uio_pci_generic unused=ixgbe</span><br></pre></td></tr></table></figure>\n<p>随后在ovs中配置dpdk网卡</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@cmp001:~# ovs-vsctl add-port br-prv1 dpdk1 -- set interface dpdk0 type=dpdk options:dpdk-devargs=0000:42:00.1 options:n_rxq=2</span><br><span class=\"line\">root@cmp001:~# service openvswitch-switch restart</span><br></pre></td></tr></table></figure>\n<p>【NOTE】在创建虚拟机时需要在虚拟机类型中额外添加大页内存特性设置，如</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ctl01:~# source keystonercv3</span><br><span class=\"line\">root@ctl01:~# openstack flavor create m1.tiny --ram 64 --disk 0 --vcpus 1 --public</span><br><span class=\"line\">root@ctl01:~# nova flavor-key m1.tiny set hw:mem_page_size=large</span><br></pre></td></tr></table></figure>\n<p><a href=\"#jump0\">返回文首</a></p>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://github.com/opnfv/Fuel/blob/stable/euphrates/mcp/reclass/classes/cluster/virtual-mcp-ocata-ovs-dpdk-noha/openstack/init.yml\" target=\"_blank\" rel=\"noopener\">dpdk配置</a></p>\n<p>2)<a href=\"http://docs.openvswitch.org/en/latest/intro/install/dpdk/?highlight=pmd\" target=\"_blank\" rel=\"noopener\">OVS中DPDK配置</a></p>\n<p>3)<a href=\"https://github.com/opnfv/Fuel/blob/fe9be64738ff1a1091e7df5b04b391fb15d6abc0/mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/compute.yml#L37\" target=\"_blank\" rel=\"noopener\">DPDK网卡驱动</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 <span id=\"jump0\">前言</span></h2><p>近期在研究NFV的网络性能测试，考虑到NFV的网络性能的转发瓶颈，现在的商用NFV产品都会使用诸如DPDK、SR_IOV等网络加速技术，相应的也就需要对应的硬件支持。在尝试部署后本文总结一下使用OPNFV的E版本部署DPDK场景的过程，部署过程中需要修改配置文件以匹配硬件。</p>\n<h2 id=\"2-配置文件修改\"><a href=\"#2-配置文件修改\" class=\"headerlink\" title=\"2 配置文件修改\"></a>2 配置文件修改</h2><h3 id=\"2-1-部署节点配置修改\"><a href=\"#2-1-部署节点配置修改\" class=\"headerlink\" title=\"2.1 部署节点配置修改\"></a>2.1 部署节点配置修改</h3><p>部署节点的配置文件修改主要是增加DPDK网卡的PCI地址和MAC地址，原配置文件参看<a href=\"http://ylong.net.cn/opnfv_Euphrates_install(02\" target=\"_blank\" rel=\"noopener\">Euphrates部署(二)</a>.html)的2.1节。</p>\n<h4 id=\"2-1-1-idf-pod1-yaml修改\"><a href=\"#2-1-1-idf-pod1-yaml修改\" class=\"headerlink\" title=\"2.1.1 idf-pod1.yaml修改\"></a>2.1.1 idf-pod1.yaml修改</h4><p>在network字段下增加dpdk网卡名，总线地址，接口参数三项</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">network:</span></span><br><span class=\"line\"><span class=\"attr\">  node:</span></span><br><span class=\"line\">    <span class=\"comment\"># Ordered-list, index should be in sync with node index in PDF</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">&amp;interfaces</span></span><br><span class=\"line\">        <span class=\"comment\"># Ordered-list, index should be in sync with interface index in PDF</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'eno1'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'eno2'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'eno3'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'eno4'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'enp66s0f0'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'enp66s0f1'</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">&amp;busaddr</span></span><br><span class=\"line\">        <span class=\"comment\"># Bus-info reported by `ethtool -i ethX`</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:01:00.0'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:01:00.1'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:02:00.0'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:02:00.1'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:42:00.0'</span></span><br><span class=\"line\"><span class=\"bullet\">        -</span> <span class=\"string\">'0000:42:00.1'</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">    - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">      busaddr:</span> <span class=\"meta\">*busaddr</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-1-2-pod1-yaml修改\"><a href=\"#2-1-2-pod1-yaml修改\" class=\"headerlink\" title=\"2.1.2 pod1.yaml修改\"></a>2.1.2 pod1.yaml修改</h4><p>修改private网络接口为4，接口数按照idf-pod1.yaml的<code>busaddr</code>字段下网卡总线地址顺序确定，从0开始计数。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">private:</span></span><br><span class=\"line\"><span class=\"attr\">  interface:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attr\">  vlan:</span> <span class=\"number\">102</span></span><br><span class=\"line\"><span class=\"attr\">  network:</span> <span class=\"number\">192.168</span><span class=\"number\">.102</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"attr\">  mask:</span> <span class=\"number\">24</span></span><br></pre></td></tr></table></figure>\n<p>在compute节点上增加DPDK网卡的MAC地址，以及添加<code>DPDK</code>特性字段，<strong>Fuel在部署过程中并不是按照节点名称来确定节点类型的，而是按照节点顺序来配置，前三个节点为控制节点，后两个节点为计算节点</strong>。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">- name:</span> <span class=\"string\">compute1</span></span><br><span class=\"line\"><span class=\"attr\">  node:</span> <span class=\"meta\">*nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">  disks:</span> <span class=\"meta\">*disks_A</span></span><br><span class=\"line\"><span class=\"attr\">  remote_management:</span></span><br><span class=\"line\">    <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">    address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.201</span></span><br><span class=\"line\"><span class=\"attr\">    mac_address:</span> <span class=\"string\">\"44:A8:42:1A:70:BE\"</span></span><br><span class=\"line\"><span class=\"attr\">  interfaces:</span>                           <span class=\"comment\"># physical interface list</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:64\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:65\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:66\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:67\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"00:1b:21:89:5e:f2\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">10</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      feature:</span> <span class=\"string\">'dpdk'</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"00:1b:21:89:5e:f3\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">10</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      feature:</span> <span class=\"string\">'dpdk'</span></span><br><span class=\"line\"><span class=\"attr\">  fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">    admin:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.14</span></span><br><span class=\"line\"><span class=\"attr\">    mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.14</span></span><br><span class=\"line\"><span class=\"attr\">    public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.14</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-openstack部署相关配置文件修改\"><a href=\"#2-2-openstack部署相关配置文件修改\" class=\"headerlink\" title=\"2.2 openstack部署相关配置文件修改\"></a>2.2 openstack部署相关配置文件修改</h3><p>OPNFV的Fuel部署中目前只有一种策略默认支持DPDK，即<code>os-nosdn-ovs-ha</code>，打开<code>mcp/config/scenario/baremetal/os-nosdn-ovs-ha.yaml</code>文件开一看DPDK字样。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">cluster:</span></span><br><span class=\"line\"><span class=\"attr\">  domain:</span> <span class=\"string\">baremetal-mcp-ocata-ovs-dpdk-ha.local</span></span><br><span class=\"line\"><span class=\"attr\">  states:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">maas</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">baremetal_init</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">virtual_control_plane</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">dpdk</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">openstack_ha</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">networks</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">networking_gw</span></span><br><span class=\"line\"><span class=\"attr\">virtual:</span></span><br><span class=\"line\"><span class=\"attr\">  nodes:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">cfg01</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">mas01</span></span><br><span class=\"line\"><span class=\"attr\">  cfg01:</span></span><br><span class=\"line\"><span class=\"attr\">    vcpus:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attr\">    ram:</span> <span class=\"number\">6144</span></span><br><span class=\"line\"><span class=\"attr\">  mas01:</span></span><br><span class=\"line\"><span class=\"attr\">    vcpus:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attr\">    ram:</span> <span class=\"number\">6144</span></span><br></pre></td></tr></table></figure>\n<p>在部署DPDK场景前需要修改配置文件<code>mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/init.yml</code>[1],配置文件的内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">classes:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">cluster.baremetal-mcp-ocata-common-ha.openstack_init</span></span><br><span class=\"line\"><span class=\"attr\">parameters:</span></span><br><span class=\"line\"><span class=\"attr\">  _param:</span></span><br><span class=\"line\"><span class=\"attr\">    neutron_tenant_network_types:</span> <span class=\"string\">\"flat,vlan\"</span></span><br><span class=\"line\"><span class=\"attr\">    neutron_tenant_vlan_range:</span> <span class=\"string\">\"1000:1030\"</span></span><br><span class=\"line\"><span class=\"attr\">    nova_cpu_pinning:</span> <span class=\"string\">\"1-3,4,6\"</span></span><br><span class=\"line\"><span class=\"attr\">    compute_hugepages_size:</span> <span class=\"number\">2</span><span class=\"string\">M</span></span><br><span class=\"line\"><span class=\"attr\">    compute_hugepages_count:</span> <span class=\"number\">8192</span></span><br><span class=\"line\"><span class=\"attr\">    compute_hugepages_mount:</span> <span class=\"string\">/mnt/hugepages_2M</span></span><br><span class=\"line\"><span class=\"attr\">    compute_kernel_isolcpu:</span> <span class=\"number\">1</span><span class=\"string\">,2,3,4,5,6,7</span></span><br><span class=\"line\"><span class=\"attr\">    compute_dpdk_driver:</span> <span class=\"string\">uio</span></span><br><span class=\"line\"><span class=\"attr\">    compute_ovs_pmd_cpu_mask:</span> <span class=\"string\">\"0x80\"</span></span><br><span class=\"line\"><span class=\"attr\">    compute_ovs_dpdk_socket_mem:</span> <span class=\"string\">\"2048,2048\"</span></span><br><span class=\"line\"><span class=\"attr\">    compute_ovs_dpdk_lcore_mask:</span> <span class=\"string\">\"0x20\"</span></span><br><span class=\"line\"><span class=\"attr\">    compute_ovs_memory_channels:</span> <span class=\"string\">\"2\"</span></span><br><span class=\"line\"><span class=\"attr\">  linux:</span></span><br><span class=\"line\"><span class=\"attr\">    system:</span></span><br><span class=\"line\"><span class=\"attr\">      repo:</span></span><br><span class=\"line\"><span class=\"attr\">        uca:</span></span><br><span class=\"line\"><span class=\"attr\">          source:</span> <span class=\"string\">\"deb http://ubuntu-cloud.archive.canonical.com/ubuntu xenial-updates/ocata main\"</span></span><br><span class=\"line\"><span class=\"attr\">          architectures:</span> <span class=\"string\">amd64</span></span><br><span class=\"line\"><span class=\"attr\">          key_id:</span> <span class=\"string\">EC4926EA</span></span><br><span class=\"line\"><span class=\"attr\">          key_server:</span> <span class=\"string\">keyserver.ubuntu.com</span></span><br><span class=\"line\"><span class=\"attr\">      kernel:</span></span><br><span class=\"line\"><span class=\"attr\">        sysctl:</span></span><br><span class=\"line\">          <span class=\"string\">net.ipv4.tcp_congestion_control:</span> <span class=\"string\">yeah</span></span><br><span class=\"line\">          <span class=\"string\">net.ipv4.tcp_slow_start_after_idle:</span> <span class=\"number\">0</span></span><br><span class=\"line\">          <span class=\"string\">net.ipv4.tcp_fin_timeout:</span> <span class=\"number\">30</span></span><br></pre></td></tr></table></figure>\n<p>配置文件的参数说明如下：</p>\n<ul>\n<li>neutron_tenant_network_types：表明openstack中将要使用的网络类型，vlan是指创建的虚拟机之间通信的网络类型；</li>\n<li>neutron_tenant_vlan_range：openstack创建的vlan网络vlan范围，需要在物理交换机上进行配置运行该段的vlan数据包通过，否则创建的虚拟机无法进行通信；</li>\n<li>nova_cpu_pinning：计算节点分配给openstack的cpu核心数目，本次部署使用的物理服务器核心为2（CPU）*4（core），共有8个核心，openvswitch和计算节点自身也需要占用cpu资源因此不能完全分配给openstack，同时考虑到dpdk策略下vswitch的核心独占，该项数值与compute_ovs_pmd_cpu_mask和compute_ovs_dpdk_lcore_mask是互斥的；</li>\n<li>compute_hugepages_size：计算节点的大页内存配置，默认一个页面是2M；</li>\n<li>compute_hugepages_count：大页内存页面个数，本次部署中计算节点的物理内存是32G，本次分配给计算资源的大页内存总数为8192*2M=16G内存；</li>\n<li>compute_kernel_isolcpu：计算节点cpu核心隔离，设置计算节点的内核<em>不要使用</em>这些核心；</li>\n<li>compute_dpdk_driver：dpdk使用的内核模块；</li>\n<li>compute_ovs_pmd_cpu_mask：为了保证转发性能需要给ovs的PMD分配核心独占，CPU核心的分配采用掩码的方式，如本文中将cpu7分配给OVS，则掩码为0x80，cpu数从0开始计算，同时尽量<strong>将DPDK和OVS分配的核心在同一个NUMA节点上</strong>，关于OVS下的DPDK配置可以查阅官方手册[2];</li>\n<li>compute_ovs_dpdk_socket_mem：分配给dpdk的大页内存数，每个NUMA节点各4个G；</li>\n<li>compute_ovs_dpdk_lcore_mask：ovs中dpdk占用核心，同样采用掩码计算方式，最好与dpdk网卡所在NUMA节点一致，可以通过查看<code>/sys/bus/pci/devices/</code>目录下对应网卡总线的numa_node值查看，如dpdk网卡总线值为0000:42:00.0则使用命令<code>cat /sys/bus/pci/devices/0000\\:42\\:00.0/numa_node</code>查看所在NUMA节点；</li>\n<li>compute_ovs_memory_channels：内存通道，对应的物理服务器内存所使用的通道数；</li>\n</ul>\n<p>然后修改dpdk网卡所使用的驱动，配置文件<code>mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/compute.yml</code>默认使用的是<code>igb_uio</code>[3]由于部署的系统中没有<code>igb_uio</code>驱动，因此改为使用<code>uio_pci_generic</code>驱动。</p>\n<p>配置完上述文件后使用<code>sudo ci/deploy.sh -b file:///home/opnfv/fuel/mcp/config/ -l bii -p pod1 -s os-nosdn-ovs-ha -B br-pxe,br-ctl -D</code>命令部署即可，推荐使用下述命令部署：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nohup ci/deploy.sh -b file:///home/opnfv/fuel/mcp/config/ -l bii -p pod1 -s os-nosdn-ovs-ha -B br-pxe,br-ctl -D &gt; opnfv_install_date +%Y-%m-%d`.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n<p>部署过程不占用终端，还可以通过<code>tail -f opnfv_install_date[date].log</code>查看部署过程。</p>\n<p>【NOTE】当前的部署完成后存在一个BUG，网络服务的外网不正常，通过<code>service networking status</code>参看是否有错误。创建的虚拟机要想访问外网<code>float-to-ex</code>网桥需要存在，或者使用<code>route -n</code>查看是否存在能够访问外网的网关。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@cmp001:~# brctl show</span><br><span class=\"line\">bridge name\tbridge id\t\tSTP enabled\tinterfaces</span><br><span class=\"line\">br-ctl\t\t8000.44a84214ee66\tno\t\teno3.101</span><br><span class=\"line\">br-ex\t\t8000.1efd4c8920ac\tno\t\teno2</span><br><span class=\"line\">\t\t\t\t\t\t\t           float-to-ex</span><br><span class=\"line\">virbr0\t\t8000.525400b2f405\tyes\t\tvirbr0-nic</span><br><span class=\"line\"></span><br><span class=\"line\">root@cmp001:~# route -n</span><br><span class=\"line\">Kernel IP routing table</span><br><span class=\"line\">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class=\"line\">0.0.0.0         192.168.20.1    0.0.0.0         UG    0      0        0 br-ex</span><br><span class=\"line\">10.20.0.0       0.0.0.0         255.255.255.0   U     0      0        0 eno1</span><br><span class=\"line\">192.168.20.0    0.0.0.0         255.255.255.0   U     0      0        0 br-ex</span><br><span class=\"line\">192.168.101.0   0.0.0.0         255.255.255.0   U     0      0        0 br-ctl</span><br><span class=\"line\">192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0</span><br></pre></td></tr></table></figure>\n<p>如不存在则需要重启网络服务<code>service networking restart</code></p>\n<p>错误1：</p>\n<p>重启网络失败，通过<code>journalctl -xe</code>查看错误原因</p>\n<p><img src=\"https://i.imgur.com/QfUS2Rr.jpg\" alt=\"重启网络失败\"></p>\n<p>先将<code>/etc/network/if-up.d/route-br-ex</code>中的路由配置注释，然后使用<code>ip addr flush dev br-ctl</code>和<code>ip addr flush dev br-ex</code>（注意若使用的是<code>mgmt</code>网络访问会导致终端连接断开，在清除<code>br-ctl</code>的网址时请使用<code>pxe</code>网络的地址连接计算节点），随后使用<code>service networking restart</code>重启网络。</p>\n<p>错误2:</p>\n<p>创建虚拟机错误，查看<code>vim /var/log/nova/nova-compute.log</code>显示ovs权限不足，需要修改计算节点neutron插件中ovs配置<code>/etc/neutron/plugins/ml2/openvswitch_agent.ini</code>将<code>vhostuser_socket_dir = /var/run/openvswitch</code>改为<code>vhostuser_socket_dir = /var/run/openvswitch-vhost</code></p>\n<p>随后重启ovs服务<code>service neutron-openvswitch-agent restart</code>。</p>\n<h2 id=\"3-使能第二个DPDK网口\"><a href=\"#3-使能第二个DPDK网口\" class=\"headerlink\" title=\"3 使能第二个DPDK网口\"></a>3 使能第二个DPDK网口</h2><p>当前Fuel部署DPDK仅支持一块网卡配置，一般来说DPDK网卡中网口个数都是成对的，因此需要手动配置第二个DPDK网口。</p>\n<h3 id=\"3-1-控制节点neutron配置修改\"><a href=\"#3-1-控制节点neutron配置修改\" class=\"headerlink\" title=\"3.1 控制节点neutron配置修改\"></a>3.1 控制节点neutron配置修改</h3><h4 id=\"3-1-1-新增网络MTU修改\"><a href=\"#3-1-1-新增网络MTU修改\" class=\"headerlink\" title=\"3.1.1 新增网络MTU修改\"></a>3.1.1 新增网络MTU修改</h4><p>修改controller节点的<code>/etc/neutron/plugins/ml2/ml2_conf.ini</code>中</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[ml2]</span></span><br><span class=\"line\"><span class=\"attr\">physical_network_mtus</span> = physnet1:<span class=\"number\">1500</span>,physnet2:<span class=\"number\">1500</span></span><br></pre></td></tr></table></figure>\n<p>改为<code>physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500</code></p>\n<h4 id=\"3-1-2-vlan配置\"><a href=\"#3-1-2-vlan配置\" class=\"headerlink\" title=\"3.1.2 vlan配置\"></a>3.1.2 vlan配置</h4><p>修改controller节点的<code>/etc/neutron/plugins/ml2/ml2_conf.ini</code>中</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[ml2_type_vlan]</span></span><br><span class=\"line\"><span class=\"attr\">network_vlan_ranges</span> = physnet2:<span class=\"number\">1000</span>:<span class=\"number\">1030</span></span><br></pre></td></tr></table></figure>\n<p>改为<code>network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060</code></p>\n<p><strong>同时需要在物理交换机上配置1031~1060段的vlan支持。</strong></p>\n<p>修改完成后使用<code>service neutron-server restart</code>重启neutron服务。</p>\n<p>【Tips】因为需要修改三个控制节点，可以使用如下命令修改</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i 's/^physical_network_mtus =.*$/physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500/g' /etc/neutron/plugins/ml2/ml2_conf.ini</span><br><span class=\"line\">sed -i 's/^network_vlan_ranges =.*$/network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060/g' /etc/neutron/plugins/ml2/ml2_conf.ini</span><br></pre></td></tr></table></figure>\n<p>配合saltstack命令可以更便捷的修改三个控制节点，登录到cfg01节点使用salt命令修改控制节点</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@cfg01:~# salt -C \"ctl*\" cmd.run \"sed -i 's/^physical_network_mtus =.*$/physical_network_mtus = physnet1:1500,physnet2:1500,physnet3:1500/g' /etc/neutron/plugins/ml2/ml2_conf.ini\"</span><br><span class=\"line\">root@cfg01:~# salt -C \"ctl*\" cmd.run \"sed -i 's/^network_vlan_ranges =.*$/network_vlan_ranges = physnet2:1000:1030,physnet3:1031:1060/g' /etc/neutron/plugins/ml2/ml2_conf.ini\"</span><br><span class=\"line\">root@cfg01:~# salt -C \"ctl*\" cmd.run \"service neutron-server restart\"</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-计算节点neutron配置修改\"><a href=\"#3-2-计算节点neutron配置修改\" class=\"headerlink\" title=\"3.2 计算节点neutron配置修改\"></a>3.2 计算节点neutron配置修改</h3><p>修改节点节点的<code>/etc/neutron/plugins/ml2/openvswitch_agent.ini</code>中ovs段</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[ovs]</span></span><br><span class=\"line\"><span class=\"attr\">bridge_mappings</span> = physnet1:br-floating,physnet2:br-prv</span><br></pre></td></tr></table></figure>\n<p>改为<code>bridge_mappings = physnet1:br-floating,physnet2:br-prv,physnet3:br-prv1</code>，随后重启neutron服务<code>service neutron-openvswitch-agent restart</code></p>\n<p>[Tips]使用如下命令修改，同样的配合saltstack的命令可以更便捷的修改两个控制节点</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i 's/^bridge_mappings = .*$/bridge_mappings = physnet1:br-floating,physnet2:br-prv,physnet3:br-prv1/g' /etc/neutron/plugins/ml2/openvswitch_agent.ini</span><br></pre></td></tr></table></figure>\n<p>重启完neutron服务后通过<code>ovs-vsctl show</code>可以看到已经生成了一个br-prv1的网桥，如果没有生成，在控制节点上检查网络代理服务是否正常</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ctl01:~# openstack network agent list</span><br><span class=\"line\">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br><span class=\"line\">| ID                                   | Agent Type         | Host   | Availability Zone | Alive | State | Binary                    |</span><br><span class=\"line\">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br><span class=\"line\">| 03ee7d4d-f17a-4ca2-b864-71decdd58bac | Metadata agent     | cmp002 | None              | True  | UP    | neutron-metadata-agent    |</span><br><span class=\"line\">| 63b23081-2844-4712-a9d9-b5da80596558 | Open vSwitch agent | cmp001 | None              | True  | UP    | neutron-openvswitch-agent |</span><br><span class=\"line\">| 69acde22-0890-4e90-9f26-c20e69dace43 | DHCP agent         | cmp001 | nova              | True  | UP    | neutron-dhcp-agent        |</span><br><span class=\"line\">| 73ed4645-c22d-4150-a7aa-bd59474b5f59 | L3 agent           | cmp002 | nova              | True  | UP    | neutron-l3-agent          |</span><br><span class=\"line\">| b8e1e749-2254-48d7-ae46-54a6223971d1 | Open vSwitch agent | cmp002 | None              | True  | UP    | neutron-openvswitch-agent |</span><br><span class=\"line\">| bb0329cf-021b-42b4-a0b0-749889f5c619 | Metadata agent     | cmp001 | None              | True  | UP    | neutron-metadata-agent    |</span><br><span class=\"line\">| e0c05cb5-16c8-4da4-8eb2-d22087b69402 | DHCP agent         | cmp002 | nova              | True  | UP    | neutron-dhcp-agent        |</span><br><span class=\"line\">| ed1ed0f4-d3da-4486-828a-40f4a1759a7a | L3 agent           | cmp001 | nova              | True  | UP    | neutron-l3-agent          |</span><br><span class=\"line\">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br></pre></td></tr></table></figure>\n<p>br-prv1成功创建后需要手动添加dpdk网卡，首先为第二个网卡加载驱动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@cmp001:~# ifconfig enp66s0f1 down</span><br><span class=\"line\">root@cmp001:~# dpdk-devbind -b uio_pci_generic 42:00.1</span><br><span class=\"line\">root@cmp001:~# dpdk-devbind -s</span><br><span class=\"line\"></span><br><span class=\"line\">Network devices using DPDK-compatible driver</span><br><span class=\"line\">============================================</span><br><span class=\"line\">0000:42:00.0 '82599ES 10-Gigabit SFI/SFP+ Network Connection' drv=uio_pci_generic unused=ixgbe</span><br><span class=\"line\">0000:42:00.1 '82599ES 10-Gigabit SFI/SFP+ Network Connection' drv=uio_pci_generic unused=ixgbe</span><br></pre></td></tr></table></figure>\n<p>随后在ovs中配置dpdk网卡</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@cmp001:~# ovs-vsctl add-port br-prv1 dpdk1 -- set interface dpdk0 type=dpdk options:dpdk-devargs=0000:42:00.1 options:n_rxq=2</span><br><span class=\"line\">root@cmp001:~# service openvswitch-switch restart</span><br></pre></td></tr></table></figure>\n<p>【NOTE】在创建虚拟机时需要在虚拟机类型中额外添加大页内存特性设置，如</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ctl01:~# source keystonercv3</span><br><span class=\"line\">root@ctl01:~# openstack flavor create m1.tiny --ram 64 --disk 0 --vcpus 1 --public</span><br><span class=\"line\">root@ctl01:~# nova flavor-key m1.tiny set hw:mem_page_size=large</span><br></pre></td></tr></table></figure>\n<p><a href=\"#jump0\">返回文首</a></p>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://github.com/opnfv/Fuel/blob/stable/euphrates/mcp/reclass/classes/cluster/virtual-mcp-ocata-ovs-dpdk-noha/openstack/init.yml\" target=\"_blank\" rel=\"noopener\">dpdk配置</a></p>\n<p>2)<a href=\"http://docs.openvswitch.org/en/latest/intro/install/dpdk/?highlight=pmd\" target=\"_blank\" rel=\"noopener\">OVS中DPDK配置</a></p>\n<p>3)<a href=\"https://github.com/opnfv/Fuel/blob/fe9be64738ff1a1091e7df5b04b391fb15d6abc0/mcp/reclass/classes/cluster/baremetal-mcp-ocata-ovs-dpdk-ha/openstack/compute.yml#L37\" target=\"_blank\" rel=\"noopener\">DPDK网卡驱动</a></p>\n"},{"title":"MySQL双主复制 + keepalived故障转移实现","keywords":["mysql"],"description":["MySQL主主复制配置"],"summary_img":null,"top":null,"_content":"\n## 1 前言\n\nMySQL复制中较常见的复制架构有“一主一从”、“一主多从”、“双主”、“多级复制”和“多主环形机构”等，在项目实施中遇到需要进行故障转移的需求：两台服务器每台都安装MySQL，当一个MySQL服务器故障时另一个MySQL服务器能够继续提供服务，这要求两个MySQL之间能够进行数据复制同时需要监控两台服务器的状态。\n\n本次使用MySQL的双主复制以及keepalived的HA机制来实现。\n\n## 2 环境准备\n\n两台服务器：\n服务器MySQL-HA-1(主) 192.168.10.101\n服务器MySQL-HA-2(主) 192.168.10.102\n虚拟服务节点IP       192.168.10.103\nMysql版本：mysql  Ver 14.14 Distrib 5.7.21\nSystem OS：ubuntu 16.04\n\n\n\n## 3 mysql数据库配置\n\n### 3.1 mysql数据库介绍\n\n![mysql](https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/w%3D268%3Bg%3D0/sign=e35e494a6159252da3171a020ca06406/ac6eddc451da81cb037c289d5366d016082431c3.jpg)\n\nMySQL是一个[**关系型数据库管理系统**](https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F)**，**由瑞典MySQL AB 公司开发，目前属于 [Oracle](https://baike.baidu.com/item/Oracle) 旗下产品。MySQL 是最流行的[关系型数据库管理系统](https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F)之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件。\n\nMySQL是一种关系数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。\n\nMySQL所使用的 SQL 语言是用于访问[数据库](https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93)的最常用标准化语言[1]。\n\n### 3.1 安装数据库\n\n```shell\napt install -y mysql-server\n```\n\n【Tips】：安装过程需要输入数据库密码，出于后续部署的自动化考虑，希望自动化部署中不被打断，解决这个问题有两种方法：\n\n1) 预先设置密码\n\n使用`debconf-set-selections`工具预先将密码写入\n\n```shell\nsudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password your_password'\nsudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password your_password'\nsudo apt-get -y install mysql-server\n```\n\n将`your_password`替换为想要设置的mysql root账户密码，针对不同的mysql版本会有相应的改变，参见[传送门](https://stackoverflow.com/questions/7739645/install-mysql-on-ubuntu-without-a-password-prompt)\n\n2)静默安装\n\n使用如下命令通过非交互的方式静默安装mysql\n\n```shell\nsudo DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server\n```\n\n在安装完成后mysql是没有密码的，root用户下是可以免密进入命令行的，然后再修改mysql的root用户访问密码\n\n```shell\nmysql -uroot -e\"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('passwd');\"\n```\n\n将`passwd`替换为自己的密码即可。\n\n3.2 数据库初始化配置\n\n在修改配置前最好先备份mysql配置文件\n\n```shell\ncp /etc/mysql/mysql.conf.d/mysqld.cnf  /etc/mysql/mysql.conf.d/mysqld.cnf-bak\n```\n\n1）设置时区\n\n在`mysqld.cnf`的`[mysqld]`后加入`default-time-zone = '+8:00'`\n\n```shell\nsed -i \"/^\\[mysqld\\]/a\\default-time-zone = \\'+8:00\\'\" /etc/mysql/mysql.conf.d/mysqld.cnf\n```\n\n### 3.3 修改数据库配置\n\n设置需要同步的数据库，此处以数据库`test`为例\n\n1）修改MySQL-HA-1服务器数据库配置\n\n主要修改的地方如下\n\n```shell\nbind-address\t\t= ::    # 指定允许数据库访问的IP，\"::\"表明允许v4和v6访问\n\nserver-id\t\t= 1                     # 指定mysql的编号 该编号作为数据库集群的识别号因此不能冲突\nlog_bin\t\t\t= /var/log/mysql/mysql-bin.log   # 开启二进制log文件\nbinlog_format           = mixed\nrelay-log               = relay-bin\nrelay-log-index         = slave-relay-bin.index\nauto-increment-offset   = 2     # 设置自增长偏移，这里有两个数据库因此每次增长为2\nauto-increment-increment = 1    # 设置自增长起始\nbinlog_do_db            = test  # 设置需要同步的数据库名称\nbinlog_do_db            = test1\n```\n\n完整的配置文件如下，这里将原配置文件的注释屏蔽掉\n\n\n```shell\nroot@HA-1:~# cat /etc/mysql/mysql.conf.d/mysqld.cnf | grep -v '#'\n\n[mysqld_safe]\nsocket\t\t= /var/run/mysqld/mysqld.sock\nnice\t\t= 0\n\n[mysqld]\nuser\t\t= mysql\npid-file\t= /var/run/mysqld/mysqld.pid\nsocket\t\t= /var/run/mysqld/mysqld.sock\nport\t\t= 3306\nbasedir\t\t= /usr\ndatadir\t\t= /var/lib/mysql\ntmpdir\t\t= /tmp\nlc-messages-dir\t= /usr/share/mysql\nskip-external-locking\nbind-address\t\t= ::\nkey_buffer_size\t\t= 16M\nmax_allowed_packet\t= 16M\nthread_stack\t\t= 192K\nthread_cache_size       = 8\nmyisam-recover-options  = BACKUP\nquery_cache_limit\t= 1M\nquery_cache_size        = 16M\ngeneral_log_file        = /var/log/mysql/mysql.log\ngeneral_log             = 1\nlog_error = /var/log/mysql/error.log\nserver-id\t\t= 1\nlog_bin\t\t\t= /var/log/mysql/mysql-bin.log\nbinlog_format           = mixed\nexpire_logs_days        = 10\nmax_binlog_size         = 100M\nrelay-log               = relay-bin\nrelay-log-index         = slave-relay-bin.index\nauto-increment-offset   = 2\nauto-increment-increment = 1\nbinlog_do_db            = test\nbinlog_do_db            = test1\n```\n\n其他参数含义可参考[mysql配置文件详解](http://www.jb51.net/article/48082.htm)\n\n\n2）修改MySQL-HA-2服务器数据库配置\n\n修改HA-2节点的数据库配置文件，大致内容一致，只是在`server-id`和`auto-increment-increment`需要修改。\n\n```shell\nroot@HA-2:~# cat /etc/mysql/mysql.conf.d/mysqld.cnf | grep -v '#'\n[mysqld_safe]\nsocket\t\t= /var/run/mysqld/mysqld.sock\nnice\t\t= 0\n\n[mysqld]\nuser\t\t= mysql\npid-file\t= /var/run/mysqld/mysqld.pid\nsocket\t\t= /var/run/mysqld/mysqld.sock\nport\t\t= 3306\nbasedir\t\t= /usr\ndatadir\t\t= /var/lib/mysql\ntmpdir\t\t= /tmp\nlc-messages-dir\t= /usr/share/mysql\nskip-external-locking\nbind-address\t\t= ::\nkey_buffer_size\t\t= 16M\nmax_allowed_packet\t= 16M\nthread_stack\t\t= 192K\nthread_cache_size       = 8\nmyisam-recover-options  = BACKUP\nquery_cache_limit\t= 1M\nquery_cache_size        = 16M\ngeneral_log_file        = /var/log/mysql/mysql.log\ngeneral_log             = 1\nlog_error = /var/log/mysql/error.log\nserver-id\t\t= 2            # server id设置为2\nlog_bin\t\t\t= /var/log/mysql/mysql-bin.log\nbinlog_format           = mixed\nexpire_logs_days        = 10\nmax_binlog_size         = 100M\nrelay-log               = relay-bin\nrelay-log-index         = slave-relay-bin.index\nauto-increment-offset   = 2\nauto-increment-increment = 2    # 增长起始设置为2\nbinlog_do_db            = test\nbinlog_do_db            = test1\n```\n\n修改完成后**两个节点**的数据库都需要重启\n\n```shell\nservice mysql restart\n```\n\n### 3.3 设置主从数据库\n\n1)将HA-1设置为HA-2的主数据库\n\n首先在HA-1节点数据库创建同步账户\n\n```shell\nroot@HA-1:~# mysql -uroot -p\nmysql> GRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO sync@'192.168.10.102' IDENTIFIED BY 'sync';\nmysql> flush privileges;\n```\n\n随后查看数据库状态信息\n\n```mysql\nmysql> show master status;\n+------------------+----------+--------------+------------------+-------------------+\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+------------------+----------+--------------+------------------+-------------------+\n| mysql-bin.000001 |    465 | test,test1    |                  |                   |\n+------------------+----------+--------------+------------------+-------------------+\n1 row in set (0.00 sec)\n```\n\n记录下`File`和`Position`两个参数值，这是数据库主从同步的关键，也是告诉从数据自那哪个起点开始同步\n\n在**HA-2**节点的数据库输入以下信息，切记是在HA-2节点输入\n\n```mysql\nmysql> change master to master_host='192.168.10.101',master_user='sync',master_password='sync',master_log_file='mysql-bin.000001',master_log_pos=465;\n```\n\n随后重启HA-2节点的数据库\n\n```shell\nroot@HA-2:~# service mysql restart\n```\n\n然后在HA-2节点查看mysql的slave信息，确保下述两个值为yes\n\n> Slave_IO_Running:Yes\n> Slave_SQL_Running:Yes\n\n```shell\nmysql> show slave status\\G;\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: 192.168.10.101\n                  Master_User: copyuser\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: mysql-bin.000001\n          Read_Master_Log_Pos: 465\n               Relay_Log_File: relay-bin.00002\n                Relay_Log_Pos: 146\n        Relay_Master_Log_File: mysql-bin.000001\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n              Replicate_Do_DB:\n          Replicate_Ignore_DB:\n           Replicate_Do_Table:\n       Replicate_Ignore_Table:\n      Replicate_Wild_Do_Table:\n```\n\n2)将HA-2设置为HA-1的主数据库\n\n设置过程与上一步一致，首先创建同步账户随后添加主数据库信息，需要注意的是IP地址的修改\n\n在HA-2上创建同步账户\n\n```shell\nroot@HA-2:~# mysql -uroot -p\nmysql> GRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO sync@'192.168.10.101' IDENTIFIED BY 'sync';\nmysql> flush privileges;\n```\n\n随后查看数据库状态信息\n\n```mysql\nmysql> show master status;\n+------------------+----------+--------------+------------------+-------------------+\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+------------------+----------+--------------+------------------+-------------------+\n| mysql-bin.000002 |    465 | test,test1    |                  |                   |\n+------------------+----------+--------------+------------------+-------------------+\n1 row in set (0.00 sec)\n```\n\n记录下`File`和`Position`两个参数值，这是数据库主从同步的关键，也是告诉从数据自那哪个起点开始同步\n\n在**HA-1**节点的数据库输入以下信息，切记是在HA-1节点输入\n\n```mysql\nmysql> change master to master_host='192.168.10.102',master_user='sync',master_password='sync',master_log_file='mysql-bin.000001',master_log_pos=465;\n```\n\n随后重启HA-1节点的数据库\n\n```shell\nroot@HA-1:~# service mysql restart\n```\n\n然后在HA-1节点查看mysql的slave信息，确保下述两个值为yes\n\n> Slave_IO_Running:Yes\n> Slave_SQL_Running:Yes\n\n```shell\nmysql> show slave status\\G;\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: 192.168.10.102\n                  Master_User: copyuser\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: mysql-bin.000002\n          Read_Master_Log_Pos: 465\n               Relay_Log_File: relay-bin.00003\n                Relay_Log_Pos: 146\n        Relay_Master_Log_File: mysql-bin.000002\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n              Replicate_Do_DB:\n          Replicate_Ignore_DB:\n           Replicate_Do_Table:\n       Replicate_Ignore_Table:\n      Replicate_Wild_Do_Table:\n```\n\n### 3.4 测试数据库同步\n\n在HA-1节点创建一个数据库`test`\n\n```mysql\nmysql> create database test;\n```\n\n查看HA-2主机是否同步了HA-1上的数据变化\n\n```mysql\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| test          |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n```\n\n可以看出HA-2节点的数据库同步了HA-1节点的数据库，在配置成双主复制后任一节点数据库发生改变另一节点数据库都会进行同步。\n\n在配置完成数据库后若想对数据库进行访问只能访问单一节点数据库的IP，如果希望访问一个固定IP让数据库并能够实现故障自动切换就需要配合keepalived或者HAproxy进行代理。\n\n## 4 keepalived 安装\n\n### 4.1 keepalived介绍\n\n![keepalived](http://www.keepalived.org/images/ka-header.png)\n\nKeepalived软件起初是专为LVS负载均衡软件设计的，用来管理并监控LVS集群系统中各个服务节点的状态，后来又加入了可以实现高可用的VRRP功能。因此，Keepalived除了能够管理LVS软件外，还可以作为其他服务（例如：Nginx、Haproxy、MySQL等）的高可用解决方案软件。\n\nKeepalived软件主要是通过VRRP协议实现高可用功能的。VRRP是Virtual Router RedundancyProtocol(虚拟路由器冗余协议）的缩写，VRRP出现的目的就是为了解决静态路由单点故障问题的，它能够保证当个别节点宕机时，整个网络可以不间断地运行。\n\n所以，Keepalived 一方面具有配置管理LVS的功能，同时还具有对LVS下面节点进行健康检查的功能，另一方面也可实现系统网络服务的高可用功能。\n\n这里借用博客[4]的有关keepalived的集群工作原理示意图\n\n![keepalived状态切换示意图](https://i.imgur.com/iZyFaCC.png)\n\nKeepalived高可用对之间是通过 VRRP进行通信的， VRRP是遑过竞选机制来确定主备的，主的优先级高于备，因此，工作时主会优先获得所有的资源，备节点处于等待状态，当主挂了的时候，备节点就会接管主节点的资源，然后顶替主节点对外提供服务。\n\n在 Keepalived服务对之间，只有作为主的服务器会一直发送 VRRP广播包,告诉备它还活着，此时备不会枪占主，当主不可用时，即备监听不到主发送的广播包时，就会启动相关服务接管资源，保证业务的连续性.接管速度最快可以小于1秒。\n\n### 4.2 keepalived的安装\n\n安装方式分为两种：apt直接安装和手动编译安装\n\n1)手动编译安装\n\n手动编译的好处是可以使用较新的源码，首先下载源码\n\n```shell\nwget http://www.keepalived.org/software/keepalived-1.4.2.tar.gz\n```\n\n安装必要的编译包\n\n```shell\napt-get install -y gcc build-essential make curl libssl-dev libnl-3-dev libnl-genl-3-dev libsnmp-dev\n```\n\n配置编译，prefix指明需要安装在哪里，也可以不配置使用默认路径\n\n```shell\ntar xf keepalived-1.4.2.tar.gz\ncd keepalived-1.4.2\n./configure --prefix=/usr/local/keepalived\n```\n\n配置完成后直接编译二连`make`和`make install`即可\n\n2) apt安装\n\n```shell\napt install keepalived\n```\n\n### 4.3 keepapiled配置文件\n\nkeepalived服务安装完成之后，后面的主要工作就是在keepalived.conf文件中配置HA和负载均衡。一个功能比较完整的常用的keepalived配置文件，主要包含三块：*全局定义块*、*VRRP实例定义块*和*虚拟服务器定义块*。全局定义块是必须的，如果keepalived只用来做ha，虚拟服务器是可选的。下面数据库HA的配置文件模板：\n\n#### 4.3.1 keepalived.conf配置\n\n**HA-1主机**上的keepalived.conf文件的修改：\n\n```shell\nroot@HA-1:~# cat /etc/keepalived/keepalived.conf\n\n! Configuration File for keepalived\n\nglobal_defs {\n    router_id HA-1\n}\n\nvrrp_script chk_mysql {\n    script /etc/keepalived/bin/chk_mysql.sh    #健康监测脚本路径\n    interval 2\n    fall 3\n    rise 2\n}\n\nvrrp_instance VI_MYSQL {\n    state MASTER\n    interface enp0s9       # 监听网卡\n    virtual_router_id 100  # 虚拟路由编号，同一实例可以一致，但是其权重一定不能一致\n    nopreempt\n    priority 100           # 权重，两个节点不能一样\n    advert_int 1\n    virtual_ipaddress {\n        192.168.10.103      # 虚拟IP地址\n    }\n    notify /etc/keepalived/bin/kpad_notify.sh     # keep状态传入脚本，通过该脚本可得知当前keep运行状态\n    track_script {\n        chk_mysql            # 健康检查配置\n    }\n}\n\n}\n```\n##### 4.3.1.2 健康监测脚本\n\n创建脚本存放目录\n\n```shell\nroot@HA-1:~# mkdir -p /etc/keepalived/bin\n```\n\n1)keepalived状态脚本\n\n创建脚本`/etc/keepalived/bin/kpad_notify.sh`内容如下\n\n```bash\nroot@HA-1:~# cat /etc/keepalived/bin/kpad_notify.sh\n\n#!/bin/bash\n\nTYPE=$1\nNAME=$2\nSTATE=$3\n\nlog_file=\"/var/log/test/keepalived/keepalived.log\"\n\nlog() {\necho \"$(date +\"%Y-%m-%d %H:%M:%S.%4N\") [$STATE] $1\" >> $log_file\n}\n\ncase $STATE in\n    \"MASTER\")\n        echo 'MASTER' > /tmp/keepalived-state\n        exit 0\n        ;;\n    \"BACKUP\")\n        echo 'BACKUP' > /tmp/keepalived-state\n        exit 0\n        ;;\n    \"FAULT\")\n        echo 'FAULT' > /tmp/keepalived-state\n        log \"keepalived status is fault.\"\n        exit 0\n        ;;\n    *)\n        log \"unknown keepalived status.\"\n        exit 1\n        ;;\nesac\n```\n\n设置脚本运行权限\n\n```shell\nroot@HA-1:~# chmod +x /etc/keepalived/bin/kpad_notify.sh\n```\n\n2）配置mysql健康检查脚本\n\n编辑`/etc/keepalived/bin/chk_mysql.sh`脚本内容如下，脚本的大致思路是如果在master和backup状态下mysqld进程不存在则尝试重启mysql，若重启失败则任务该节点的mysql彻底故障，进行故障转移。\n\n```bash\n#!/bin/bash\n#########################################################################\n# File Name: chk_mysql.sh\n# Author: louie.long\n# Mail: ylong@biigroup.cn\n# Created Time: Wed 04 Apr 2018 10:44:20 AM CST\n# Description: check mysql service\n#########################################################################\n\nSTATE=`cat /tmp/keepalived-state`\nlog_file=\"/var/log/test/keepalived/keepalived.log\"\nservice_name=\"mysqld\"\nservice_cmd=\"/etc/init.d/mysql\"\nget_pid=`pidof $service_name`\n\nlog() {\necho \"$(date +\"%Y-%m-%d %H:%M:%S.%4N\") [$STATE] $1\" >> $log_file\n}\n\ncase $STATE in\n    \"MASTER\")\n        if [ \"${get_pid}\" == \"\" ]; then\n            log \"$service_name service isn't exist.\"\n            log \"Try to restart $service_name service.\"\n            $service_cmd start\n            if [ $? -eq 0 ]; then\n                log \"restart $service_name service successfully.\"\n            else\n                log \"restart $service_name service failed.\"\n                exit 1\n            fi\n        fi\n        exit 0\n        ;;\n    \"BACKUP\")\n        if [ \"${get_pid}\" == \"\" ]; then\n            log \"$service_name service isn't exist.\"\n            log \"Try to restart $service_name service.\"\n            $service_cmd start\n            if [ $? -eq 0 ]; then\n                log \"restart $service_name service successfully.\"\n            else\n                log \"restart $service_name service failed.\"\n                exit 1\n            fi\n        fi\n        exit 0\n        ;;\n    \"FAULT\")\n        exit 0\n        ;;\n       *)\n        exit 1\n        ;;\nesac\n```\n\n然后执行\n\n```shell\nroot@HA-1:~# chmod +x /etc/keepalived/bin/chk_mysql.sh\n```\n\n随后重启keepalived服务\n\n```shell\nroot@HA-1:~# service keepalived restart\n```\n\n#### 4.3.2 在HA-2节点上配置\n\n基本配置个HA-1节点上一样，两个健康监测脚本完全一致，不同的是keepalived.conf脚本中权重值和节点初始属性\n\n```shell\nroot@HA-2:~# cat /etc/keepalived/keepalived.conf\n\n! Configuration File for keepalived\n\nglobal_defs {\n    router_id HA-1\n}\n\nvrrp_script chk_mysql {\n    script /etc/keepalived/bin/chk_mysql.sh    #健康监测脚本路径\n    interval 2\n    fall 3\n    rise 2\n}\n\nvrrp_instance VI_MYSQL {\n    state BACKUP\n    interface enp0s9       # 监听网卡\n    virtual_router_id 100  # 虚拟路由编号，同一实例可以一致，但是其权重一定不能一致\n    nopreempt\n    priority 90           # 权重，两个节点不能一样\n    advert_int 1\n    virtual_ipaddress {\n        192.168.10.103      # 虚拟IP地址\n    }\n    notify /etc/keepalived/bin/kpad_notify.sh     # keep状态传入脚本，通过该脚本可得知当前keep运行状态\n    track_script {\n        chk_mysql            # 健康检查配置\n    }\n}\n\n}\n```\n\n在拷贝`/etc/keepalived/bin/kpad_notify.sh`和`/etc/keepalived/bin/chk_mysql.sh `两个脚本后重启keepalived服务\n\n```shell\nroot@HA-2:~# service keepalived restart\n```\n\n#### 4.3.3 测试\n\n在HA-1和HA-2分别执行ip addr show dev enp0s9命令查看HA-1和HA-2对VIP（群集虚拟IP）的控制权。HA-1主的查看结果：\n\n```shell\nroot@HA-1:~# ip addr show dev enp0s9\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\n    link/ether 00:0c:29:fd:98:1b brd ff:ff:ff:ff:ff:ff\n    inet 192.168.10.101/20 brd 192.168.15.255 scope global enp0s9\n       valid_lft forever preferred_lft forever\n    inet 192.168.10.103/32 scope global enp0s9\n       valid_lft forever preferred_lft forever\n    inet6 240c:f:1:4000:20c:29ff:fefd:981b/64 scope global mngtmpaddr dynamic\n       valid_lft 2591546sec preferred_lft 604346sec\n    inet6 fe80::20c:29ff:fefd:981b/64 scope link\n       valid_lft forever preferred_lft forever\n```\n\n可以看到生成了192.168.10.101这个虚拟IP。\n\n停止HA-1的keepalived服务，HA-2将会成为新的主节点，HA-2主的查看结果：\n\n```shell\nroot@HA-2:~# ip addr show dev enp0s9\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\n    link/ether 00:0c:29:fd:98:1b brd ff:ff:ff:ff:ff:ff\n    inet 192.168.10.102/20 brd 192.168.15.255 scope global enp0s9\n       valid_lft forever preferred_lft forever\n    inet 192.168.10.103/32 scope global enp0s9\n       valid_lft forever preferred_lft forever\n    inet6 240c:f:1:4000:20c:29ff:fefd:981b/64 scope global mngtmpaddr dynamic\n       valid_lft 2591855sec preferred_lft 604655sec\n    inet6 fe80::20c:29ff:fefd:981b/64 scope link\n       valid_lft forever preferred_lft forever\n```\n\n可以看到生成了192.168.10.103这个虚IP。\n\nMySQL远程登录测试：\n\n```shell\nroot@HA-2:~#  mysql -h192.168.10.103 -uroot -p\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 2119\nServer version: 5.7.21-0ubuntu0.16.04.1-log (Ubuntu)\n\nCopyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> show variables like 'server_id';\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| server_id     | 2     |\n+---------------+-------+\n1 row in set (0.00 sec)\n\n```\n\n说明在客户端访问VIP地址，由HA-2主机提供响应的，当前状态下HA-2充当主服务器。\n\n【Note】\n\n经过测试在纯IPv6的环境下上述HA依然可以正常运行。\n\n\n\n\n\n\n\n【参考链接】\n\n1)[mysql介绍](https://baike.baidu.com/item/mySQL/471251?fr=aladdin)\n\n2)[mysql安装跳过密码设置](https://stackoverflow.com/questions/7739645/install-mysql-on-ubuntu-without-a-password-prompt)\n\n3)[keepalived官网](http://www.keepalived.org)\n\n4)[keepaliced介绍](https://www.cnblogs.com/clsn/p/8052649.html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/mysql-ha.md","raw":"---\ntitle: MySQL双主复制 + keepalived故障转移实现\ntags:\n  - mysql\n  - keepalived\n  - ubuntu\nkeywords:\n  - mysql\ncategories:\n  - ubuntu\ndescription:\n  - MySQL主主复制配置\nsummary_img:\ntop:\n---\n\n## 1 前言\n\nMySQL复制中较常见的复制架构有“一主一从”、“一主多从”、“双主”、“多级复制”和“多主环形机构”等，在项目实施中遇到需要进行故障转移的需求：两台服务器每台都安装MySQL，当一个MySQL服务器故障时另一个MySQL服务器能够继续提供服务，这要求两个MySQL之间能够进行数据复制同时需要监控两台服务器的状态。\n\n本次使用MySQL的双主复制以及keepalived的HA机制来实现。\n\n## 2 环境准备\n\n两台服务器：\n服务器MySQL-HA-1(主) 192.168.10.101\n服务器MySQL-HA-2(主) 192.168.10.102\n虚拟服务节点IP       192.168.10.103\nMysql版本：mysql  Ver 14.14 Distrib 5.7.21\nSystem OS：ubuntu 16.04\n\n\n\n## 3 mysql数据库配置\n\n### 3.1 mysql数据库介绍\n\n![mysql](https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/w%3D268%3Bg%3D0/sign=e35e494a6159252da3171a020ca06406/ac6eddc451da81cb037c289d5366d016082431c3.jpg)\n\nMySQL是一个[**关系型数据库管理系统**](https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F)**，**由瑞典MySQL AB 公司开发，目前属于 [Oracle](https://baike.baidu.com/item/Oracle) 旗下产品。MySQL 是最流行的[关系型数据库管理系统](https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F)之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件。\n\nMySQL是一种关系数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。\n\nMySQL所使用的 SQL 语言是用于访问[数据库](https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93)的最常用标准化语言[1]。\n\n### 3.1 安装数据库\n\n```shell\napt install -y mysql-server\n```\n\n【Tips】：安装过程需要输入数据库密码，出于后续部署的自动化考虑，希望自动化部署中不被打断，解决这个问题有两种方法：\n\n1) 预先设置密码\n\n使用`debconf-set-selections`工具预先将密码写入\n\n```shell\nsudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password your_password'\nsudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password your_password'\nsudo apt-get -y install mysql-server\n```\n\n将`your_password`替换为想要设置的mysql root账户密码，针对不同的mysql版本会有相应的改变，参见[传送门](https://stackoverflow.com/questions/7739645/install-mysql-on-ubuntu-without-a-password-prompt)\n\n2)静默安装\n\n使用如下命令通过非交互的方式静默安装mysql\n\n```shell\nsudo DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server\n```\n\n在安装完成后mysql是没有密码的，root用户下是可以免密进入命令行的，然后再修改mysql的root用户访问密码\n\n```shell\nmysql -uroot -e\"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('passwd');\"\n```\n\n将`passwd`替换为自己的密码即可。\n\n3.2 数据库初始化配置\n\n在修改配置前最好先备份mysql配置文件\n\n```shell\ncp /etc/mysql/mysql.conf.d/mysqld.cnf  /etc/mysql/mysql.conf.d/mysqld.cnf-bak\n```\n\n1）设置时区\n\n在`mysqld.cnf`的`[mysqld]`后加入`default-time-zone = '+8:00'`\n\n```shell\nsed -i \"/^\\[mysqld\\]/a\\default-time-zone = \\'+8:00\\'\" /etc/mysql/mysql.conf.d/mysqld.cnf\n```\n\n### 3.3 修改数据库配置\n\n设置需要同步的数据库，此处以数据库`test`为例\n\n1）修改MySQL-HA-1服务器数据库配置\n\n主要修改的地方如下\n\n```shell\nbind-address\t\t= ::    # 指定允许数据库访问的IP，\"::\"表明允许v4和v6访问\n\nserver-id\t\t= 1                     # 指定mysql的编号 该编号作为数据库集群的识别号因此不能冲突\nlog_bin\t\t\t= /var/log/mysql/mysql-bin.log   # 开启二进制log文件\nbinlog_format           = mixed\nrelay-log               = relay-bin\nrelay-log-index         = slave-relay-bin.index\nauto-increment-offset   = 2     # 设置自增长偏移，这里有两个数据库因此每次增长为2\nauto-increment-increment = 1    # 设置自增长起始\nbinlog_do_db            = test  # 设置需要同步的数据库名称\nbinlog_do_db            = test1\n```\n\n完整的配置文件如下，这里将原配置文件的注释屏蔽掉\n\n\n```shell\nroot@HA-1:~# cat /etc/mysql/mysql.conf.d/mysqld.cnf | grep -v '#'\n\n[mysqld_safe]\nsocket\t\t= /var/run/mysqld/mysqld.sock\nnice\t\t= 0\n\n[mysqld]\nuser\t\t= mysql\npid-file\t= /var/run/mysqld/mysqld.pid\nsocket\t\t= /var/run/mysqld/mysqld.sock\nport\t\t= 3306\nbasedir\t\t= /usr\ndatadir\t\t= /var/lib/mysql\ntmpdir\t\t= /tmp\nlc-messages-dir\t= /usr/share/mysql\nskip-external-locking\nbind-address\t\t= ::\nkey_buffer_size\t\t= 16M\nmax_allowed_packet\t= 16M\nthread_stack\t\t= 192K\nthread_cache_size       = 8\nmyisam-recover-options  = BACKUP\nquery_cache_limit\t= 1M\nquery_cache_size        = 16M\ngeneral_log_file        = /var/log/mysql/mysql.log\ngeneral_log             = 1\nlog_error = /var/log/mysql/error.log\nserver-id\t\t= 1\nlog_bin\t\t\t= /var/log/mysql/mysql-bin.log\nbinlog_format           = mixed\nexpire_logs_days        = 10\nmax_binlog_size         = 100M\nrelay-log               = relay-bin\nrelay-log-index         = slave-relay-bin.index\nauto-increment-offset   = 2\nauto-increment-increment = 1\nbinlog_do_db            = test\nbinlog_do_db            = test1\n```\n\n其他参数含义可参考[mysql配置文件详解](http://www.jb51.net/article/48082.htm)\n\n\n2）修改MySQL-HA-2服务器数据库配置\n\n修改HA-2节点的数据库配置文件，大致内容一致，只是在`server-id`和`auto-increment-increment`需要修改。\n\n```shell\nroot@HA-2:~# cat /etc/mysql/mysql.conf.d/mysqld.cnf | grep -v '#'\n[mysqld_safe]\nsocket\t\t= /var/run/mysqld/mysqld.sock\nnice\t\t= 0\n\n[mysqld]\nuser\t\t= mysql\npid-file\t= /var/run/mysqld/mysqld.pid\nsocket\t\t= /var/run/mysqld/mysqld.sock\nport\t\t= 3306\nbasedir\t\t= /usr\ndatadir\t\t= /var/lib/mysql\ntmpdir\t\t= /tmp\nlc-messages-dir\t= /usr/share/mysql\nskip-external-locking\nbind-address\t\t= ::\nkey_buffer_size\t\t= 16M\nmax_allowed_packet\t= 16M\nthread_stack\t\t= 192K\nthread_cache_size       = 8\nmyisam-recover-options  = BACKUP\nquery_cache_limit\t= 1M\nquery_cache_size        = 16M\ngeneral_log_file        = /var/log/mysql/mysql.log\ngeneral_log             = 1\nlog_error = /var/log/mysql/error.log\nserver-id\t\t= 2            # server id设置为2\nlog_bin\t\t\t= /var/log/mysql/mysql-bin.log\nbinlog_format           = mixed\nexpire_logs_days        = 10\nmax_binlog_size         = 100M\nrelay-log               = relay-bin\nrelay-log-index         = slave-relay-bin.index\nauto-increment-offset   = 2\nauto-increment-increment = 2    # 增长起始设置为2\nbinlog_do_db            = test\nbinlog_do_db            = test1\n```\n\n修改完成后**两个节点**的数据库都需要重启\n\n```shell\nservice mysql restart\n```\n\n### 3.3 设置主从数据库\n\n1)将HA-1设置为HA-2的主数据库\n\n首先在HA-1节点数据库创建同步账户\n\n```shell\nroot@HA-1:~# mysql -uroot -p\nmysql> GRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO sync@'192.168.10.102' IDENTIFIED BY 'sync';\nmysql> flush privileges;\n```\n\n随后查看数据库状态信息\n\n```mysql\nmysql> show master status;\n+------------------+----------+--------------+------------------+-------------------+\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+------------------+----------+--------------+------------------+-------------------+\n| mysql-bin.000001 |    465 | test,test1    |                  |                   |\n+------------------+----------+--------------+------------------+-------------------+\n1 row in set (0.00 sec)\n```\n\n记录下`File`和`Position`两个参数值，这是数据库主从同步的关键，也是告诉从数据自那哪个起点开始同步\n\n在**HA-2**节点的数据库输入以下信息，切记是在HA-2节点输入\n\n```mysql\nmysql> change master to master_host='192.168.10.101',master_user='sync',master_password='sync',master_log_file='mysql-bin.000001',master_log_pos=465;\n```\n\n随后重启HA-2节点的数据库\n\n```shell\nroot@HA-2:~# service mysql restart\n```\n\n然后在HA-2节点查看mysql的slave信息，确保下述两个值为yes\n\n> Slave_IO_Running:Yes\n> Slave_SQL_Running:Yes\n\n```shell\nmysql> show slave status\\G;\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: 192.168.10.101\n                  Master_User: copyuser\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: mysql-bin.000001\n          Read_Master_Log_Pos: 465\n               Relay_Log_File: relay-bin.00002\n                Relay_Log_Pos: 146\n        Relay_Master_Log_File: mysql-bin.000001\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n              Replicate_Do_DB:\n          Replicate_Ignore_DB:\n           Replicate_Do_Table:\n       Replicate_Ignore_Table:\n      Replicate_Wild_Do_Table:\n```\n\n2)将HA-2设置为HA-1的主数据库\n\n设置过程与上一步一致，首先创建同步账户随后添加主数据库信息，需要注意的是IP地址的修改\n\n在HA-2上创建同步账户\n\n```shell\nroot@HA-2:~# mysql -uroot -p\nmysql> GRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO sync@'192.168.10.101' IDENTIFIED BY 'sync';\nmysql> flush privileges;\n```\n\n随后查看数据库状态信息\n\n```mysql\nmysql> show master status;\n+------------------+----------+--------------+------------------+-------------------+\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+------------------+----------+--------------+------------------+-------------------+\n| mysql-bin.000002 |    465 | test,test1    |                  |                   |\n+------------------+----------+--------------+------------------+-------------------+\n1 row in set (0.00 sec)\n```\n\n记录下`File`和`Position`两个参数值，这是数据库主从同步的关键，也是告诉从数据自那哪个起点开始同步\n\n在**HA-1**节点的数据库输入以下信息，切记是在HA-1节点输入\n\n```mysql\nmysql> change master to master_host='192.168.10.102',master_user='sync',master_password='sync',master_log_file='mysql-bin.000001',master_log_pos=465;\n```\n\n随后重启HA-1节点的数据库\n\n```shell\nroot@HA-1:~# service mysql restart\n```\n\n然后在HA-1节点查看mysql的slave信息，确保下述两个值为yes\n\n> Slave_IO_Running:Yes\n> Slave_SQL_Running:Yes\n\n```shell\nmysql> show slave status\\G;\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: 192.168.10.102\n                  Master_User: copyuser\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: mysql-bin.000002\n          Read_Master_Log_Pos: 465\n               Relay_Log_File: relay-bin.00003\n                Relay_Log_Pos: 146\n        Relay_Master_Log_File: mysql-bin.000002\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n              Replicate_Do_DB:\n          Replicate_Ignore_DB:\n           Replicate_Do_Table:\n       Replicate_Ignore_Table:\n      Replicate_Wild_Do_Table:\n```\n\n### 3.4 测试数据库同步\n\n在HA-1节点创建一个数据库`test`\n\n```mysql\nmysql> create database test;\n```\n\n查看HA-2主机是否同步了HA-1上的数据变化\n\n```mysql\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| test          |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n```\n\n可以看出HA-2节点的数据库同步了HA-1节点的数据库，在配置成双主复制后任一节点数据库发生改变另一节点数据库都会进行同步。\n\n在配置完成数据库后若想对数据库进行访问只能访问单一节点数据库的IP，如果希望访问一个固定IP让数据库并能够实现故障自动切换就需要配合keepalived或者HAproxy进行代理。\n\n## 4 keepalived 安装\n\n### 4.1 keepalived介绍\n\n![keepalived](http://www.keepalived.org/images/ka-header.png)\n\nKeepalived软件起初是专为LVS负载均衡软件设计的，用来管理并监控LVS集群系统中各个服务节点的状态，后来又加入了可以实现高可用的VRRP功能。因此，Keepalived除了能够管理LVS软件外，还可以作为其他服务（例如：Nginx、Haproxy、MySQL等）的高可用解决方案软件。\n\nKeepalived软件主要是通过VRRP协议实现高可用功能的。VRRP是Virtual Router RedundancyProtocol(虚拟路由器冗余协议）的缩写，VRRP出现的目的就是为了解决静态路由单点故障问题的，它能够保证当个别节点宕机时，整个网络可以不间断地运行。\n\n所以，Keepalived 一方面具有配置管理LVS的功能，同时还具有对LVS下面节点进行健康检查的功能，另一方面也可实现系统网络服务的高可用功能。\n\n这里借用博客[4]的有关keepalived的集群工作原理示意图\n\n![keepalived状态切换示意图](https://i.imgur.com/iZyFaCC.png)\n\nKeepalived高可用对之间是通过 VRRP进行通信的， VRRP是遑过竞选机制来确定主备的，主的优先级高于备，因此，工作时主会优先获得所有的资源，备节点处于等待状态，当主挂了的时候，备节点就会接管主节点的资源，然后顶替主节点对外提供服务。\n\n在 Keepalived服务对之间，只有作为主的服务器会一直发送 VRRP广播包,告诉备它还活着，此时备不会枪占主，当主不可用时，即备监听不到主发送的广播包时，就会启动相关服务接管资源，保证业务的连续性.接管速度最快可以小于1秒。\n\n### 4.2 keepalived的安装\n\n安装方式分为两种：apt直接安装和手动编译安装\n\n1)手动编译安装\n\n手动编译的好处是可以使用较新的源码，首先下载源码\n\n```shell\nwget http://www.keepalived.org/software/keepalived-1.4.2.tar.gz\n```\n\n安装必要的编译包\n\n```shell\napt-get install -y gcc build-essential make curl libssl-dev libnl-3-dev libnl-genl-3-dev libsnmp-dev\n```\n\n配置编译，prefix指明需要安装在哪里，也可以不配置使用默认路径\n\n```shell\ntar xf keepalived-1.4.2.tar.gz\ncd keepalived-1.4.2\n./configure --prefix=/usr/local/keepalived\n```\n\n配置完成后直接编译二连`make`和`make install`即可\n\n2) apt安装\n\n```shell\napt install keepalived\n```\n\n### 4.3 keepapiled配置文件\n\nkeepalived服务安装完成之后，后面的主要工作就是在keepalived.conf文件中配置HA和负载均衡。一个功能比较完整的常用的keepalived配置文件，主要包含三块：*全局定义块*、*VRRP实例定义块*和*虚拟服务器定义块*。全局定义块是必须的，如果keepalived只用来做ha，虚拟服务器是可选的。下面数据库HA的配置文件模板：\n\n#### 4.3.1 keepalived.conf配置\n\n**HA-1主机**上的keepalived.conf文件的修改：\n\n```shell\nroot@HA-1:~# cat /etc/keepalived/keepalived.conf\n\n! Configuration File for keepalived\n\nglobal_defs {\n    router_id HA-1\n}\n\nvrrp_script chk_mysql {\n    script /etc/keepalived/bin/chk_mysql.sh    #健康监测脚本路径\n    interval 2\n    fall 3\n    rise 2\n}\n\nvrrp_instance VI_MYSQL {\n    state MASTER\n    interface enp0s9       # 监听网卡\n    virtual_router_id 100  # 虚拟路由编号，同一实例可以一致，但是其权重一定不能一致\n    nopreempt\n    priority 100           # 权重，两个节点不能一样\n    advert_int 1\n    virtual_ipaddress {\n        192.168.10.103      # 虚拟IP地址\n    }\n    notify /etc/keepalived/bin/kpad_notify.sh     # keep状态传入脚本，通过该脚本可得知当前keep运行状态\n    track_script {\n        chk_mysql            # 健康检查配置\n    }\n}\n\n}\n```\n##### 4.3.1.2 健康监测脚本\n\n创建脚本存放目录\n\n```shell\nroot@HA-1:~# mkdir -p /etc/keepalived/bin\n```\n\n1)keepalived状态脚本\n\n创建脚本`/etc/keepalived/bin/kpad_notify.sh`内容如下\n\n```bash\nroot@HA-1:~# cat /etc/keepalived/bin/kpad_notify.sh\n\n#!/bin/bash\n\nTYPE=$1\nNAME=$2\nSTATE=$3\n\nlog_file=\"/var/log/test/keepalived/keepalived.log\"\n\nlog() {\necho \"$(date +\"%Y-%m-%d %H:%M:%S.%4N\") [$STATE] $1\" >> $log_file\n}\n\ncase $STATE in\n    \"MASTER\")\n        echo 'MASTER' > /tmp/keepalived-state\n        exit 0\n        ;;\n    \"BACKUP\")\n        echo 'BACKUP' > /tmp/keepalived-state\n        exit 0\n        ;;\n    \"FAULT\")\n        echo 'FAULT' > /tmp/keepalived-state\n        log \"keepalived status is fault.\"\n        exit 0\n        ;;\n    *)\n        log \"unknown keepalived status.\"\n        exit 1\n        ;;\nesac\n```\n\n设置脚本运行权限\n\n```shell\nroot@HA-1:~# chmod +x /etc/keepalived/bin/kpad_notify.sh\n```\n\n2）配置mysql健康检查脚本\n\n编辑`/etc/keepalived/bin/chk_mysql.sh`脚本内容如下，脚本的大致思路是如果在master和backup状态下mysqld进程不存在则尝试重启mysql，若重启失败则任务该节点的mysql彻底故障，进行故障转移。\n\n```bash\n#!/bin/bash\n#########################################################################\n# File Name: chk_mysql.sh\n# Author: louie.long\n# Mail: ylong@biigroup.cn\n# Created Time: Wed 04 Apr 2018 10:44:20 AM CST\n# Description: check mysql service\n#########################################################################\n\nSTATE=`cat /tmp/keepalived-state`\nlog_file=\"/var/log/test/keepalived/keepalived.log\"\nservice_name=\"mysqld\"\nservice_cmd=\"/etc/init.d/mysql\"\nget_pid=`pidof $service_name`\n\nlog() {\necho \"$(date +\"%Y-%m-%d %H:%M:%S.%4N\") [$STATE] $1\" >> $log_file\n}\n\ncase $STATE in\n    \"MASTER\")\n        if [ \"${get_pid}\" == \"\" ]; then\n            log \"$service_name service isn't exist.\"\n            log \"Try to restart $service_name service.\"\n            $service_cmd start\n            if [ $? -eq 0 ]; then\n                log \"restart $service_name service successfully.\"\n            else\n                log \"restart $service_name service failed.\"\n                exit 1\n            fi\n        fi\n        exit 0\n        ;;\n    \"BACKUP\")\n        if [ \"${get_pid}\" == \"\" ]; then\n            log \"$service_name service isn't exist.\"\n            log \"Try to restart $service_name service.\"\n            $service_cmd start\n            if [ $? -eq 0 ]; then\n                log \"restart $service_name service successfully.\"\n            else\n                log \"restart $service_name service failed.\"\n                exit 1\n            fi\n        fi\n        exit 0\n        ;;\n    \"FAULT\")\n        exit 0\n        ;;\n       *)\n        exit 1\n        ;;\nesac\n```\n\n然后执行\n\n```shell\nroot@HA-1:~# chmod +x /etc/keepalived/bin/chk_mysql.sh\n```\n\n随后重启keepalived服务\n\n```shell\nroot@HA-1:~# service keepalived restart\n```\n\n#### 4.3.2 在HA-2节点上配置\n\n基本配置个HA-1节点上一样，两个健康监测脚本完全一致，不同的是keepalived.conf脚本中权重值和节点初始属性\n\n```shell\nroot@HA-2:~# cat /etc/keepalived/keepalived.conf\n\n! Configuration File for keepalived\n\nglobal_defs {\n    router_id HA-1\n}\n\nvrrp_script chk_mysql {\n    script /etc/keepalived/bin/chk_mysql.sh    #健康监测脚本路径\n    interval 2\n    fall 3\n    rise 2\n}\n\nvrrp_instance VI_MYSQL {\n    state BACKUP\n    interface enp0s9       # 监听网卡\n    virtual_router_id 100  # 虚拟路由编号，同一实例可以一致，但是其权重一定不能一致\n    nopreempt\n    priority 90           # 权重，两个节点不能一样\n    advert_int 1\n    virtual_ipaddress {\n        192.168.10.103      # 虚拟IP地址\n    }\n    notify /etc/keepalived/bin/kpad_notify.sh     # keep状态传入脚本，通过该脚本可得知当前keep运行状态\n    track_script {\n        chk_mysql            # 健康检查配置\n    }\n}\n\n}\n```\n\n在拷贝`/etc/keepalived/bin/kpad_notify.sh`和`/etc/keepalived/bin/chk_mysql.sh `两个脚本后重启keepalived服务\n\n```shell\nroot@HA-2:~# service keepalived restart\n```\n\n#### 4.3.3 测试\n\n在HA-1和HA-2分别执行ip addr show dev enp0s9命令查看HA-1和HA-2对VIP（群集虚拟IP）的控制权。HA-1主的查看结果：\n\n```shell\nroot@HA-1:~# ip addr show dev enp0s9\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\n    link/ether 00:0c:29:fd:98:1b brd ff:ff:ff:ff:ff:ff\n    inet 192.168.10.101/20 brd 192.168.15.255 scope global enp0s9\n       valid_lft forever preferred_lft forever\n    inet 192.168.10.103/32 scope global enp0s9\n       valid_lft forever preferred_lft forever\n    inet6 240c:f:1:4000:20c:29ff:fefd:981b/64 scope global mngtmpaddr dynamic\n       valid_lft 2591546sec preferred_lft 604346sec\n    inet6 fe80::20c:29ff:fefd:981b/64 scope link\n       valid_lft forever preferred_lft forever\n```\n\n可以看到生成了192.168.10.101这个虚拟IP。\n\n停止HA-1的keepalived服务，HA-2将会成为新的主节点，HA-2主的查看结果：\n\n```shell\nroot@HA-2:~# ip addr show dev enp0s9\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\n    link/ether 00:0c:29:fd:98:1b brd ff:ff:ff:ff:ff:ff\n    inet 192.168.10.102/20 brd 192.168.15.255 scope global enp0s9\n       valid_lft forever preferred_lft forever\n    inet 192.168.10.103/32 scope global enp0s9\n       valid_lft forever preferred_lft forever\n    inet6 240c:f:1:4000:20c:29ff:fefd:981b/64 scope global mngtmpaddr dynamic\n       valid_lft 2591855sec preferred_lft 604655sec\n    inet6 fe80::20c:29ff:fefd:981b/64 scope link\n       valid_lft forever preferred_lft forever\n```\n\n可以看到生成了192.168.10.103这个虚IP。\n\nMySQL远程登录测试：\n\n```shell\nroot@HA-2:~#  mysql -h192.168.10.103 -uroot -p\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 2119\nServer version: 5.7.21-0ubuntu0.16.04.1-log (Ubuntu)\n\nCopyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> show variables like 'server_id';\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| server_id     | 2     |\n+---------------+-------+\n1 row in set (0.00 sec)\n\n```\n\n说明在客户端访问VIP地址，由HA-2主机提供响应的，当前状态下HA-2充当主服务器。\n\n【Note】\n\n经过测试在纯IPv6的环境下上述HA依然可以正常运行。\n\n\n\n\n\n\n\n【参考链接】\n\n1)[mysql介绍](https://baike.baidu.com/item/mySQL/471251?fr=aladdin)\n\n2)[mysql安装跳过密码设置](https://stackoverflow.com/questions/7739645/install-mysql-on-ubuntu-without-a-password-prompt)\n\n3)[keepalived官网](http://www.keepalived.org)\n\n4)[keepaliced介绍](https://www.cnblogs.com/clsn/p/8052649.html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"mysql-ha","published":1,"date":"2018-04-13T09:32:24.579Z","updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2wp000r6ijxbl42ocmi","content":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 前言</h2><p>MySQL复制中较常见的复制架构有“一主一从”、“一主多从”、“双主”、“多级复制”和“多主环形机构”等，在项目实施中遇到需要进行故障转移的需求：两台服务器每台都安装MySQL，当一个MySQL服务器故障时另一个MySQL服务器能够继续提供服务，这要求两个MySQL之间能够进行数据复制同时需要监控两台服务器的状态。</p>\n<p>本次使用MySQL的双主复制以及keepalived的HA机制来实现。</p>\n<h2 id=\"2-环境准备\"><a href=\"#2-环境准备\" class=\"headerlink\" title=\"2 环境准备\"></a>2 环境准备</h2><p>两台服务器：<br>服务器MySQL-HA-1(主) 192.168.10.101<br>服务器MySQL-HA-2(主) 192.168.10.102<br>虚拟服务节点IP       192.168.10.103<br>Mysql版本：mysql  Ver 14.14 Distrib 5.7.21<br>System OS：ubuntu 16.04</p>\n<h2 id=\"3-mysql数据库配置\"><a href=\"#3-mysql数据库配置\" class=\"headerlink\" title=\"3 mysql数据库配置\"></a>3 mysql数据库配置</h2><h3 id=\"3-1-mysql数据库介绍\"><a href=\"#3-1-mysql数据库介绍\" class=\"headerlink\" title=\"3.1 mysql数据库介绍\"></a>3.1 mysql数据库介绍</h3><p><img src=\"https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/w%3D268%3Bg%3D0/sign=e35e494a6159252da3171a020ca06406/ac6eddc451da81cb037c289d5366d016082431c3.jpg\" alt=\"mysql\"></p>\n<p>MySQL是一个<a href=\"https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F\" target=\"_blank\" rel=\"noopener\"><strong>关系型数据库管理系统</strong></a><strong>，</strong>由瑞典MySQL AB 公司开发，目前属于 <a href=\"https://baike.baidu.com/item/Oracle\" target=\"_blank\" rel=\"noopener\">Oracle</a> 旗下产品。MySQL 是最流行的<a href=\"https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F\" target=\"_blank\" rel=\"noopener\">关系型数据库管理系统</a>之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件。</p>\n<p>MySQL是一种关系数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p>\n<p>MySQL所使用的 SQL 语言是用于访问<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93\" target=\"_blank\" rel=\"noopener\">数据库</a>的最常用标准化语言[1]。</p>\n<h3 id=\"3-1-安装数据库\"><a href=\"#3-1-安装数据库\" class=\"headerlink\" title=\"3.1 安装数据库\"></a>3.1 安装数据库</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install -y mysql-server</span><br></pre></td></tr></table></figure>\n<p>【Tips】：安装过程需要输入数据库密码，出于后续部署的自动化考虑，希望自动化部署中不被打断，解决这个问题有两种方法：</p>\n<p>1) 预先设置密码</p>\n<p>使用<code>debconf-set-selections</code>工具预先将密码写入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo debconf-set-selections &lt;&lt;&lt; 'mysql-server mysql-server/root_password password your_password'</span><br><span class=\"line\">sudo debconf-set-selections &lt;&lt;&lt; 'mysql-server mysql-server/root_password_again password your_password'</span><br><span class=\"line\">sudo apt-get -y install mysql-server</span><br></pre></td></tr></table></figure>\n<p>将<code>your_password</code>替换为想要设置的mysql root账户密码，针对不同的mysql版本会有相应的改变，参见<a href=\"https://stackoverflow.com/questions/7739645/install-mysql-on-ubuntu-without-a-password-prompt\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<p>2)静默安装</p>\n<p>使用如下命令通过非交互的方式静默安装mysql</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server</span><br></pre></td></tr></table></figure>\n<p>在安装完成后mysql是没有密码的，root用户下是可以免密进入命令行的，然后再修改mysql的root用户访问密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -e\"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('passwd');\"</span><br></pre></td></tr></table></figure>\n<p>将<code>passwd</code>替换为自己的密码即可。</p>\n<p>3.2 数据库初始化配置</p>\n<p>在修改配置前最好先备份mysql配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp /etc/mysql/mysql.conf.d/mysqld.cnf  /etc/mysql/mysql.conf.d/mysqld.cnf-bak</span><br></pre></td></tr></table></figure>\n<p>1）设置时区</p>\n<p>在<code>mysqld.cnf</code>的<code>[mysqld]</code>后加入<code>default-time-zone = &#39;+8:00&#39;</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i \"/^\\[mysqld\\]/a\\default-time-zone = \\'+8:00\\'\" /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-修改数据库配置\"><a href=\"#3-3-修改数据库配置\" class=\"headerlink\" title=\"3.3 修改数据库配置\"></a>3.3 修改数据库配置</h3><p>设置需要同步的数据库，此处以数据库<code>test</code>为例</p>\n<p>1）修改MySQL-HA-1服务器数据库配置</p>\n<p>主要修改的地方如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind-address\t\t= ::    # 指定允许数据库访问的IP，\"::\"表明允许v4和v6访问</span><br><span class=\"line\"></span><br><span class=\"line\">server-id\t\t= 1                     # 指定mysql的编号 该编号作为数据库集群的识别号因此不能冲突</span><br><span class=\"line\">log_bin\t\t\t= /var/log/mysql/mysql-bin.log   # 开启二进制log文件</span><br><span class=\"line\">binlog_format           = mixed</span><br><span class=\"line\">relay-log               = relay-bin</span><br><span class=\"line\">relay-log-index         = slave-relay-bin.index</span><br><span class=\"line\">auto-increment-offset   = 2     # 设置自增长偏移，这里有两个数据库因此每次增长为2</span><br><span class=\"line\">auto-increment-increment = 1    # 设置自增长起始</span><br><span class=\"line\">binlog_do_db            = test  # 设置需要同步的数据库名称</span><br><span class=\"line\">binlog_do_db            = test1</span><br></pre></td></tr></table></figure>\n<p>完整的配置文件如下，这里将原配置文件的注释屏蔽掉</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# cat /etc/mysql/mysql.conf.d/mysqld.cnf | grep -v '#'</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld_safe]</span><br><span class=\"line\">socket\t\t= /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">nice\t\t= 0</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">user\t\t= mysql</span><br><span class=\"line\">pid-file\t= /var/run/mysqld/mysqld.pid</span><br><span class=\"line\">socket\t\t= /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">port\t\t= 3306</span><br><span class=\"line\">basedir\t\t= /usr</span><br><span class=\"line\">datadir\t\t= /var/lib/mysql</span><br><span class=\"line\">tmpdir\t\t= /tmp</span><br><span class=\"line\">lc-messages-dir\t= /usr/share/mysql</span><br><span class=\"line\">skip-external-locking</span><br><span class=\"line\">bind-address\t\t= ::</span><br><span class=\"line\">key_buffer_size\t\t= 16M</span><br><span class=\"line\">max_allowed_packet\t= 16M</span><br><span class=\"line\">thread_stack\t\t= 192K</span><br><span class=\"line\">thread_cache_size       = 8</span><br><span class=\"line\">myisam-recover-options  = BACKUP</span><br><span class=\"line\">query_cache_limit\t= 1M</span><br><span class=\"line\">query_cache_size        = 16M</span><br><span class=\"line\">general_log_file        = /var/log/mysql/mysql.log</span><br><span class=\"line\">general_log             = 1</span><br><span class=\"line\">log_error = /var/log/mysql/error.log</span><br><span class=\"line\">server-id\t\t= 1</span><br><span class=\"line\">log_bin\t\t\t= /var/log/mysql/mysql-bin.log</span><br><span class=\"line\">binlog_format           = mixed</span><br><span class=\"line\">expire_logs_days        = 10</span><br><span class=\"line\">max_binlog_size         = 100M</span><br><span class=\"line\">relay-log               = relay-bin</span><br><span class=\"line\">relay-log-index         = slave-relay-bin.index</span><br><span class=\"line\">auto-increment-offset   = 2</span><br><span class=\"line\">auto-increment-increment = 1</span><br><span class=\"line\">binlog_do_db            = test</span><br><span class=\"line\">binlog_do_db            = test1</span><br></pre></td></tr></table></figure>\n<p>其他参数含义可参考<a href=\"http://www.jb51.net/article/48082.htm\" target=\"_blank\" rel=\"noopener\">mysql配置文件详解</a></p>\n<p>2）修改MySQL-HA-2服务器数据库配置</p>\n<p>修改HA-2节点的数据库配置文件，大致内容一致，只是在<code>server-id</code>和<code>auto-increment-increment</code>需要修改。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# cat /etc/mysql/mysql.conf.d/mysqld.cnf | grep -v '#'</span><br><span class=\"line\">[mysqld_safe]</span><br><span class=\"line\">socket\t\t= /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">nice\t\t= 0</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">user\t\t= mysql</span><br><span class=\"line\">pid-file\t= /var/run/mysqld/mysqld.pid</span><br><span class=\"line\">socket\t\t= /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">port\t\t= 3306</span><br><span class=\"line\">basedir\t\t= /usr</span><br><span class=\"line\">datadir\t\t= /var/lib/mysql</span><br><span class=\"line\">tmpdir\t\t= /tmp</span><br><span class=\"line\">lc-messages-dir\t= /usr/share/mysql</span><br><span class=\"line\">skip-external-locking</span><br><span class=\"line\">bind-address\t\t= ::</span><br><span class=\"line\">key_buffer_size\t\t= 16M</span><br><span class=\"line\">max_allowed_packet\t= 16M</span><br><span class=\"line\">thread_stack\t\t= 192K</span><br><span class=\"line\">thread_cache_size       = 8</span><br><span class=\"line\">myisam-recover-options  = BACKUP</span><br><span class=\"line\">query_cache_limit\t= 1M</span><br><span class=\"line\">query_cache_size        = 16M</span><br><span class=\"line\">general_log_file        = /var/log/mysql/mysql.log</span><br><span class=\"line\">general_log             = 1</span><br><span class=\"line\">log_error = /var/log/mysql/error.log</span><br><span class=\"line\">server-id\t\t= 2            # server id设置为2</span><br><span class=\"line\">log_bin\t\t\t= /var/log/mysql/mysql-bin.log</span><br><span class=\"line\">binlog_format           = mixed</span><br><span class=\"line\">expire_logs_days        = 10</span><br><span class=\"line\">max_binlog_size         = 100M</span><br><span class=\"line\">relay-log               = relay-bin</span><br><span class=\"line\">relay-log-index         = slave-relay-bin.index</span><br><span class=\"line\">auto-increment-offset   = 2</span><br><span class=\"line\">auto-increment-increment = 2    # 增长起始设置为2</span><br><span class=\"line\">binlog_do_db            = test</span><br><span class=\"line\">binlog_do_db            = test1</span><br></pre></td></tr></table></figure>\n<p>修改完成后<strong>两个节点</strong>的数据库都需要重启</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysql restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-设置主从数据库\"><a href=\"#3-3-设置主从数据库\" class=\"headerlink\" title=\"3.3 设置主从数据库\"></a>3.3 设置主从数据库</h3><p>1)将HA-1设置为HA-2的主数据库</p>\n<p>首先在HA-1节点数据库创建同步账户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# mysql -uroot -p</span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span> GRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO sync@'192.168.10.102' IDENTIFIED BY 'sync';</span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span> flush privileges;</span><br></pre></td></tr></table></figure>\n<p>随后查看数据库状态信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show master status;</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| mysql-bin.000001 |    465 | test,test1    |                  |                   |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>记录下<code>File</code>和<code>Position</code>两个参数值，这是数据库主从同步的关键，也是告诉从数据自那哪个起点开始同步</p>\n<p>在<strong>HA-2</strong>节点的数据库输入以下信息，切记是在HA-2节点输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; change master to master_host=&apos;192.168.10.101&apos;,master_user=&apos;sync&apos;,master_password=&apos;sync&apos;,master_log_file=&apos;mysql-bin.000001&apos;,master_log_pos=465;</span><br></pre></td></tr></table></figure>\n<p>随后重启HA-2节点的数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# service mysql restart</span><br></pre></td></tr></table></figure>\n<p>然后在HA-2节点查看mysql的slave信息，确保下述两个值为yes</p>\n<blockquote>\n<p>Slave_IO_Running:Yes<br>Slave_SQL_Running:Yes</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span> show slave status\\G;</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">               Slave_IO_State: Waiting for master to send event</span><br><span class=\"line\">                  Master_Host: 192.168.10.101</span><br><span class=\"line\">                  Master_User: copyuser</span><br><span class=\"line\">                  Master_Port: 3306</span><br><span class=\"line\">                Connect_Retry: 60</span><br><span class=\"line\">              Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">          Read_Master_Log_Pos: 465</span><br><span class=\"line\">               Relay_Log_File: relay-bin.00002</span><br><span class=\"line\">                Relay_Log_Pos: 146</span><br><span class=\"line\">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">             Slave_IO_Running: Yes</span><br><span class=\"line\">            Slave_SQL_Running: Yes</span><br><span class=\"line\">              Replicate_Do_DB:</span><br><span class=\"line\">          Replicate_Ignore_DB:</span><br><span class=\"line\">           Replicate_Do_Table:</span><br><span class=\"line\">       Replicate_Ignore_Table:</span><br><span class=\"line\">      Replicate_Wild_Do_Table:</span><br></pre></td></tr></table></figure>\n<p>2)将HA-2设置为HA-1的主数据库</p>\n<p>设置过程与上一步一致，首先创建同步账户随后添加主数据库信息，需要注意的是IP地址的修改</p>\n<p>在HA-2上创建同步账户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# mysql -uroot -p</span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span> GRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO sync@'192.168.10.101' IDENTIFIED BY 'sync';</span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span> flush privileges;</span><br></pre></td></tr></table></figure>\n<p>随后查看数据库状态信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show master status;</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| mysql-bin.000002 |    465 | test,test1    |                  |                   |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>记录下<code>File</code>和<code>Position</code>两个参数值，这是数据库主从同步的关键，也是告诉从数据自那哪个起点开始同步</p>\n<p>在<strong>HA-1</strong>节点的数据库输入以下信息，切记是在HA-1节点输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; change master to master_host=&apos;192.168.10.102&apos;,master_user=&apos;sync&apos;,master_password=&apos;sync&apos;,master_log_file=&apos;mysql-bin.000001&apos;,master_log_pos=465;</span><br></pre></td></tr></table></figure>\n<p>随后重启HA-1节点的数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# service mysql restart</span><br></pre></td></tr></table></figure>\n<p>然后在HA-1节点查看mysql的slave信息，确保下述两个值为yes</p>\n<blockquote>\n<p>Slave_IO_Running:Yes<br>Slave_SQL_Running:Yes</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span> show slave status\\G;</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">               Slave_IO_State: Waiting for master to send event</span><br><span class=\"line\">                  Master_Host: 192.168.10.102</span><br><span class=\"line\">                  Master_User: copyuser</span><br><span class=\"line\">                  Master_Port: 3306</span><br><span class=\"line\">                Connect_Retry: 60</span><br><span class=\"line\">              Master_Log_File: mysql-bin.000002</span><br><span class=\"line\">          Read_Master_Log_Pos: 465</span><br><span class=\"line\">               Relay_Log_File: relay-bin.00003</span><br><span class=\"line\">                Relay_Log_Pos: 146</span><br><span class=\"line\">        Relay_Master_Log_File: mysql-bin.000002</span><br><span class=\"line\">             Slave_IO_Running: Yes</span><br><span class=\"line\">            Slave_SQL_Running: Yes</span><br><span class=\"line\">              Replicate_Do_DB:</span><br><span class=\"line\">          Replicate_Ignore_DB:</span><br><span class=\"line\">           Replicate_Do_Table:</span><br><span class=\"line\">       Replicate_Ignore_Table:</span><br><span class=\"line\">      Replicate_Wild_Do_Table:</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-4-测试数据库同步\"><a href=\"#3-4-测试数据库同步\" class=\"headerlink\" title=\"3.4 测试数据库同步\"></a>3.4 测试数据库同步</h3><p>在HA-1节点创建一个数据库<code>test</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create database test;</span><br></pre></td></tr></table></figure>\n<p>查看HA-2主机是否同步了HA-1上的数据变化</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show databases;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| test          |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>可以看出HA-2节点的数据库同步了HA-1节点的数据库，在配置成双主复制后任一节点数据库发生改变另一节点数据库都会进行同步。</p>\n<p>在配置完成数据库后若想对数据库进行访问只能访问单一节点数据库的IP，如果希望访问一个固定IP让数据库并能够实现故障自动切换就需要配合keepalived或者HAproxy进行代理。</p>\n<h2 id=\"4-keepalived-安装\"><a href=\"#4-keepalived-安装\" class=\"headerlink\" title=\"4 keepalived 安装\"></a>4 keepalived 安装</h2><h3 id=\"4-1-keepalived介绍\"><a href=\"#4-1-keepalived介绍\" class=\"headerlink\" title=\"4.1 keepalived介绍\"></a>4.1 keepalived介绍</h3><p><img src=\"http://www.keepalived.org/images/ka-header.png\" alt=\"keepalived\"></p>\n<p>Keepalived软件起初是专为LVS负载均衡软件设计的，用来管理并监控LVS集群系统中各个服务节点的状态，后来又加入了可以实现高可用的VRRP功能。因此，Keepalived除了能够管理LVS软件外，还可以作为其他服务（例如：Nginx、Haproxy、MySQL等）的高可用解决方案软件。</p>\n<p>Keepalived软件主要是通过VRRP协议实现高可用功能的。VRRP是Virtual Router RedundancyProtocol(虚拟路由器冗余协议）的缩写，VRRP出现的目的就是为了解决静态路由单点故障问题的，它能够保证当个别节点宕机时，整个网络可以不间断地运行。</p>\n<p>所以，Keepalived 一方面具有配置管理LVS的功能，同时还具有对LVS下面节点进行健康检查的功能，另一方面也可实现系统网络服务的高可用功能。</p>\n<p>这里借用博客[4]的有关keepalived的集群工作原理示意图</p>\n<p><img src=\"https://i.imgur.com/iZyFaCC.png\" alt=\"keepalived状态切换示意图\"></p>\n<p>Keepalived高可用对之间是通过 VRRP进行通信的， VRRP是遑过竞选机制来确定主备的，主的优先级高于备，因此，工作时主会优先获得所有的资源，备节点处于等待状态，当主挂了的时候，备节点就会接管主节点的资源，然后顶替主节点对外提供服务。</p>\n<p>在 Keepalived服务对之间，只有作为主的服务器会一直发送 VRRP广播包,告诉备它还活着，此时备不会枪占主，当主不可用时，即备监听不到主发送的广播包时，就会启动相关服务接管资源，保证业务的连续性.接管速度最快可以小于1秒。</p>\n<h3 id=\"4-2-keepalived的安装\"><a href=\"#4-2-keepalived的安装\" class=\"headerlink\" title=\"4.2 keepalived的安装\"></a>4.2 keepalived的安装</h3><p>安装方式分为两种：apt直接安装和手动编译安装</p>\n<p>1)手动编译安装</p>\n<p>手动编译的好处是可以使用较新的源码，首先下载源码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.keepalived.org/software/keepalived-1.4.2.tar.gz</span><br></pre></td></tr></table></figure>\n<p>安装必要的编译包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install -y gcc build-essential make curl libssl-dev libnl-3-dev libnl-genl-3-dev libsnmp-dev</span><br></pre></td></tr></table></figure>\n<p>配置编译，prefix指明需要安装在哪里，也可以不配置使用默认路径</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xf keepalived-1.4.2.tar.gz</span><br><span class=\"line\">cd keepalived-1.4.2</span><br><span class=\"line\">./configure --prefix=/usr/local/keepalived</span><br></pre></td></tr></table></figure>\n<p>配置完成后直接编译二连<code>make</code>和<code>make install</code>即可</p>\n<p>2) apt安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install keepalived</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-3-keepapiled配置文件\"><a href=\"#4-3-keepapiled配置文件\" class=\"headerlink\" title=\"4.3 keepapiled配置文件\"></a>4.3 keepapiled配置文件</h3><p>keepalived服务安装完成之后，后面的主要工作就是在keepalived.conf文件中配置HA和负载均衡。一个功能比较完整的常用的keepalived配置文件，主要包含三块：<em>全局定义块</em>、<em>VRRP实例定义块</em>和<em>虚拟服务器定义块</em>。全局定义块是必须的，如果keepalived只用来做ha，虚拟服务器是可选的。下面数据库HA的配置文件模板：</p>\n<h4 id=\"4-3-1-keepalived-conf配置\"><a href=\"#4-3-1-keepalived-conf配置\" class=\"headerlink\" title=\"4.3.1 keepalived.conf配置\"></a>4.3.1 keepalived.conf配置</h4><p><strong>HA-1主机</strong>上的keepalived.conf文件的修改：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# cat /etc/keepalived/keepalived.conf</span><br><span class=\"line\"></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">    router_id HA-1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script chk_mysql &#123;</span><br><span class=\"line\">    script /etc/keepalived/bin/chk_mysql.sh    #健康监测脚本路径</span><br><span class=\"line\">    interval 2</span><br><span class=\"line\">    fall 3</span><br><span class=\"line\">    rise 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_MYSQL &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface enp0s9       # 监听网卡</span><br><span class=\"line\">    virtual_router_id 100  # 虚拟路由编号，同一实例可以一致，但是其权重一定不能一致</span><br><span class=\"line\">    nopreempt</span><br><span class=\"line\">    priority 100           # 权重，两个节点不能一样</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.10.103      # 虚拟IP地址</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    notify /etc/keepalived/bin/kpad_notify.sh     # keep状态传入脚本，通过该脚本可得知当前keep运行状态</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        chk_mysql            # 健康检查配置</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-3-1-2-健康监测脚本\"><a href=\"#4-3-1-2-健康监测脚本\" class=\"headerlink\" title=\"4.3.1.2 健康监测脚本\"></a>4.3.1.2 健康监测脚本</h5><p>创建脚本存放目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# mkdir -p /etc/keepalived/bin</span><br></pre></td></tr></table></figure>\n<p>1)keepalived状态脚本</p>\n<p>创建脚本<code>/etc/keepalived/bin/kpad_notify.sh</code>内容如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~<span class=\"comment\"># cat /etc/keepalived/bin/kpad_notify.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">TYPE=<span class=\"variable\">$1</span></span><br><span class=\"line\">NAME=<span class=\"variable\">$2</span></span><br><span class=\"line\">STATE=<span class=\"variable\">$3</span></span><br><span class=\"line\"></span><br><span class=\"line\">log_file=<span class=\"string\">\"/var/log/test/keepalived/keepalived.log\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">log</span></span>() &#123;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$(date +\"%Y-%m-%d %H:%M:%S.%4N\")</span> [<span class=\"variable\">$STATE</span>] <span class=\"variable\">$1</span>\"</span> &gt;&gt; <span class=\"variable\">$log_file</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"variable\">$STATE</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"string\">\"MASTER\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'MASTER'</span> &gt; /tmp/keepalived-state</span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    <span class=\"string\">\"BACKUP\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'BACKUP'</span> &gt; /tmp/keepalived-state</span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    <span class=\"string\">\"FAULT\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'FAULT'</span> &gt; /tmp/keepalived-state</span><br><span class=\"line\">        <span class=\"built_in\">log</span> <span class=\"string\">\"keepalived status is fault.\"</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    *)</span><br><span class=\"line\">        <span class=\"built_in\">log</span> <span class=\"string\">\"unknown keepalived status.\"</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">        ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br></pre></td></tr></table></figure>\n<p>设置脚本运行权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# chmod +x /etc/keepalived/bin/kpad_notify.sh</span><br></pre></td></tr></table></figure>\n<p>2）配置mysql健康检查脚本</p>\n<p>编辑<code>/etc/keepalived/bin/chk_mysql.sh</code>脚本内容如下，脚本的大致思路是如果在master和backup状态下mysqld进程不存在则尝试重启mysql，若重启失败则任务该节点的mysql彻底故障，进行故障转移。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#########################################################################</span></span><br><span class=\"line\"><span class=\"comment\"># File Name: chk_mysql.sh</span></span><br><span class=\"line\"><span class=\"comment\"># Author: louie.long</span></span><br><span class=\"line\"><span class=\"comment\"># Mail: ylong@biigroup.cn</span></span><br><span class=\"line\"><span class=\"comment\"># Created Time: Wed 04 Apr 2018 10:44:20 AM CST</span></span><br><span class=\"line\"><span class=\"comment\"># Description: check mysql service</span></span><br><span class=\"line\"><span class=\"comment\">#########################################################################</span></span><br><span class=\"line\"></span><br><span class=\"line\">STATE=`cat /tmp/keepalived-state`</span><br><span class=\"line\">log_file=<span class=\"string\">\"/var/log/test/keepalived/keepalived.log\"</span></span><br><span class=\"line\">service_name=<span class=\"string\">\"mysqld\"</span></span><br><span class=\"line\">service_cmd=<span class=\"string\">\"/etc/init.d/mysql\"</span></span><br><span class=\"line\">get_pid=`pidof <span class=\"variable\">$service_name</span>`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">log</span></span>() &#123;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$(date +\"%Y-%m-%d %H:%M:%S.%4N\")</span> [<span class=\"variable\">$STATE</span>] <span class=\"variable\">$1</span>\"</span> &gt;&gt; <span class=\"variable\">$log_file</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"variable\">$STATE</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"string\">\"MASTER\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$&#123;get_pid&#125;</span>\"</span> == <span class=\"string\">\"\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">log</span> <span class=\"string\">\"<span class=\"variable\">$service_name</span> service isn't exist.\"</span></span><br><span class=\"line\">            <span class=\"built_in\">log</span> <span class=\"string\">\"Try to restart <span class=\"variable\">$service_name</span> service.\"</span></span><br><span class=\"line\">            <span class=\"variable\">$service_cmd</span> start</span><br><span class=\"line\">            <span class=\"keyword\">if</span> [ $? -eq 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"built_in\">log</span> <span class=\"string\">\"restart <span class=\"variable\">$service_name</span> service successfully.\"</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"built_in\">log</span> <span class=\"string\">\"restart <span class=\"variable\">$service_name</span> service failed.\"</span></span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">            <span class=\"keyword\">fi</span></span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    <span class=\"string\">\"BACKUP\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$&#123;get_pid&#125;</span>\"</span> == <span class=\"string\">\"\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">log</span> <span class=\"string\">\"<span class=\"variable\">$service_name</span> service isn't exist.\"</span></span><br><span class=\"line\">            <span class=\"built_in\">log</span> <span class=\"string\">\"Try to restart <span class=\"variable\">$service_name</span> service.\"</span></span><br><span class=\"line\">            <span class=\"variable\">$service_cmd</span> start</span><br><span class=\"line\">            <span class=\"keyword\">if</span> [ $? -eq 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"built_in\">log</span> <span class=\"string\">\"restart <span class=\"variable\">$service_name</span> service successfully.\"</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"built_in\">log</span> <span class=\"string\">\"restart <span class=\"variable\">$service_name</span> service failed.\"</span></span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">            <span class=\"keyword\">fi</span></span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    <span class=\"string\">\"FAULT\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">       *)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">        ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br></pre></td></tr></table></figure>\n<p>然后执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# chmod +x /etc/keepalived/bin/chk_mysql.sh</span><br></pre></td></tr></table></figure>\n<p>随后重启keepalived服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# service keepalived restart</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-3-2-在HA-2节点上配置\"><a href=\"#4-3-2-在HA-2节点上配置\" class=\"headerlink\" title=\"4.3.2 在HA-2节点上配置\"></a>4.3.2 在HA-2节点上配置</h4><p>基本配置个HA-1节点上一样，两个健康监测脚本完全一致，不同的是keepalived.conf脚本中权重值和节点初始属性</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# cat /etc/keepalived/keepalived.conf</span><br><span class=\"line\"></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">    router_id HA-1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script chk_mysql &#123;</span><br><span class=\"line\">    script /etc/keepalived/bin/chk_mysql.sh    #健康监测脚本路径</span><br><span class=\"line\">    interval 2</span><br><span class=\"line\">    fall 3</span><br><span class=\"line\">    rise 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_MYSQL &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface enp0s9       # 监听网卡</span><br><span class=\"line\">    virtual_router_id 100  # 虚拟路由编号，同一实例可以一致，但是其权重一定不能一致</span><br><span class=\"line\">    nopreempt</span><br><span class=\"line\">    priority 90           # 权重，两个节点不能一样</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.10.103      # 虚拟IP地址</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    notify /etc/keepalived/bin/kpad_notify.sh     # keep状态传入脚本，通过该脚本可得知当前keep运行状态</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        chk_mysql            # 健康检查配置</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在拷贝<code>/etc/keepalived/bin/kpad_notify.sh</code>和<code>/etc/keepalived/bin/chk_mysql.sh</code>两个脚本后重启keepalived服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# service keepalived restart</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-3-3-测试\"><a href=\"#4-3-3-测试\" class=\"headerlink\" title=\"4.3.3 测试\"></a>4.3.3 测试</h4><p>在HA-1和HA-2分别执行ip addr show dev enp0s9命令查看HA-1和HA-2对VIP（群集虚拟IP）的控制权。HA-1主的查看结果：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# ip addr show dev enp0s9</span><br><span class=\"line\">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:0c:29:fd:98:1b brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 192.168.10.101/20 brd 192.168.15.255 scope global enp0s9</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet 192.168.10.103/32 scope global enp0s9</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 240c:f:1:4000:20c:29ff:fefd:981b/64 scope global mngtmpaddr dynamic</span><br><span class=\"line\">       valid_lft 2591546sec preferred_lft 604346sec</span><br><span class=\"line\">    inet6 fe80::20c:29ff:fefd:981b/64 scope link</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>\n<p>可以看到生成了192.168.10.101这个虚拟IP。</p>\n<p>停止HA-1的keepalived服务，HA-2将会成为新的主节点，HA-2主的查看结果：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# ip addr show dev enp0s9</span><br><span class=\"line\">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:0c:29:fd:98:1b brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 192.168.10.102/20 brd 192.168.15.255 scope global enp0s9</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet 192.168.10.103/32 scope global enp0s9</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 240c:f:1:4000:20c:29ff:fefd:981b/64 scope global mngtmpaddr dynamic</span><br><span class=\"line\">       valid_lft 2591855sec preferred_lft 604655sec</span><br><span class=\"line\">    inet6 fe80::20c:29ff:fefd:981b/64 scope link</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>\n<p>可以看到生成了192.168.10.103这个虚IP。</p>\n<p>MySQL远程登录测试：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~#  mysql -h192.168.10.103 -uroot -p</span><br><span class=\"line\">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class=\"line\">Welcome to the MySQL monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection id is 2119</span><br><span class=\"line\">Server version: 5.7.21-0ubuntu0.16.04.1-log (Ubuntu)</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class=\"line\">affiliates. Other names may be trademarks of their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\">Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> show variables like <span class=\"string\">'server_id'</span>;</span></span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| Variable_name | Value |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| server_id     | 2     |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>说明在客户端访问VIP地址，由HA-2主机提供响应的，当前状态下HA-2充当主服务器。</p>\n<p>【Note】</p>\n<p>经过测试在纯IPv6的环境下上述HA依然可以正常运行。</p>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://baike.baidu.com/item/mySQL/471251?fr=aladdin\" target=\"_blank\" rel=\"noopener\">mysql介绍</a></p>\n<p>2)<a href=\"https://stackoverflow.com/questions/7739645/install-mysql-on-ubuntu-without-a-password-prompt\" target=\"_blank\" rel=\"noopener\">mysql安装跳过密码设置</a></p>\n<p>3)<a href=\"http://www.keepalived.org\" target=\"_blank\" rel=\"noopener\">keepalived官网</a></p>\n<p>4)<a href=\"https://www.cnblogs.com/clsn/p/8052649.html\" target=\"_blank\" rel=\"noopener\">keepaliced介绍</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 前言</h2><p>MySQL复制中较常见的复制架构有“一主一从”、“一主多从”、“双主”、“多级复制”和“多主环形机构”等，在项目实施中遇到需要进行故障转移的需求：两台服务器每台都安装MySQL，当一个MySQL服务器故障时另一个MySQL服务器能够继续提供服务，这要求两个MySQL之间能够进行数据复制同时需要监控两台服务器的状态。</p>\n<p>本次使用MySQL的双主复制以及keepalived的HA机制来实现。</p>\n<h2 id=\"2-环境准备\"><a href=\"#2-环境准备\" class=\"headerlink\" title=\"2 环境准备\"></a>2 环境准备</h2><p>两台服务器：<br>服务器MySQL-HA-1(主) 192.168.10.101<br>服务器MySQL-HA-2(主) 192.168.10.102<br>虚拟服务节点IP       192.168.10.103<br>Mysql版本：mysql  Ver 14.14 Distrib 5.7.21<br>System OS：ubuntu 16.04</p>\n<h2 id=\"3-mysql数据库配置\"><a href=\"#3-mysql数据库配置\" class=\"headerlink\" title=\"3 mysql数据库配置\"></a>3 mysql数据库配置</h2><h3 id=\"3-1-mysql数据库介绍\"><a href=\"#3-1-mysql数据库介绍\" class=\"headerlink\" title=\"3.1 mysql数据库介绍\"></a>3.1 mysql数据库介绍</h3><p><img src=\"https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/w%3D268%3Bg%3D0/sign=e35e494a6159252da3171a020ca06406/ac6eddc451da81cb037c289d5366d016082431c3.jpg\" alt=\"mysql\"></p>\n<p>MySQL是一个<a href=\"https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F\" target=\"_blank\" rel=\"noopener\"><strong>关系型数据库管理系统</strong></a><strong>，</strong>由瑞典MySQL AB 公司开发，目前属于 <a href=\"https://baike.baidu.com/item/Oracle\" target=\"_blank\" rel=\"noopener\">Oracle</a> 旗下产品。MySQL 是最流行的<a href=\"https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F\" target=\"_blank\" rel=\"noopener\">关系型数据库管理系统</a>之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件。</p>\n<p>MySQL是一种关系数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p>\n<p>MySQL所使用的 SQL 语言是用于访问<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93\" target=\"_blank\" rel=\"noopener\">数据库</a>的最常用标准化语言[1]。</p>\n<h3 id=\"3-1-安装数据库\"><a href=\"#3-1-安装数据库\" class=\"headerlink\" title=\"3.1 安装数据库\"></a>3.1 安装数据库</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install -y mysql-server</span><br></pre></td></tr></table></figure>\n<p>【Tips】：安装过程需要输入数据库密码，出于后续部署的自动化考虑，希望自动化部署中不被打断，解决这个问题有两种方法：</p>\n<p>1) 预先设置密码</p>\n<p>使用<code>debconf-set-selections</code>工具预先将密码写入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo debconf-set-selections &lt;&lt;&lt; 'mysql-server mysql-server/root_password password your_password'</span><br><span class=\"line\">sudo debconf-set-selections &lt;&lt;&lt; 'mysql-server mysql-server/root_password_again password your_password'</span><br><span class=\"line\">sudo apt-get -y install mysql-server</span><br></pre></td></tr></table></figure>\n<p>将<code>your_password</code>替换为想要设置的mysql root账户密码，针对不同的mysql版本会有相应的改变，参见<a href=\"https://stackoverflow.com/questions/7739645/install-mysql-on-ubuntu-without-a-password-prompt\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<p>2)静默安装</p>\n<p>使用如下命令通过非交互的方式静默安装mysql</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server</span><br></pre></td></tr></table></figure>\n<p>在安装完成后mysql是没有密码的，root用户下是可以免密进入命令行的，然后再修改mysql的root用户访问密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -e\"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('passwd');\"</span><br></pre></td></tr></table></figure>\n<p>将<code>passwd</code>替换为自己的密码即可。</p>\n<p>3.2 数据库初始化配置</p>\n<p>在修改配置前最好先备份mysql配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp /etc/mysql/mysql.conf.d/mysqld.cnf  /etc/mysql/mysql.conf.d/mysqld.cnf-bak</span><br></pre></td></tr></table></figure>\n<p>1）设置时区</p>\n<p>在<code>mysqld.cnf</code>的<code>[mysqld]</code>后加入<code>default-time-zone = &#39;+8:00&#39;</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i \"/^\\[mysqld\\]/a\\default-time-zone = \\'+8:00\\'\" /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-修改数据库配置\"><a href=\"#3-3-修改数据库配置\" class=\"headerlink\" title=\"3.3 修改数据库配置\"></a>3.3 修改数据库配置</h3><p>设置需要同步的数据库，此处以数据库<code>test</code>为例</p>\n<p>1）修改MySQL-HA-1服务器数据库配置</p>\n<p>主要修改的地方如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind-address\t\t= ::    # 指定允许数据库访问的IP，\"::\"表明允许v4和v6访问</span><br><span class=\"line\"></span><br><span class=\"line\">server-id\t\t= 1                     # 指定mysql的编号 该编号作为数据库集群的识别号因此不能冲突</span><br><span class=\"line\">log_bin\t\t\t= /var/log/mysql/mysql-bin.log   # 开启二进制log文件</span><br><span class=\"line\">binlog_format           = mixed</span><br><span class=\"line\">relay-log               = relay-bin</span><br><span class=\"line\">relay-log-index         = slave-relay-bin.index</span><br><span class=\"line\">auto-increment-offset   = 2     # 设置自增长偏移，这里有两个数据库因此每次增长为2</span><br><span class=\"line\">auto-increment-increment = 1    # 设置自增长起始</span><br><span class=\"line\">binlog_do_db            = test  # 设置需要同步的数据库名称</span><br><span class=\"line\">binlog_do_db            = test1</span><br></pre></td></tr></table></figure>\n<p>完整的配置文件如下，这里将原配置文件的注释屏蔽掉</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# cat /etc/mysql/mysql.conf.d/mysqld.cnf | grep -v '#'</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld_safe]</span><br><span class=\"line\">socket\t\t= /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">nice\t\t= 0</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">user\t\t= mysql</span><br><span class=\"line\">pid-file\t= /var/run/mysqld/mysqld.pid</span><br><span class=\"line\">socket\t\t= /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">port\t\t= 3306</span><br><span class=\"line\">basedir\t\t= /usr</span><br><span class=\"line\">datadir\t\t= /var/lib/mysql</span><br><span class=\"line\">tmpdir\t\t= /tmp</span><br><span class=\"line\">lc-messages-dir\t= /usr/share/mysql</span><br><span class=\"line\">skip-external-locking</span><br><span class=\"line\">bind-address\t\t= ::</span><br><span class=\"line\">key_buffer_size\t\t= 16M</span><br><span class=\"line\">max_allowed_packet\t= 16M</span><br><span class=\"line\">thread_stack\t\t= 192K</span><br><span class=\"line\">thread_cache_size       = 8</span><br><span class=\"line\">myisam-recover-options  = BACKUP</span><br><span class=\"line\">query_cache_limit\t= 1M</span><br><span class=\"line\">query_cache_size        = 16M</span><br><span class=\"line\">general_log_file        = /var/log/mysql/mysql.log</span><br><span class=\"line\">general_log             = 1</span><br><span class=\"line\">log_error = /var/log/mysql/error.log</span><br><span class=\"line\">server-id\t\t= 1</span><br><span class=\"line\">log_bin\t\t\t= /var/log/mysql/mysql-bin.log</span><br><span class=\"line\">binlog_format           = mixed</span><br><span class=\"line\">expire_logs_days        = 10</span><br><span class=\"line\">max_binlog_size         = 100M</span><br><span class=\"line\">relay-log               = relay-bin</span><br><span class=\"line\">relay-log-index         = slave-relay-bin.index</span><br><span class=\"line\">auto-increment-offset   = 2</span><br><span class=\"line\">auto-increment-increment = 1</span><br><span class=\"line\">binlog_do_db            = test</span><br><span class=\"line\">binlog_do_db            = test1</span><br></pre></td></tr></table></figure>\n<p>其他参数含义可参考<a href=\"http://www.jb51.net/article/48082.htm\" target=\"_blank\" rel=\"noopener\">mysql配置文件详解</a></p>\n<p>2）修改MySQL-HA-2服务器数据库配置</p>\n<p>修改HA-2节点的数据库配置文件，大致内容一致，只是在<code>server-id</code>和<code>auto-increment-increment</code>需要修改。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# cat /etc/mysql/mysql.conf.d/mysqld.cnf | grep -v '#'</span><br><span class=\"line\">[mysqld_safe]</span><br><span class=\"line\">socket\t\t= /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">nice\t\t= 0</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">user\t\t= mysql</span><br><span class=\"line\">pid-file\t= /var/run/mysqld/mysqld.pid</span><br><span class=\"line\">socket\t\t= /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">port\t\t= 3306</span><br><span class=\"line\">basedir\t\t= /usr</span><br><span class=\"line\">datadir\t\t= /var/lib/mysql</span><br><span class=\"line\">tmpdir\t\t= /tmp</span><br><span class=\"line\">lc-messages-dir\t= /usr/share/mysql</span><br><span class=\"line\">skip-external-locking</span><br><span class=\"line\">bind-address\t\t= ::</span><br><span class=\"line\">key_buffer_size\t\t= 16M</span><br><span class=\"line\">max_allowed_packet\t= 16M</span><br><span class=\"line\">thread_stack\t\t= 192K</span><br><span class=\"line\">thread_cache_size       = 8</span><br><span class=\"line\">myisam-recover-options  = BACKUP</span><br><span class=\"line\">query_cache_limit\t= 1M</span><br><span class=\"line\">query_cache_size        = 16M</span><br><span class=\"line\">general_log_file        = /var/log/mysql/mysql.log</span><br><span class=\"line\">general_log             = 1</span><br><span class=\"line\">log_error = /var/log/mysql/error.log</span><br><span class=\"line\">server-id\t\t= 2            # server id设置为2</span><br><span class=\"line\">log_bin\t\t\t= /var/log/mysql/mysql-bin.log</span><br><span class=\"line\">binlog_format           = mixed</span><br><span class=\"line\">expire_logs_days        = 10</span><br><span class=\"line\">max_binlog_size         = 100M</span><br><span class=\"line\">relay-log               = relay-bin</span><br><span class=\"line\">relay-log-index         = slave-relay-bin.index</span><br><span class=\"line\">auto-increment-offset   = 2</span><br><span class=\"line\">auto-increment-increment = 2    # 增长起始设置为2</span><br><span class=\"line\">binlog_do_db            = test</span><br><span class=\"line\">binlog_do_db            = test1</span><br></pre></td></tr></table></figure>\n<p>修改完成后<strong>两个节点</strong>的数据库都需要重启</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysql restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-设置主从数据库\"><a href=\"#3-3-设置主从数据库\" class=\"headerlink\" title=\"3.3 设置主从数据库\"></a>3.3 设置主从数据库</h3><p>1)将HA-1设置为HA-2的主数据库</p>\n<p>首先在HA-1节点数据库创建同步账户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# mysql -uroot -p</span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span> GRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO sync@'192.168.10.102' IDENTIFIED BY 'sync';</span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span> flush privileges;</span><br></pre></td></tr></table></figure>\n<p>随后查看数据库状态信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show master status;</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| mysql-bin.000001 |    465 | test,test1    |                  |                   |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>记录下<code>File</code>和<code>Position</code>两个参数值，这是数据库主从同步的关键，也是告诉从数据自那哪个起点开始同步</p>\n<p>在<strong>HA-2</strong>节点的数据库输入以下信息，切记是在HA-2节点输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; change master to master_host=&apos;192.168.10.101&apos;,master_user=&apos;sync&apos;,master_password=&apos;sync&apos;,master_log_file=&apos;mysql-bin.000001&apos;,master_log_pos=465;</span><br></pre></td></tr></table></figure>\n<p>随后重启HA-2节点的数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# service mysql restart</span><br></pre></td></tr></table></figure>\n<p>然后在HA-2节点查看mysql的slave信息，确保下述两个值为yes</p>\n<blockquote>\n<p>Slave_IO_Running:Yes<br>Slave_SQL_Running:Yes</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span> show slave status\\G;</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">               Slave_IO_State: Waiting for master to send event</span><br><span class=\"line\">                  Master_Host: 192.168.10.101</span><br><span class=\"line\">                  Master_User: copyuser</span><br><span class=\"line\">                  Master_Port: 3306</span><br><span class=\"line\">                Connect_Retry: 60</span><br><span class=\"line\">              Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">          Read_Master_Log_Pos: 465</span><br><span class=\"line\">               Relay_Log_File: relay-bin.00002</span><br><span class=\"line\">                Relay_Log_Pos: 146</span><br><span class=\"line\">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">             Slave_IO_Running: Yes</span><br><span class=\"line\">            Slave_SQL_Running: Yes</span><br><span class=\"line\">              Replicate_Do_DB:</span><br><span class=\"line\">          Replicate_Ignore_DB:</span><br><span class=\"line\">           Replicate_Do_Table:</span><br><span class=\"line\">       Replicate_Ignore_Table:</span><br><span class=\"line\">      Replicate_Wild_Do_Table:</span><br></pre></td></tr></table></figure>\n<p>2)将HA-2设置为HA-1的主数据库</p>\n<p>设置过程与上一步一致，首先创建同步账户随后添加主数据库信息，需要注意的是IP地址的修改</p>\n<p>在HA-2上创建同步账户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# mysql -uroot -p</span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span> GRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO sync@'192.168.10.101' IDENTIFIED BY 'sync';</span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span> flush privileges;</span><br></pre></td></tr></table></figure>\n<p>随后查看数据库状态信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show master status;</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| mysql-bin.000002 |    465 | test,test1    |                  |                   |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>记录下<code>File</code>和<code>Position</code>两个参数值，这是数据库主从同步的关键，也是告诉从数据自那哪个起点开始同步</p>\n<p>在<strong>HA-1</strong>节点的数据库输入以下信息，切记是在HA-1节点输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; change master to master_host=&apos;192.168.10.102&apos;,master_user=&apos;sync&apos;,master_password=&apos;sync&apos;,master_log_file=&apos;mysql-bin.000001&apos;,master_log_pos=465;</span><br></pre></td></tr></table></figure>\n<p>随后重启HA-1节点的数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# service mysql restart</span><br></pre></td></tr></table></figure>\n<p>然后在HA-1节点查看mysql的slave信息，确保下述两个值为yes</p>\n<blockquote>\n<p>Slave_IO_Running:Yes<br>Slave_SQL_Running:Yes</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span> show slave status\\G;</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">               Slave_IO_State: Waiting for master to send event</span><br><span class=\"line\">                  Master_Host: 192.168.10.102</span><br><span class=\"line\">                  Master_User: copyuser</span><br><span class=\"line\">                  Master_Port: 3306</span><br><span class=\"line\">                Connect_Retry: 60</span><br><span class=\"line\">              Master_Log_File: mysql-bin.000002</span><br><span class=\"line\">          Read_Master_Log_Pos: 465</span><br><span class=\"line\">               Relay_Log_File: relay-bin.00003</span><br><span class=\"line\">                Relay_Log_Pos: 146</span><br><span class=\"line\">        Relay_Master_Log_File: mysql-bin.000002</span><br><span class=\"line\">             Slave_IO_Running: Yes</span><br><span class=\"line\">            Slave_SQL_Running: Yes</span><br><span class=\"line\">              Replicate_Do_DB:</span><br><span class=\"line\">          Replicate_Ignore_DB:</span><br><span class=\"line\">           Replicate_Do_Table:</span><br><span class=\"line\">       Replicate_Ignore_Table:</span><br><span class=\"line\">      Replicate_Wild_Do_Table:</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-4-测试数据库同步\"><a href=\"#3-4-测试数据库同步\" class=\"headerlink\" title=\"3.4 测试数据库同步\"></a>3.4 测试数据库同步</h3><p>在HA-1节点创建一个数据库<code>test</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create database test;</span><br></pre></td></tr></table></figure>\n<p>查看HA-2主机是否同步了HA-1上的数据变化</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show databases;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| test          |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>可以看出HA-2节点的数据库同步了HA-1节点的数据库，在配置成双主复制后任一节点数据库发生改变另一节点数据库都会进行同步。</p>\n<p>在配置完成数据库后若想对数据库进行访问只能访问单一节点数据库的IP，如果希望访问一个固定IP让数据库并能够实现故障自动切换就需要配合keepalived或者HAproxy进行代理。</p>\n<h2 id=\"4-keepalived-安装\"><a href=\"#4-keepalived-安装\" class=\"headerlink\" title=\"4 keepalived 安装\"></a>4 keepalived 安装</h2><h3 id=\"4-1-keepalived介绍\"><a href=\"#4-1-keepalived介绍\" class=\"headerlink\" title=\"4.1 keepalived介绍\"></a>4.1 keepalived介绍</h3><p><img src=\"http://www.keepalived.org/images/ka-header.png\" alt=\"keepalived\"></p>\n<p>Keepalived软件起初是专为LVS负载均衡软件设计的，用来管理并监控LVS集群系统中各个服务节点的状态，后来又加入了可以实现高可用的VRRP功能。因此，Keepalived除了能够管理LVS软件外，还可以作为其他服务（例如：Nginx、Haproxy、MySQL等）的高可用解决方案软件。</p>\n<p>Keepalived软件主要是通过VRRP协议实现高可用功能的。VRRP是Virtual Router RedundancyProtocol(虚拟路由器冗余协议）的缩写，VRRP出现的目的就是为了解决静态路由单点故障问题的，它能够保证当个别节点宕机时，整个网络可以不间断地运行。</p>\n<p>所以，Keepalived 一方面具有配置管理LVS的功能，同时还具有对LVS下面节点进行健康检查的功能，另一方面也可实现系统网络服务的高可用功能。</p>\n<p>这里借用博客[4]的有关keepalived的集群工作原理示意图</p>\n<p><img src=\"https://i.imgur.com/iZyFaCC.png\" alt=\"keepalived状态切换示意图\"></p>\n<p>Keepalived高可用对之间是通过 VRRP进行通信的， VRRP是遑过竞选机制来确定主备的，主的优先级高于备，因此，工作时主会优先获得所有的资源，备节点处于等待状态，当主挂了的时候，备节点就会接管主节点的资源，然后顶替主节点对外提供服务。</p>\n<p>在 Keepalived服务对之间，只有作为主的服务器会一直发送 VRRP广播包,告诉备它还活着，此时备不会枪占主，当主不可用时，即备监听不到主发送的广播包时，就会启动相关服务接管资源，保证业务的连续性.接管速度最快可以小于1秒。</p>\n<h3 id=\"4-2-keepalived的安装\"><a href=\"#4-2-keepalived的安装\" class=\"headerlink\" title=\"4.2 keepalived的安装\"></a>4.2 keepalived的安装</h3><p>安装方式分为两种：apt直接安装和手动编译安装</p>\n<p>1)手动编译安装</p>\n<p>手动编译的好处是可以使用较新的源码，首先下载源码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.keepalived.org/software/keepalived-1.4.2.tar.gz</span><br></pre></td></tr></table></figure>\n<p>安装必要的编译包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install -y gcc build-essential make curl libssl-dev libnl-3-dev libnl-genl-3-dev libsnmp-dev</span><br></pre></td></tr></table></figure>\n<p>配置编译，prefix指明需要安装在哪里，也可以不配置使用默认路径</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xf keepalived-1.4.2.tar.gz</span><br><span class=\"line\">cd keepalived-1.4.2</span><br><span class=\"line\">./configure --prefix=/usr/local/keepalived</span><br></pre></td></tr></table></figure>\n<p>配置完成后直接编译二连<code>make</code>和<code>make install</code>即可</p>\n<p>2) apt安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install keepalived</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-3-keepapiled配置文件\"><a href=\"#4-3-keepapiled配置文件\" class=\"headerlink\" title=\"4.3 keepapiled配置文件\"></a>4.3 keepapiled配置文件</h3><p>keepalived服务安装完成之后，后面的主要工作就是在keepalived.conf文件中配置HA和负载均衡。一个功能比较完整的常用的keepalived配置文件，主要包含三块：<em>全局定义块</em>、<em>VRRP实例定义块</em>和<em>虚拟服务器定义块</em>。全局定义块是必须的，如果keepalived只用来做ha，虚拟服务器是可选的。下面数据库HA的配置文件模板：</p>\n<h4 id=\"4-3-1-keepalived-conf配置\"><a href=\"#4-3-1-keepalived-conf配置\" class=\"headerlink\" title=\"4.3.1 keepalived.conf配置\"></a>4.3.1 keepalived.conf配置</h4><p><strong>HA-1主机</strong>上的keepalived.conf文件的修改：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# cat /etc/keepalived/keepalived.conf</span><br><span class=\"line\"></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">    router_id HA-1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script chk_mysql &#123;</span><br><span class=\"line\">    script /etc/keepalived/bin/chk_mysql.sh    #健康监测脚本路径</span><br><span class=\"line\">    interval 2</span><br><span class=\"line\">    fall 3</span><br><span class=\"line\">    rise 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_MYSQL &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface enp0s9       # 监听网卡</span><br><span class=\"line\">    virtual_router_id 100  # 虚拟路由编号，同一实例可以一致，但是其权重一定不能一致</span><br><span class=\"line\">    nopreempt</span><br><span class=\"line\">    priority 100           # 权重，两个节点不能一样</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.10.103      # 虚拟IP地址</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    notify /etc/keepalived/bin/kpad_notify.sh     # keep状态传入脚本，通过该脚本可得知当前keep运行状态</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        chk_mysql            # 健康检查配置</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-3-1-2-健康监测脚本\"><a href=\"#4-3-1-2-健康监测脚本\" class=\"headerlink\" title=\"4.3.1.2 健康监测脚本\"></a>4.3.1.2 健康监测脚本</h5><p>创建脚本存放目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# mkdir -p /etc/keepalived/bin</span><br></pre></td></tr></table></figure>\n<p>1)keepalived状态脚本</p>\n<p>创建脚本<code>/etc/keepalived/bin/kpad_notify.sh</code>内容如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~<span class=\"comment\"># cat /etc/keepalived/bin/kpad_notify.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">TYPE=<span class=\"variable\">$1</span></span><br><span class=\"line\">NAME=<span class=\"variable\">$2</span></span><br><span class=\"line\">STATE=<span class=\"variable\">$3</span></span><br><span class=\"line\"></span><br><span class=\"line\">log_file=<span class=\"string\">\"/var/log/test/keepalived/keepalived.log\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">log</span></span>() &#123;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$(date +\"%Y-%m-%d %H:%M:%S.%4N\")</span> [<span class=\"variable\">$STATE</span>] <span class=\"variable\">$1</span>\"</span> &gt;&gt; <span class=\"variable\">$log_file</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"variable\">$STATE</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"string\">\"MASTER\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'MASTER'</span> &gt; /tmp/keepalived-state</span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    <span class=\"string\">\"BACKUP\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'BACKUP'</span> &gt; /tmp/keepalived-state</span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    <span class=\"string\">\"FAULT\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'FAULT'</span> &gt; /tmp/keepalived-state</span><br><span class=\"line\">        <span class=\"built_in\">log</span> <span class=\"string\">\"keepalived status is fault.\"</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    *)</span><br><span class=\"line\">        <span class=\"built_in\">log</span> <span class=\"string\">\"unknown keepalived status.\"</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">        ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br></pre></td></tr></table></figure>\n<p>设置脚本运行权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# chmod +x /etc/keepalived/bin/kpad_notify.sh</span><br></pre></td></tr></table></figure>\n<p>2）配置mysql健康检查脚本</p>\n<p>编辑<code>/etc/keepalived/bin/chk_mysql.sh</code>脚本内容如下，脚本的大致思路是如果在master和backup状态下mysqld进程不存在则尝试重启mysql，若重启失败则任务该节点的mysql彻底故障，进行故障转移。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#########################################################################</span></span><br><span class=\"line\"><span class=\"comment\"># File Name: chk_mysql.sh</span></span><br><span class=\"line\"><span class=\"comment\"># Author: louie.long</span></span><br><span class=\"line\"><span class=\"comment\"># Mail: ylong@biigroup.cn</span></span><br><span class=\"line\"><span class=\"comment\"># Created Time: Wed 04 Apr 2018 10:44:20 AM CST</span></span><br><span class=\"line\"><span class=\"comment\"># Description: check mysql service</span></span><br><span class=\"line\"><span class=\"comment\">#########################################################################</span></span><br><span class=\"line\"></span><br><span class=\"line\">STATE=`cat /tmp/keepalived-state`</span><br><span class=\"line\">log_file=<span class=\"string\">\"/var/log/test/keepalived/keepalived.log\"</span></span><br><span class=\"line\">service_name=<span class=\"string\">\"mysqld\"</span></span><br><span class=\"line\">service_cmd=<span class=\"string\">\"/etc/init.d/mysql\"</span></span><br><span class=\"line\">get_pid=`pidof <span class=\"variable\">$service_name</span>`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">log</span></span>() &#123;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$(date +\"%Y-%m-%d %H:%M:%S.%4N\")</span> [<span class=\"variable\">$STATE</span>] <span class=\"variable\">$1</span>\"</span> &gt;&gt; <span class=\"variable\">$log_file</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"variable\">$STATE</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"string\">\"MASTER\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$&#123;get_pid&#125;</span>\"</span> == <span class=\"string\">\"\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">log</span> <span class=\"string\">\"<span class=\"variable\">$service_name</span> service isn't exist.\"</span></span><br><span class=\"line\">            <span class=\"built_in\">log</span> <span class=\"string\">\"Try to restart <span class=\"variable\">$service_name</span> service.\"</span></span><br><span class=\"line\">            <span class=\"variable\">$service_cmd</span> start</span><br><span class=\"line\">            <span class=\"keyword\">if</span> [ $? -eq 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"built_in\">log</span> <span class=\"string\">\"restart <span class=\"variable\">$service_name</span> service successfully.\"</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"built_in\">log</span> <span class=\"string\">\"restart <span class=\"variable\">$service_name</span> service failed.\"</span></span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">            <span class=\"keyword\">fi</span></span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    <span class=\"string\">\"BACKUP\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$&#123;get_pid&#125;</span>\"</span> == <span class=\"string\">\"\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">log</span> <span class=\"string\">\"<span class=\"variable\">$service_name</span> service isn't exist.\"</span></span><br><span class=\"line\">            <span class=\"built_in\">log</span> <span class=\"string\">\"Try to restart <span class=\"variable\">$service_name</span> service.\"</span></span><br><span class=\"line\">            <span class=\"variable\">$service_cmd</span> start</span><br><span class=\"line\">            <span class=\"keyword\">if</span> [ $? -eq 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"built_in\">log</span> <span class=\"string\">\"restart <span class=\"variable\">$service_name</span> service successfully.\"</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"built_in\">log</span> <span class=\"string\">\"restart <span class=\"variable\">$service_name</span> service failed.\"</span></span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">            <span class=\"keyword\">fi</span></span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    <span class=\"string\">\"FAULT\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">       *)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">        ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br></pre></td></tr></table></figure>\n<p>然后执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# chmod +x /etc/keepalived/bin/chk_mysql.sh</span><br></pre></td></tr></table></figure>\n<p>随后重启keepalived服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# service keepalived restart</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-3-2-在HA-2节点上配置\"><a href=\"#4-3-2-在HA-2节点上配置\" class=\"headerlink\" title=\"4.3.2 在HA-2节点上配置\"></a>4.3.2 在HA-2节点上配置</h4><p>基本配置个HA-1节点上一样，两个健康监测脚本完全一致，不同的是keepalived.conf脚本中权重值和节点初始属性</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# cat /etc/keepalived/keepalived.conf</span><br><span class=\"line\"></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">    router_id HA-1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script chk_mysql &#123;</span><br><span class=\"line\">    script /etc/keepalived/bin/chk_mysql.sh    #健康监测脚本路径</span><br><span class=\"line\">    interval 2</span><br><span class=\"line\">    fall 3</span><br><span class=\"line\">    rise 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_MYSQL &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface enp0s9       # 监听网卡</span><br><span class=\"line\">    virtual_router_id 100  # 虚拟路由编号，同一实例可以一致，但是其权重一定不能一致</span><br><span class=\"line\">    nopreempt</span><br><span class=\"line\">    priority 90           # 权重，两个节点不能一样</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.10.103      # 虚拟IP地址</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    notify /etc/keepalived/bin/kpad_notify.sh     # keep状态传入脚本，通过该脚本可得知当前keep运行状态</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        chk_mysql            # 健康检查配置</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在拷贝<code>/etc/keepalived/bin/kpad_notify.sh</code>和<code>/etc/keepalived/bin/chk_mysql.sh</code>两个脚本后重启keepalived服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# service keepalived restart</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-3-3-测试\"><a href=\"#4-3-3-测试\" class=\"headerlink\" title=\"4.3.3 测试\"></a>4.3.3 测试</h4><p>在HA-1和HA-2分别执行ip addr show dev enp0s9命令查看HA-1和HA-2对VIP（群集虚拟IP）的控制权。HA-1主的查看结果：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-1:~# ip addr show dev enp0s9</span><br><span class=\"line\">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:0c:29:fd:98:1b brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 192.168.10.101/20 brd 192.168.15.255 scope global enp0s9</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet 192.168.10.103/32 scope global enp0s9</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 240c:f:1:4000:20c:29ff:fefd:981b/64 scope global mngtmpaddr dynamic</span><br><span class=\"line\">       valid_lft 2591546sec preferred_lft 604346sec</span><br><span class=\"line\">    inet6 fe80::20c:29ff:fefd:981b/64 scope link</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>\n<p>可以看到生成了192.168.10.101这个虚拟IP。</p>\n<p>停止HA-1的keepalived服务，HA-2将会成为新的主节点，HA-2主的查看结果：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~# ip addr show dev enp0s9</span><br><span class=\"line\">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:0c:29:fd:98:1b brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 192.168.10.102/20 brd 192.168.15.255 scope global enp0s9</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet 192.168.10.103/32 scope global enp0s9</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 240c:f:1:4000:20c:29ff:fefd:981b/64 scope global mngtmpaddr dynamic</span><br><span class=\"line\">       valid_lft 2591855sec preferred_lft 604655sec</span><br><span class=\"line\">    inet6 fe80::20c:29ff:fefd:981b/64 scope link</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>\n<p>可以看到生成了192.168.10.103这个虚IP。</p>\n<p>MySQL远程登录测试：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@HA-2:~#  mysql -h192.168.10.103 -uroot -p</span><br><span class=\"line\">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class=\"line\">Welcome to the MySQL monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection id is 2119</span><br><span class=\"line\">Server version: 5.7.21-0ubuntu0.16.04.1-log (Ubuntu)</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class=\"line\">affiliates. Other names may be trademarks of their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\">Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> show variables like <span class=\"string\">'server_id'</span>;</span></span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| Variable_name | Value |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| server_id     | 2     |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>说明在客户端访问VIP地址，由HA-2主机提供响应的，当前状态下HA-2充当主服务器。</p>\n<p>【Note】</p>\n<p>经过测试在纯IPv6的环境下上述HA依然可以正常运行。</p>\n<p>【参考链接】</p>\n<p>1)<a href=\"https://baike.baidu.com/item/mySQL/471251?fr=aladdin\" target=\"_blank\" rel=\"noopener\">mysql介绍</a></p>\n<p>2)<a href=\"https://stackoverflow.com/questions/7739645/install-mysql-on-ubuntu-without-a-password-prompt\" target=\"_blank\" rel=\"noopener\">mysql安装跳过密码设置</a></p>\n<p>3)<a href=\"http://www.keepalived.org\" target=\"_blank\" rel=\"noopener\">keepalived官网</a></p>\n<p>4)<a href=\"https://www.cnblogs.com/clsn/p/8052649.html\" target=\"_blank\" rel=\"noopener\">keepaliced介绍</a></p>\n"},{"title":"OPNFV Euphrates install（二）","date":"2017-12-08T06:32:24.000Z","keywords":["Euphrates"],"description":["OPNFV Euphrates on baremetal"],"summary_img":["https://i.imgur.com/yNc6FFv.jpg"],"top":null,"_content":"\n## 1 前言\n\n本文详细介绍使用OPNFV 的 Fuel部署工具部署Euphrates版本。OPNFV社区从E版本开始全面采用XCI跨社区集成[1]方式，能够最快的获取并集成上游社区项目的最新代码同时可以减少等待BUG修复的时间，2017年10月Euphrates版本首发时还是基于Openstak的Ocata版本，而Ocata是在2017年2月份发布，但是到2017年8月底最新的Pike版本也发布了，由于OPNFV的版本发布周期与Openstack版本的发布周期不一致，也就意味着OPNFV的新版本永远是基于Openstack的上一个版本，OPNFV社区的测试项目将会一直滞后于Openstack的版本，在OPNFV社区引入XCI后我们看到在17年的11月份OPNFV已经支持Pike版本的虚拟POD安装。\n\n![OPNFV XCI](https://i.imgur.com/QEuXwvy.png)\n\n在Danube版本时Fuel还是可视化的界面安装对于新接触OPNFV的新手或多或少还能慢慢学习研究。但是E版本的Fuel完全使用脚本命令的方式，无疑是加大了新手的入门难度以及学习难度，在研究Fuel的安装过程中遇到了许多坑也确实也学到了许多东西。\n\n## 2 <span id=\"jump0\">安装环境准备</span>\n\n社区在Fuel的安装指导[2]里介绍了如何使用Fuel安装Euphrates，但是这里不得不吐槽一下写这个wiki的人肯定认为阅读文档的人跟他一样是大神，文档写的太简单了，即使是一个环境配置的PDF（pod describe file）如果没有一定了解也是无从下手。\n\n官方推荐的jumphost系统版本为 Ubuntu Xenial或 CentOS 7，本文采用的ubuntu 16.04 64b server版本，若采用CentOS软件安装的命令及版本名会稍有不同请自行搜索解决。\n\nFuel安装代码仓库：https://git.opnfv.org/fuel\n\n**Note**：部署时一定要选用最新的`stable/euphrates`稳定分支代码，该分支会持续修改部分部署BUG。\n\n### 2.1 POD配置文件-PDF \n\n官方给的参考POD文件是Fuel仓库里的LF(Linux Foundation)的pod1在`fuel/mcp/config/labs/local`目录下，接下来笔者以自己部署的baremetal POD来讲解PDF的内容。PDF采用Yaml格式，包含两部分文件，一部分是IDF用来描述~~部署工具节点也叫jumphost~~（这个地方的理解错误导致我出现了文末的[部署问题2](#jump1)）节点的网络描述，内容相对简单，**需要注意**的是网卡名应与**节点**的网卡名称一致，一般是enoX或enpXs0，如果使用了DPDK则需要正确填写busaddr信息；另一部分是描述整个OPNFV各节点的详细网络、硬件资源等配置信息内容相对多。不熟悉Yaml格式的可以先预习一下Yaml格式：http://www.ruanyifeng.com/blog/2016/07/yaml.html\n\n本次安装的PDF文件下载链接为：[idf-pod1.yaml](https://wiki.opnfv.org/download/attachments/10296292/idf-pod1.yaml?api=v2)，[pod1.yaml](https://wiki.opnfv.org/download/attachments/10296292/pod1.yaml?api=v2)\n\n`fuel/mcp/config/labs/bii/idf-pod1.yaml`的内容如下，网桥的配置与后续安装执行的命令相关，网桥名字可以任取但是需要与安装时的命令参数保持一致。\n\n```yaml\n##############################################################################\n# Copyright (c) 2017 BII-CFIEC, Mirantis Inc., Enea AB and others.\n# All rights reserved. This program and the accompanying materials\n# are made available under the terms of the Apache License, Version 2.0\n# which accompanies this distribution, and is available at\n# http://www.apache.org/licenses/LICENSE-2.0\n##############################################################################\n---\n### BII POD 1 installer descriptor file ###\n\nidf:\n  version: 0.1\n  fuel:\n    jumphost:\n      bridges:\n        admin: 'br-pxe'\n        mgmt: 'br-ctl'\n        private: ''\n        public: ''\n    network:\n      node:\n        # Ordered-list, index should be in sync with node index in PDF\n        - interfaces: &interfaces\n            # Ordered-list, index should be in sync with interface index in PDF\n            - 'eno1'\n            - 'eno2'\n            - 'eno3'\n            - 'eno4'\n          busaddr: &busaddr\n            # Bus-info reported by `ethtool -i ethX`\n            - '0000:01:00.0'\n            - '0000:01:00.1'\n            - '0000:02:00.0'\n            - '0000:02:00.1'\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n```\n\n`fuel/mcp/config/labs/bii/pod1.yaml`的内容如下，*detail*部分的描述属于非必填内容，*net_config*中的内容为各节点的描述信息，非常重要。可以配合拓扑图一起查看，部分配置的可选参数参考官方的[示例文件](https://github.com/opnfv/pharos/blob/master/config/pdf/pod1.yaml)。\n\n- *oob*指的的服务器的电源管理IP地址，Fuel安装过程中使用了Maas服务需要通过该地址去对服务器进行裸机管理，包括重启、开关机管理的，Maas是[ubuntu社区](https://docs.ubuntu.com/maas/2.1/en/)开发的裸机管理工具支持IPMI、虚拟机管理等，有兴趣的可以研究一下。这里也提一点这是NFV架构中针对PIM（Physical Infrastructure Management）物理基础设施的管理与Openstack的VIM(Virtual Infrastructure Management)虚拟设施管理相对。本次安装的服务器使用的是IPMI的2.0版本，这里有一个坑①是注意查看服务器的IPMI LAN 是否启用，对于DELL服务器在`iDRAC config->networking->IPMI config`，如果未开启安装时将会出现mas01节点无法连接其他节点（Ps. 这个坑我爬了三天才发现）；\n\n- *interface*参数指的的该段网络使用的是哪个网卡，与**idf-pod1.yaml**中的`interfaces`网卡顺序以及`busaddr`严格匹配，但是oob的interface不受此参数控制；\n\n- *vlan*标记该网络是否有vlan tag，如果没有则用'native'标记；\n\n- *remote_params*是前面提到的IPMI管理，填入相应的IP、用户名、密码、mac地址，实际安装中该项的mac地址并没有使用到，该项的另一个参数是AMT，是英特尔的远端管理方式；\n\n- 网卡特征中支持的参数是sriov和dpdk，笔者使用的服务器较老因此没有这些特性就选择空着；\n\n  剩下的一些服务器类型相关的信息，依据实际的服务器参数填写即可。需要指明的是节点的角色并不是按照配置文件中的命名来的，是按照节点的顺序来分配的依次是kvm01~03，cmp01~02，同时目前的安装方式对于节点的IP都是在指定的CIDR内随机分配的参看脚本[pod_config.yml.j2](https://github.com/opnfv/pharos/blob/master/config/installers/fuel/pod_config.yml.j2)。\n\n```yaml\n---\n### This is a BII POD1 descriptor file ###\n\ndetails:\n  pod owner: ylong\n  contact: ylong@biigroup.cn, zjtang@biigroup.cn\n  lab: BII Pharos LAB\n  location: BDA, Beijing, China\n  type: development\n  link: https://wiki.opnfv.org/display/pharos/BII\n###################################################\nnet_config:\n  oob:                     # IPMI management network\n    interface: 0\n    ip-range: 192.168.20.201-192.168.20.205\n    vlan: native\n  admin:\n    interface: 0\n    vlan: native\n    network: 10.20.0.0\n    mask: 24\n  mgmt:\n    interface: 2\n    vlan: 101\n    network: 192.168.101.0\n    mask: 24\n  private:\n    interface: 3\n    vlan: 102\n    network: 192.168.102.0\n    mask: 24\n#  storage:\n#    interface: 3\n#    vlan: 103\n#    network: 192.168.103.0\n#    mask: 24\n  public:\n    interface: 1\n    vlan: native\n    network: 192.168.20.0\n    mask: 24\n    gateway: 192.168.20.1\n    dns:\n      - 114.114.114.114\n      - 8.8.8.8\n###################################################\njumphost:\n  name: fuel\n  node:\n    type: baremetal               # can be virtual or baremetal\n    vendor: Dell Inc.\n    model: powerEdge 720\n    arch: x86_64\n    cpus: 2\n    cpu_cflags: hasewell          # add values based on CFLAGS in GCC\n    cores: 4                      # physical cores, not including hyper-threads\n    memory: 16G\n  disks:                          # disk list\n    - name: 'disk1'               # first disk\n      disk_capacity: 1100G        # volume\n      disk_type: hdd              # several disk types possible\n      disk_interface: sas         # several interface types possible\n      disk_rotation: 15000        # define rotation speed of disk\n  os: ubuntu-16.04                #operation system installed\n  remote_params: &remote_params\n    type: ipmi\n    versions:\n      - 2.0\n    user: root\n    pass: *****\n  remote_management:\n    <<: *remote_params\n    address: 192.168.20.200\n    mac_address: \"44:A8:42:1A:68:78\"\n  interfaces:                               # physical interface list\n    - mac_address: \"44:a8:42:15:10:03\"\n      speed: 1gb\n      features: ''\n    - mac_address: \"44:a8:42:15:10:04\"\n      speed: 1gb\n      features: ''\n    - mac_address: \"44:a8:42:15:10:05\"\n      speed: 1gb\n      features: ''\n    - mac_address: \"44:a8:42:15:10:06\"\n      speed: 1gb\n      features: ''\n  fixed_ips:\n    admin: 10.10.0.2\n    mgmt: 192.168.101.2\n    public: 192.168.20.235\n###################################################\nnodes:\n  - name: controller1\n    node: &nodeparas\n      type: baremetal\n      vendor: Dell Inc.\n      model: powerEdge 720\n      arch: x86_64\n      cpus: 2\n      cpu_cflags: hasewell        # add values based on CFLAGS in GCC\n      cores: 4                    # physical cores, not including hyper-threads\n      memory: 32G\n    disks: &disks_A               # disk list\n      - name: 'disk1'             # first disk\n        disk_capacity: 128G       # volume\n        disk_type: ssd            # several disk types possible\n        disk_interface: sas       # several interface types possible\n        disk_rotation: 15000      # define rotation speed of disk\n      - name: 'disk2'             # second disk\n        disk_capacity: 2400G\n        disk_type: hdd\n        disk_interface: sas\n        disk_rotation: 15000\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.203\n      mac_address: \"44:A8:42:1A:49:A5\"\n    interfaces:\n      - mac_address: \"44:a8:42:14:cd:0d\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:cd:0e\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:14:cd:0f\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:14:cd:10\"\n        speed: 1gb\n        feature: ''\n    fixed_ips:\n      admin: 10.20.0.16\n      mgmt: 192.168.101.16\n      public: 192.168.20.16\n########################################\n  - name: controller2\n    node: *nodeparas\n    disks: *disks_A\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.204\n      mac_address: \"44:A8:42:1A:76:2C\"\n    interfaces:\n      - mac_address: \"44:a8:42:15:1b:e6\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:15:1b:e7\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:15:1b:e8\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:15:1b:e9\"\n        speed: 1gb\n        feature: ''\n    fixed_ips:\n      admin: 10.20.0.17\n      mgmt: 192.168.101.17\n      public: 192.168.20.17\n########################################\n  - name: controller3\n    node: *nodeparas\n    disks: *disks_A\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.205\n      mac_address: \"44:A8:42:13:D5:1B\"\n    interfaces:\n      - mac_address: \"44:a8:42:14:fc:1a\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:fc:1b\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:14:fc:1c\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:14:fc:1d\"\n        speed: 1gb\n        feature: ''\n    fixed_ips:\n      admin: 10.20.0.18\n      mgmt: 192.168.101.18\n      public: 192.168.20.18\n########################################\n  - name: compute1\n    node: *nodeparas\n    disks: *disks_A\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.201\n      mac_address: \"44:A8:42:1A:70:BE\"\n    interfaces:                           # physical interface list\n      - mac_address: \"44:a8:42:14:ee:64\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:65\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:66\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:67\"\n        speed: 1gb\n        features: ''\n    fixed_ips:\n      admin: 10.10.0.14\n      mgmt: 192.168.101.14\n      public: 192.168.20.14\n########################################\n  - name: compute2\n    node: *nodeparas\n    disks: *disks_A\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.202\n      mac_address: \"44:A8:42:1A:76:26\"\n    interfaces:\n      - mac_address: \"44:a8:42:14:cb:31\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:cb:32\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:cb:33\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:cb:34\"\n        speed: 1gb\n        features: ''\n    fixed_ips:\n      admin: 10.20.0.15\n      mgmt: 192.168.101.15\n      public: 192.168.20.15\n```\n\n*坑①*：如下图所示：\n\n![IPMI设置](https://i.imgur.com/CCTp99A.jpg)\n\n需要开启IPMI的LAN，另外还有一点关于密钥的，我的某一台服务器的不是`0000000000000000000000000000000000000000`，出现过maas无法连接节点的情况。\n\n本次安装的拓扑图如下\n\n![topo](https://wiki.opnfv.org/download/attachments/10296292/Pharos-topo.jpg?api=v2)\n\n\n\n### 2.2 安装过程\n\n#### 2.2.1 网桥配置\n\n配置jumphost的网桥保证运行其上的虚拟机与其它物理节点的联通，必要的网桥是pxe和ctl，public的网桥可以不用设置，脚本会主动添加nat转换。可以直接在`/etc/network/interfaces`中配置网桥\n\n```shell\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\nsource /etc/network/interfaces.d/*\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet manual\n\n# The primary network interface\nauto eth1\niface eth1 inet static\naddress 192.168.20.5\nnetmask 255.255.255.0\nnetwork 192.168.20.0\nbroadcast 192.168.20.255\ngateway 192.168.20.1\n# dns-* options are implemented by the resolvconf package, if installed\ndns-nameservers 114.114.114.114\niface eth1 inet6 auto\n\nauto eth2\niface eth2 inet manual\n\n#auto eth3\n#iface eth3 inet manual\n\nauto br-pxe\niface br-pxe inet static\naddress 10.20.0.1\nnetmask 255.255.255.0\nbridge_ports eth0\nbridge_fd 0\n\nauto br-ctl\niface br-ctl inet manual\nbridge_ports eth2\nbridge_fd 0\n```\n\n网桥拓扑如下\n\n```\nbridge name\tbridge id\t\t STP enabled\tinterfaces\nbr-ctl\t\t8000.000c2948cc74\tno\t\t    eth2\nbr-pxe\t\t8000.000c2948cc60\tno\t\t    eth0\n```\n\n*PS*：之前采用过在EXSI虚拟机之上安装ubuntu16.04作为jumphost然后进行部署，部署过程中出现过mas01的dhcp应答node节点无法收到的情况导致安装一直不成功，最后不得使用裸机安装ubuntu16.04然后在进行部署（这个坑爬了一个星期，因为一直怀疑是自己的网桥配置错误），这里并不确认是否在虚拟机上一定无法部署成功只是写出来留意一下。\n\n#### 2.2.2 运行部署脚本\n\n将准备好的PDF文件放置在`opnfv/fuel/mcp/config`下的目录中，安装脚本会自动查找相应PDF文件，可以使用`ci/deploy.sh -h`命令来查看个参数的含义，上一篇文章也讲解了各参数的含义。\n\n```shell\nsudo ci/deploy.sh -D -b file:///home/opnfv/fuel/mcp/config/ \\\n\t-l bii -p pod1 -s os-odl-nofeature-ha -B br-pxe,br-ctl\n```\n\n部署策略的配置在`mcp/config/scenario/baremetal`目录中查看，默认分配给安装时的虚拟机cfg01和mas01的资源是4核、6G内存，若jumphost的资源较足可以适当扩大安装虚拟机分配的资源。Fuel的安装过程中会调用`fuel/mcp/scripts`下的相关脚本完成具体的安装任务，其中`lisb.sh`负责相关的网络配置等，`globals.sh`是一个全局变量配置文件，由于之前使用Danube版本的fuel安装时习惯了将openstack各节点的管理IP分配到10.20.0.0/24段因此为了避免与Fuel安装过程中的虚拟机冲突这里修改了默认的mcpcontrol虚拟机网络段。\n\n安装过程中jumphost的cfg01(10.0.0.2)是用来下发安装时的相关配置的以及同步文件，mas01(10.0.0.3)是用来进行裸机管理的。使用命令\n\n```shell\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.3\n```\n\n可以查看安装过程的状态，尤其是mas01的裸机管理，如果相应的配置没有设置好需要在这里排错，在mas01的`/var/lib/maas`目录下（若无该目录说明Maas服务未安装，需要等待一段时间），当Maas服务安装后可以使用`tail -f /var/log/maas/maas.log`查看各节点的安装状态，同时可以登录Maas的web界面查看各节点的状态。登录方式有**两种**：\n\n1) jumphost中做NAT转发\n\n关于nat转发不熟悉的可以查看这篇[博客](http://xstarcd.github.io/wiki/Linux/iptables_forward_internetshare.html)，博客中关于ipatables讲解十分详细。本文中192.168.20.5为jumphost的public IP，既可以访问外网也可以与局域网其他主机访问，10.20.0.1/24为jumphost 部署OPNFV环境的PXE网桥地址，仅限OPNFV环境的各节点访问。\n\n```shell\niptables -t nat -A PREROUTING -d 192.168.20.5 -p tcp --dport 80 -j DNAT --to 10.20.0.3:80\niptables -A FORWARD -d 10.20.0.3 -p tcp --dport 80 -j ACCEPT\niptables -t nat -A POSTROUTING -d 10.20.0.3 -p tcp --dport 80 -j SNAT --to 10.20.0.1\n```\n\n在本机上访问http://192.168.20.5:8000/MAAS\n\n账号/密码：opnfv/opnfv_secret,即可查看。\n\n2) 终端开启隧道\n\n该方式如上一篇虚拟安装中讲解到，添加一个本机的80端口到mas01的80端口映射即可。访问本机的http://localhost/MAAS/\n\n![Maas端口映射](https://i.imgur.com/jBeEhzU.jpg)\n\n\n\nMAAS的dashboard会显示安装过程以及各节点的信息。\n\n![安装过程](https://i.imgur.com/5U7FW5X.jpg)\n\n#### 2.2.3 修改虚拟机登录密码\n\n1）简单的修改密码\n\n部署过程中生成的虚拟机只能使用ssh+key的方式登录，因此需要修改一下密码方便后续的登录，使用下面的命令修改密码\n\n```shell\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.3 \"sudo passwd root<<EOF\nr00tme\nr00tme\nEOF\"\n```\n\n2）修改密码和运行ssh密码登录\n\n登录脚本准备`cat node_init.sh`\n\n```shell\n#########################################################################\n# File Name: ubuntu_init_conf.sh\n# Author: louie.long\n# Mail: ylong@biigroup.cn\n# Created Time: Thu 26 Oct 2017 11:09:05 AM CST\n# Description: 这个脚本用于修改新建ubuntu系统的配置，\n#              包括：root密码（r00tme），允许ssh密码登录\n#########################################################################\n#!/bin/sh -e\n\nsudo su\n\n########################################################################\n## Begin of check file exist and backup file\n#\ncheck_file_and_backup() {\n    if [ ! -f \"$1\" ]; then\n        echo \"$1 is not exist\"\n        return 0\n    else\n        cp $1 $1-backup`date +%y%m%d_%H%M`\n        return 1\n    fi\n}\n#\n## End of check file exist and backup file\n########################################################################\n\n########################################################################\n## Begin of modify ssh config\n#\nmodify_ssh_conf() {\n    check_file_and_backup /etc/ssh/sshd_config\n    ret=$?\n    if [ $ret -eq 1 ]; then\n        sed -i 's/^.*PermitRootLogin.*$/PermitRootLogin yes/g' \\\n            /etc/ssh/sshd_config\n        sed -i 's/^.*PasswordAuthentication.*$/PasswordAuthentication yes/g' \\\n            /etc/ssh/sshd_config\n        service ssh restart\n    fi\n}\n#\n## End of modify ssh config\n########################################################################\n\n########################################################################\n## Begin of change root passwd to 'r00tme'\n#\nchange_root_passwd()\n{\npasswd root<<EOF\nr00tme\nr00tme\nEOF\n}\n#\n## End of change root passwd to 'r00tme'\n########################################################################\n\n########################################################################\n## Begin of main\n#\n#set -x\nmodify_ssh_conf\nchange_root_passwd\n#\n## End of main\n########################################################################\n```\n\n然后运行以下命令后，即可直接使用密码进行ssh登录\n\n```shell\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.2 < node_init.sh\n```\n\n各虚拟机的IP可以在`fuel/mcp/deploy/images/pod_config.yml`中查看或在任意虚拟机的`/etc/hosts`中查看，登陆http://<Proxy VIP>:8090页面也可查看各节点及相关服务的信息，`Proxy vip`与openstack的dashboard访问IP一致。\n\n### 2.3 部署中出现的问题\n\n部署过程中如果发现不太正常的情况可以对比一下OPNFV官方[Jeklins](https://build.opnfv.org/ci/view/fuel/job/fuel-deploy-baremetal-daily-euphrates/)的构建历史日志，便于确认问题所在。\n\n![](https://i.imgur.com/pzsiLmn.jpg)\n\n1)部署超时\n\n如果部署过程中在maas.log中出现部署超时如下所示，可能是软件安装未完成或者其他安装操作耗时超过设置的15分钟\n\n```\nDec 13 09:27:00 mas01 maas.node: [error] kvm01: Marking node failed: Node operation 'Deploying' timed out after 15 minutes.\n```\n\n可以修改`mcp/patches/0010-maas-region-allow-timeout-override.patch`文件第46行适当延长deploy时间，如果延长时间仍然有问题这需要依据maas.log再次排查错误了。\n\n*2018年1月20日更新*：官方已经将此处的部署时间做了适当延长，`git show f25c19f7a3f90`查看。\n\n2)<span id=\"jump1\">节点网卡名配置</span>\n\n*2017年12月21日更新*\n\n部署过程中脚本提示如下信息，经过对比官方的构建历史日志，如下信息输出是正常的，但是等待时间太长，就可能出现问题。\n\n```\ncmp002.baremetal-mcp-ocata-odl-ha.local:\n    Minion did not return. [Not connected]\n.kvm01.baremetal-mcp-ocata-odl-ha.local:\n    Minion did not return. [Not connected]\nkvm03.baremetal-mcp-ocata-odl-ha.local:\n    Minion did not return. [Not connected]\n```\n\n登录到相应节点（~~需要注意的是节点的登录与mas01的登录一样是使用密钥登录的，不能通过密码直接登录，因此需要在节点安装系统时就尝试登录进去修改密码，否则一旦出现上述错误可能没法通过ssh登录只能在终端输入用户密码登录~~，此时还可以通过在cfg01节点上用salt-stack的命令来查看各节点信息，如`salt -C \"ctl* or cmp*\" cmd.run \"ifconfig -a\"`）查看网卡信息，本次出现的问题是节点在自动配置网络后没有PXE/admin的IP，打开`/etc/network/interfaces`发现其配置的网卡名为`ethX`而节点的网卡名为`enoX`，因此需要修改部署PDF中idf-pod1.yaml中的网卡名称，\n\n3）openstack的dashboard无法访问\n\n部署完成后再访问dashboard时出现无法访问的情况，查找了一下发现是代理虚拟机prx不正常，尝试ssh登录prx，无法访问（原因是代理虚拟机内没有传入密钥）。登录到相应的控制节点上使用virsh list查看虚拟机名称，尝试通过`virsh reboot prx02.baremetal-mcp-ocata-odl-ha.local`后发现可以访问dashboard。至于prx的访问可以使用`virsh console prx02.baremetal-mcp-ocata-odl-ha.local`免密访问。\n\n\n\n**安装完成就可以愉快的玩耍了，初次安装会有一些麻烦，一旦安装完成后续的重新部署就会简单许多。**\n\n\n\n[返回文首](#jump0)\n\n参考文献：\n\n1)[OPNFV XCI 介绍](http://docs.opnfv.org/en/latest/submodules/releng-xci/docs/xci-overview.html#xci-overview)\n\n2)[Fuel install guide](http://docs.opnfv.org/en/stable-euphrates/submodules/fuel/docs/release/installation/installation.instruction.html#top-of-the-rack-tor-configuration-requirements)\n","source":"_posts/opnfv_Euphrates_install-02.md","raw":"---\ntitle: OPNFV Euphrates install（二）\ndate: 2017-12-08 14:32:24\ntags:\n  - OPNFV\n  - Euphrates\nkeywords:\n  - Euphrates\ncategories:\n  - OPNFV\ndescription:\n  - OPNFV Euphrates on baremetal\nsummary_img:\n  - https://i.imgur.com/yNc6FFv.jpg\ntop:\n---\n\n## 1 前言\n\n本文详细介绍使用OPNFV 的 Fuel部署工具部署Euphrates版本。OPNFV社区从E版本开始全面采用XCI跨社区集成[1]方式，能够最快的获取并集成上游社区项目的最新代码同时可以减少等待BUG修复的时间，2017年10月Euphrates版本首发时还是基于Openstak的Ocata版本，而Ocata是在2017年2月份发布，但是到2017年8月底最新的Pike版本也发布了，由于OPNFV的版本发布周期与Openstack版本的发布周期不一致，也就意味着OPNFV的新版本永远是基于Openstack的上一个版本，OPNFV社区的测试项目将会一直滞后于Openstack的版本，在OPNFV社区引入XCI后我们看到在17年的11月份OPNFV已经支持Pike版本的虚拟POD安装。\n\n![OPNFV XCI](https://i.imgur.com/QEuXwvy.png)\n\n在Danube版本时Fuel还是可视化的界面安装对于新接触OPNFV的新手或多或少还能慢慢学习研究。但是E版本的Fuel完全使用脚本命令的方式，无疑是加大了新手的入门难度以及学习难度，在研究Fuel的安装过程中遇到了许多坑也确实也学到了许多东西。\n\n## 2 <span id=\"jump0\">安装环境准备</span>\n\n社区在Fuel的安装指导[2]里介绍了如何使用Fuel安装Euphrates，但是这里不得不吐槽一下写这个wiki的人肯定认为阅读文档的人跟他一样是大神，文档写的太简单了，即使是一个环境配置的PDF（pod describe file）如果没有一定了解也是无从下手。\n\n官方推荐的jumphost系统版本为 Ubuntu Xenial或 CentOS 7，本文采用的ubuntu 16.04 64b server版本，若采用CentOS软件安装的命令及版本名会稍有不同请自行搜索解决。\n\nFuel安装代码仓库：https://git.opnfv.org/fuel\n\n**Note**：部署时一定要选用最新的`stable/euphrates`稳定分支代码，该分支会持续修改部分部署BUG。\n\n### 2.1 POD配置文件-PDF \n\n官方给的参考POD文件是Fuel仓库里的LF(Linux Foundation)的pod1在`fuel/mcp/config/labs/local`目录下，接下来笔者以自己部署的baremetal POD来讲解PDF的内容。PDF采用Yaml格式，包含两部分文件，一部分是IDF用来描述~~部署工具节点也叫jumphost~~（这个地方的理解错误导致我出现了文末的[部署问题2](#jump1)）节点的网络描述，内容相对简单，**需要注意**的是网卡名应与**节点**的网卡名称一致，一般是enoX或enpXs0，如果使用了DPDK则需要正确填写busaddr信息；另一部分是描述整个OPNFV各节点的详细网络、硬件资源等配置信息内容相对多。不熟悉Yaml格式的可以先预习一下Yaml格式：http://www.ruanyifeng.com/blog/2016/07/yaml.html\n\n本次安装的PDF文件下载链接为：[idf-pod1.yaml](https://wiki.opnfv.org/download/attachments/10296292/idf-pod1.yaml?api=v2)，[pod1.yaml](https://wiki.opnfv.org/download/attachments/10296292/pod1.yaml?api=v2)\n\n`fuel/mcp/config/labs/bii/idf-pod1.yaml`的内容如下，网桥的配置与后续安装执行的命令相关，网桥名字可以任取但是需要与安装时的命令参数保持一致。\n\n```yaml\n##############################################################################\n# Copyright (c) 2017 BII-CFIEC, Mirantis Inc., Enea AB and others.\n# All rights reserved. This program and the accompanying materials\n# are made available under the terms of the Apache License, Version 2.0\n# which accompanies this distribution, and is available at\n# http://www.apache.org/licenses/LICENSE-2.0\n##############################################################################\n---\n### BII POD 1 installer descriptor file ###\n\nidf:\n  version: 0.1\n  fuel:\n    jumphost:\n      bridges:\n        admin: 'br-pxe'\n        mgmt: 'br-ctl'\n        private: ''\n        public: ''\n    network:\n      node:\n        # Ordered-list, index should be in sync with node index in PDF\n        - interfaces: &interfaces\n            # Ordered-list, index should be in sync with interface index in PDF\n            - 'eno1'\n            - 'eno2'\n            - 'eno3'\n            - 'eno4'\n          busaddr: &busaddr\n            # Bus-info reported by `ethtool -i ethX`\n            - '0000:01:00.0'\n            - '0000:01:00.1'\n            - '0000:02:00.0'\n            - '0000:02:00.1'\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n        - interfaces: *interfaces\n          busaddr: *busaddr\n```\n\n`fuel/mcp/config/labs/bii/pod1.yaml`的内容如下，*detail*部分的描述属于非必填内容，*net_config*中的内容为各节点的描述信息，非常重要。可以配合拓扑图一起查看，部分配置的可选参数参考官方的[示例文件](https://github.com/opnfv/pharos/blob/master/config/pdf/pod1.yaml)。\n\n- *oob*指的的服务器的电源管理IP地址，Fuel安装过程中使用了Maas服务需要通过该地址去对服务器进行裸机管理，包括重启、开关机管理的，Maas是[ubuntu社区](https://docs.ubuntu.com/maas/2.1/en/)开发的裸机管理工具支持IPMI、虚拟机管理等，有兴趣的可以研究一下。这里也提一点这是NFV架构中针对PIM（Physical Infrastructure Management）物理基础设施的管理与Openstack的VIM(Virtual Infrastructure Management)虚拟设施管理相对。本次安装的服务器使用的是IPMI的2.0版本，这里有一个坑①是注意查看服务器的IPMI LAN 是否启用，对于DELL服务器在`iDRAC config->networking->IPMI config`，如果未开启安装时将会出现mas01节点无法连接其他节点（Ps. 这个坑我爬了三天才发现）；\n\n- *interface*参数指的的该段网络使用的是哪个网卡，与**idf-pod1.yaml**中的`interfaces`网卡顺序以及`busaddr`严格匹配，但是oob的interface不受此参数控制；\n\n- *vlan*标记该网络是否有vlan tag，如果没有则用'native'标记；\n\n- *remote_params*是前面提到的IPMI管理，填入相应的IP、用户名、密码、mac地址，实际安装中该项的mac地址并没有使用到，该项的另一个参数是AMT，是英特尔的远端管理方式；\n\n- 网卡特征中支持的参数是sriov和dpdk，笔者使用的服务器较老因此没有这些特性就选择空着；\n\n  剩下的一些服务器类型相关的信息，依据实际的服务器参数填写即可。需要指明的是节点的角色并不是按照配置文件中的命名来的，是按照节点的顺序来分配的依次是kvm01~03，cmp01~02，同时目前的安装方式对于节点的IP都是在指定的CIDR内随机分配的参看脚本[pod_config.yml.j2](https://github.com/opnfv/pharos/blob/master/config/installers/fuel/pod_config.yml.j2)。\n\n```yaml\n---\n### This is a BII POD1 descriptor file ###\n\ndetails:\n  pod owner: ylong\n  contact: ylong@biigroup.cn, zjtang@biigroup.cn\n  lab: BII Pharos LAB\n  location: BDA, Beijing, China\n  type: development\n  link: https://wiki.opnfv.org/display/pharos/BII\n###################################################\nnet_config:\n  oob:                     # IPMI management network\n    interface: 0\n    ip-range: 192.168.20.201-192.168.20.205\n    vlan: native\n  admin:\n    interface: 0\n    vlan: native\n    network: 10.20.0.0\n    mask: 24\n  mgmt:\n    interface: 2\n    vlan: 101\n    network: 192.168.101.0\n    mask: 24\n  private:\n    interface: 3\n    vlan: 102\n    network: 192.168.102.0\n    mask: 24\n#  storage:\n#    interface: 3\n#    vlan: 103\n#    network: 192.168.103.0\n#    mask: 24\n  public:\n    interface: 1\n    vlan: native\n    network: 192.168.20.0\n    mask: 24\n    gateway: 192.168.20.1\n    dns:\n      - 114.114.114.114\n      - 8.8.8.8\n###################################################\njumphost:\n  name: fuel\n  node:\n    type: baremetal               # can be virtual or baremetal\n    vendor: Dell Inc.\n    model: powerEdge 720\n    arch: x86_64\n    cpus: 2\n    cpu_cflags: hasewell          # add values based on CFLAGS in GCC\n    cores: 4                      # physical cores, not including hyper-threads\n    memory: 16G\n  disks:                          # disk list\n    - name: 'disk1'               # first disk\n      disk_capacity: 1100G        # volume\n      disk_type: hdd              # several disk types possible\n      disk_interface: sas         # several interface types possible\n      disk_rotation: 15000        # define rotation speed of disk\n  os: ubuntu-16.04                #operation system installed\n  remote_params: &remote_params\n    type: ipmi\n    versions:\n      - 2.0\n    user: root\n    pass: *****\n  remote_management:\n    <<: *remote_params\n    address: 192.168.20.200\n    mac_address: \"44:A8:42:1A:68:78\"\n  interfaces:                               # physical interface list\n    - mac_address: \"44:a8:42:15:10:03\"\n      speed: 1gb\n      features: ''\n    - mac_address: \"44:a8:42:15:10:04\"\n      speed: 1gb\n      features: ''\n    - mac_address: \"44:a8:42:15:10:05\"\n      speed: 1gb\n      features: ''\n    - mac_address: \"44:a8:42:15:10:06\"\n      speed: 1gb\n      features: ''\n  fixed_ips:\n    admin: 10.10.0.2\n    mgmt: 192.168.101.2\n    public: 192.168.20.235\n###################################################\nnodes:\n  - name: controller1\n    node: &nodeparas\n      type: baremetal\n      vendor: Dell Inc.\n      model: powerEdge 720\n      arch: x86_64\n      cpus: 2\n      cpu_cflags: hasewell        # add values based on CFLAGS in GCC\n      cores: 4                    # physical cores, not including hyper-threads\n      memory: 32G\n    disks: &disks_A               # disk list\n      - name: 'disk1'             # first disk\n        disk_capacity: 128G       # volume\n        disk_type: ssd            # several disk types possible\n        disk_interface: sas       # several interface types possible\n        disk_rotation: 15000      # define rotation speed of disk\n      - name: 'disk2'             # second disk\n        disk_capacity: 2400G\n        disk_type: hdd\n        disk_interface: sas\n        disk_rotation: 15000\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.203\n      mac_address: \"44:A8:42:1A:49:A5\"\n    interfaces:\n      - mac_address: \"44:a8:42:14:cd:0d\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:cd:0e\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:14:cd:0f\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:14:cd:10\"\n        speed: 1gb\n        feature: ''\n    fixed_ips:\n      admin: 10.20.0.16\n      mgmt: 192.168.101.16\n      public: 192.168.20.16\n########################################\n  - name: controller2\n    node: *nodeparas\n    disks: *disks_A\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.204\n      mac_address: \"44:A8:42:1A:76:2C\"\n    interfaces:\n      - mac_address: \"44:a8:42:15:1b:e6\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:15:1b:e7\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:15:1b:e8\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:15:1b:e9\"\n        speed: 1gb\n        feature: ''\n    fixed_ips:\n      admin: 10.20.0.17\n      mgmt: 192.168.101.17\n      public: 192.168.20.17\n########################################\n  - name: controller3\n    node: *nodeparas\n    disks: *disks_A\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.205\n      mac_address: \"44:A8:42:13:D5:1B\"\n    interfaces:\n      - mac_address: \"44:a8:42:14:fc:1a\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:fc:1b\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:14:fc:1c\"\n        speed: 1gb\n        feature: ''\n      - mac_address: \"44:a8:42:14:fc:1d\"\n        speed: 1gb\n        feature: ''\n    fixed_ips:\n      admin: 10.20.0.18\n      mgmt: 192.168.101.18\n      public: 192.168.20.18\n########################################\n  - name: compute1\n    node: *nodeparas\n    disks: *disks_A\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.201\n      mac_address: \"44:A8:42:1A:70:BE\"\n    interfaces:                           # physical interface list\n      - mac_address: \"44:a8:42:14:ee:64\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:65\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:66\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:ee:67\"\n        speed: 1gb\n        features: ''\n    fixed_ips:\n      admin: 10.10.0.14\n      mgmt: 192.168.101.14\n      public: 192.168.20.14\n########################################\n  - name: compute2\n    node: *nodeparas\n    disks: *disks_A\n    remote_management:\n      <<: *remote_params\n      address: 192.168.20.202\n      mac_address: \"44:A8:42:1A:76:26\"\n    interfaces:\n      - mac_address: \"44:a8:42:14:cb:31\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:cb:32\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:cb:33\"\n        speed: 1gb\n        features: ''\n      - mac_address: \"44:a8:42:14:cb:34\"\n        speed: 1gb\n        features: ''\n    fixed_ips:\n      admin: 10.20.0.15\n      mgmt: 192.168.101.15\n      public: 192.168.20.15\n```\n\n*坑①*：如下图所示：\n\n![IPMI设置](https://i.imgur.com/CCTp99A.jpg)\n\n需要开启IPMI的LAN，另外还有一点关于密钥的，我的某一台服务器的不是`0000000000000000000000000000000000000000`，出现过maas无法连接节点的情况。\n\n本次安装的拓扑图如下\n\n![topo](https://wiki.opnfv.org/download/attachments/10296292/Pharos-topo.jpg?api=v2)\n\n\n\n### 2.2 安装过程\n\n#### 2.2.1 网桥配置\n\n配置jumphost的网桥保证运行其上的虚拟机与其它物理节点的联通，必要的网桥是pxe和ctl，public的网桥可以不用设置，脚本会主动添加nat转换。可以直接在`/etc/network/interfaces`中配置网桥\n\n```shell\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\nsource /etc/network/interfaces.d/*\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet manual\n\n# The primary network interface\nauto eth1\niface eth1 inet static\naddress 192.168.20.5\nnetmask 255.255.255.0\nnetwork 192.168.20.0\nbroadcast 192.168.20.255\ngateway 192.168.20.1\n# dns-* options are implemented by the resolvconf package, if installed\ndns-nameservers 114.114.114.114\niface eth1 inet6 auto\n\nauto eth2\niface eth2 inet manual\n\n#auto eth3\n#iface eth3 inet manual\n\nauto br-pxe\niface br-pxe inet static\naddress 10.20.0.1\nnetmask 255.255.255.0\nbridge_ports eth0\nbridge_fd 0\n\nauto br-ctl\niface br-ctl inet manual\nbridge_ports eth2\nbridge_fd 0\n```\n\n网桥拓扑如下\n\n```\nbridge name\tbridge id\t\t STP enabled\tinterfaces\nbr-ctl\t\t8000.000c2948cc74\tno\t\t    eth2\nbr-pxe\t\t8000.000c2948cc60\tno\t\t    eth0\n```\n\n*PS*：之前采用过在EXSI虚拟机之上安装ubuntu16.04作为jumphost然后进行部署，部署过程中出现过mas01的dhcp应答node节点无法收到的情况导致安装一直不成功，最后不得使用裸机安装ubuntu16.04然后在进行部署（这个坑爬了一个星期，因为一直怀疑是自己的网桥配置错误），这里并不确认是否在虚拟机上一定无法部署成功只是写出来留意一下。\n\n#### 2.2.2 运行部署脚本\n\n将准备好的PDF文件放置在`opnfv/fuel/mcp/config`下的目录中，安装脚本会自动查找相应PDF文件，可以使用`ci/deploy.sh -h`命令来查看个参数的含义，上一篇文章也讲解了各参数的含义。\n\n```shell\nsudo ci/deploy.sh -D -b file:///home/opnfv/fuel/mcp/config/ \\\n\t-l bii -p pod1 -s os-odl-nofeature-ha -B br-pxe,br-ctl\n```\n\n部署策略的配置在`mcp/config/scenario/baremetal`目录中查看，默认分配给安装时的虚拟机cfg01和mas01的资源是4核、6G内存，若jumphost的资源较足可以适当扩大安装虚拟机分配的资源。Fuel的安装过程中会调用`fuel/mcp/scripts`下的相关脚本完成具体的安装任务，其中`lisb.sh`负责相关的网络配置等，`globals.sh`是一个全局变量配置文件，由于之前使用Danube版本的fuel安装时习惯了将openstack各节点的管理IP分配到10.20.0.0/24段因此为了避免与Fuel安装过程中的虚拟机冲突这里修改了默认的mcpcontrol虚拟机网络段。\n\n安装过程中jumphost的cfg01(10.0.0.2)是用来下发安装时的相关配置的以及同步文件，mas01(10.0.0.3)是用来进行裸机管理的。使用命令\n\n```shell\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.3\n```\n\n可以查看安装过程的状态，尤其是mas01的裸机管理，如果相应的配置没有设置好需要在这里排错，在mas01的`/var/lib/maas`目录下（若无该目录说明Maas服务未安装，需要等待一段时间），当Maas服务安装后可以使用`tail -f /var/log/maas/maas.log`查看各节点的安装状态，同时可以登录Maas的web界面查看各节点的状态。登录方式有**两种**：\n\n1) jumphost中做NAT转发\n\n关于nat转发不熟悉的可以查看这篇[博客](http://xstarcd.github.io/wiki/Linux/iptables_forward_internetshare.html)，博客中关于ipatables讲解十分详细。本文中192.168.20.5为jumphost的public IP，既可以访问外网也可以与局域网其他主机访问，10.20.0.1/24为jumphost 部署OPNFV环境的PXE网桥地址，仅限OPNFV环境的各节点访问。\n\n```shell\niptables -t nat -A PREROUTING -d 192.168.20.5 -p tcp --dport 80 -j DNAT --to 10.20.0.3:80\niptables -A FORWARD -d 10.20.0.3 -p tcp --dport 80 -j ACCEPT\niptables -t nat -A POSTROUTING -d 10.20.0.3 -p tcp --dport 80 -j SNAT --to 10.20.0.1\n```\n\n在本机上访问http://192.168.20.5:8000/MAAS\n\n账号/密码：opnfv/opnfv_secret,即可查看。\n\n2) 终端开启隧道\n\n该方式如上一篇虚拟安装中讲解到，添加一个本机的80端口到mas01的80端口映射即可。访问本机的http://localhost/MAAS/\n\n![Maas端口映射](https://i.imgur.com/jBeEhzU.jpg)\n\n\n\nMAAS的dashboard会显示安装过程以及各节点的信息。\n\n![安装过程](https://i.imgur.com/5U7FW5X.jpg)\n\n#### 2.2.3 修改虚拟机登录密码\n\n1）简单的修改密码\n\n部署过程中生成的虚拟机只能使用ssh+key的方式登录，因此需要修改一下密码方便后续的登录，使用下面的命令修改密码\n\n```shell\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.3 \"sudo passwd root<<EOF\nr00tme\nr00tme\nEOF\"\n```\n\n2）修改密码和运行ssh密码登录\n\n登录脚本准备`cat node_init.sh`\n\n```shell\n#########################################################################\n# File Name: ubuntu_init_conf.sh\n# Author: louie.long\n# Mail: ylong@biigroup.cn\n# Created Time: Thu 26 Oct 2017 11:09:05 AM CST\n# Description: 这个脚本用于修改新建ubuntu系统的配置，\n#              包括：root密码（r00tme），允许ssh密码登录\n#########################################################################\n#!/bin/sh -e\n\nsudo su\n\n########################################################################\n## Begin of check file exist and backup file\n#\ncheck_file_and_backup() {\n    if [ ! -f \"$1\" ]; then\n        echo \"$1 is not exist\"\n        return 0\n    else\n        cp $1 $1-backup`date +%y%m%d_%H%M`\n        return 1\n    fi\n}\n#\n## End of check file exist and backup file\n########################################################################\n\n########################################################################\n## Begin of modify ssh config\n#\nmodify_ssh_conf() {\n    check_file_and_backup /etc/ssh/sshd_config\n    ret=$?\n    if [ $ret -eq 1 ]; then\n        sed -i 's/^.*PermitRootLogin.*$/PermitRootLogin yes/g' \\\n            /etc/ssh/sshd_config\n        sed -i 's/^.*PasswordAuthentication.*$/PasswordAuthentication yes/g' \\\n            /etc/ssh/sshd_config\n        service ssh restart\n    fi\n}\n#\n## End of modify ssh config\n########################################################################\n\n########################################################################\n## Begin of change root passwd to 'r00tme'\n#\nchange_root_passwd()\n{\npasswd root<<EOF\nr00tme\nr00tme\nEOF\n}\n#\n## End of change root passwd to 'r00tme'\n########################################################################\n\n########################################################################\n## Begin of main\n#\n#set -x\nmodify_ssh_conf\nchange_root_passwd\n#\n## End of main\n########################################################################\n```\n\n然后运行以下命令后，即可直接使用密码进行ssh登录\n\n```shell\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.2 < node_init.sh\n```\n\n各虚拟机的IP可以在`fuel/mcp/deploy/images/pod_config.yml`中查看或在任意虚拟机的`/etc/hosts`中查看，登陆http://<Proxy VIP>:8090页面也可查看各节点及相关服务的信息，`Proxy vip`与openstack的dashboard访问IP一致。\n\n### 2.3 部署中出现的问题\n\n部署过程中如果发现不太正常的情况可以对比一下OPNFV官方[Jeklins](https://build.opnfv.org/ci/view/fuel/job/fuel-deploy-baremetal-daily-euphrates/)的构建历史日志，便于确认问题所在。\n\n![](https://i.imgur.com/pzsiLmn.jpg)\n\n1)部署超时\n\n如果部署过程中在maas.log中出现部署超时如下所示，可能是软件安装未完成或者其他安装操作耗时超过设置的15分钟\n\n```\nDec 13 09:27:00 mas01 maas.node: [error] kvm01: Marking node failed: Node operation 'Deploying' timed out after 15 minutes.\n```\n\n可以修改`mcp/patches/0010-maas-region-allow-timeout-override.patch`文件第46行适当延长deploy时间，如果延长时间仍然有问题这需要依据maas.log再次排查错误了。\n\n*2018年1月20日更新*：官方已经将此处的部署时间做了适当延长，`git show f25c19f7a3f90`查看。\n\n2)<span id=\"jump1\">节点网卡名配置</span>\n\n*2017年12月21日更新*\n\n部署过程中脚本提示如下信息，经过对比官方的构建历史日志，如下信息输出是正常的，但是等待时间太长，就可能出现问题。\n\n```\ncmp002.baremetal-mcp-ocata-odl-ha.local:\n    Minion did not return. [Not connected]\n.kvm01.baremetal-mcp-ocata-odl-ha.local:\n    Minion did not return. [Not connected]\nkvm03.baremetal-mcp-ocata-odl-ha.local:\n    Minion did not return. [Not connected]\n```\n\n登录到相应节点（~~需要注意的是节点的登录与mas01的登录一样是使用密钥登录的，不能通过密码直接登录，因此需要在节点安装系统时就尝试登录进去修改密码，否则一旦出现上述错误可能没法通过ssh登录只能在终端输入用户密码登录~~，此时还可以通过在cfg01节点上用salt-stack的命令来查看各节点信息，如`salt -C \"ctl* or cmp*\" cmd.run \"ifconfig -a\"`）查看网卡信息，本次出现的问题是节点在自动配置网络后没有PXE/admin的IP，打开`/etc/network/interfaces`发现其配置的网卡名为`ethX`而节点的网卡名为`enoX`，因此需要修改部署PDF中idf-pod1.yaml中的网卡名称，\n\n3）openstack的dashboard无法访问\n\n部署完成后再访问dashboard时出现无法访问的情况，查找了一下发现是代理虚拟机prx不正常，尝试ssh登录prx，无法访问（原因是代理虚拟机内没有传入密钥）。登录到相应的控制节点上使用virsh list查看虚拟机名称，尝试通过`virsh reboot prx02.baremetal-mcp-ocata-odl-ha.local`后发现可以访问dashboard。至于prx的访问可以使用`virsh console prx02.baremetal-mcp-ocata-odl-ha.local`免密访问。\n\n\n\n**安装完成就可以愉快的玩耍了，初次安装会有一些麻烦，一旦安装完成后续的重新部署就会简单许多。**\n\n\n\n[返回文首](#jump0)\n\n参考文献：\n\n1)[OPNFV XCI 介绍](http://docs.opnfv.org/en/latest/submodules/releng-xci/docs/xci-overview.html#xci-overview)\n\n2)[Fuel install guide](http://docs.opnfv.org/en/stable-euphrates/submodules/fuel/docs/release/installation/installation.instruction.html#top-of-the-rack-tor-configuration-requirements)\n","slug":"opnfv_Euphrates_install-02","published":1,"updated":"2018-04-13T09:32:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjg0wg2wr000t6ijxx8hp838v","content":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 前言</h2><p>本文详细介绍使用OPNFV 的 Fuel部署工具部署Euphrates版本。OPNFV社区从E版本开始全面采用XCI跨社区集成[1]方式，能够最快的获取并集成上游社区项目的最新代码同时可以减少等待BUG修复的时间，2017年10月Euphrates版本首发时还是基于Openstak的Ocata版本，而Ocata是在2017年2月份发布，但是到2017年8月底最新的Pike版本也发布了，由于OPNFV的版本发布周期与Openstack版本的发布周期不一致，也就意味着OPNFV的新版本永远是基于Openstack的上一个版本，OPNFV社区的测试项目将会一直滞后于Openstack的版本，在OPNFV社区引入XCI后我们看到在17年的11月份OPNFV已经支持Pike版本的虚拟POD安装。</p>\n<p><img src=\"https://i.imgur.com/QEuXwvy.png\" alt=\"OPNFV XCI\"></p>\n<p>在Danube版本时Fuel还是可视化的界面安装对于新接触OPNFV的新手或多或少还能慢慢学习研究。但是E版本的Fuel完全使用脚本命令的方式，无疑是加大了新手的入门难度以及学习难度，在研究Fuel的安装过程中遇到了许多坑也确实也学到了许多东西。</p>\n<h2 id=\"2-安装环境准备\"><a href=\"#2-安装环境准备\" class=\"headerlink\" title=\"2 安装环境准备\"></a>2 <span id=\"jump0\">安装环境准备</span></h2><p>社区在Fuel的安装指导[2]里介绍了如何使用Fuel安装Euphrates，但是这里不得不吐槽一下写这个wiki的人肯定认为阅读文档的人跟他一样是大神，文档写的太简单了，即使是一个环境配置的PDF（pod describe file）如果没有一定了解也是无从下手。</p>\n<p>官方推荐的jumphost系统版本为 Ubuntu Xenial或 CentOS 7，本文采用的ubuntu 16.04 64b server版本，若采用CentOS软件安装的命令及版本名会稍有不同请自行搜索解决。</p>\n<p>Fuel安装代码仓库：<a href=\"https://git.opnfv.org/fuel\" target=\"_blank\" rel=\"noopener\">https://git.opnfv.org/fuel</a></p>\n<p><strong>Note</strong>：部署时一定要选用最新的<code>stable/euphrates</code>稳定分支代码，该分支会持续修改部分部署BUG。</p>\n<h3 id=\"2-1-POD配置文件-PDF\"><a href=\"#2-1-POD配置文件-PDF\" class=\"headerlink\" title=\"2.1 POD配置文件-PDF\"></a>2.1 POD配置文件-PDF</h3><p>官方给的参考POD文件是Fuel仓库里的LF(Linux Foundation)的pod1在<code>fuel/mcp/config/labs/local</code>目录下，接下来笔者以自己部署的baremetal POD来讲解PDF的内容。PDF采用Yaml格式，包含两部分文件，一部分是IDF用来描述<del>部署工具节点也叫jumphost</del>（这个地方的理解错误导致我出现了文末的<a href=\"#jump1\">部署问题2</a>）节点的网络描述，内容相对简单，<strong>需要注意</strong>的是网卡名应与<strong>节点</strong>的网卡名称一致，一般是enoX或enpXs0，如果使用了DPDK则需要正确填写busaddr信息；另一部分是描述整个OPNFV各节点的详细网络、硬件资源等配置信息内容相对多。不熟悉Yaml格式的可以先预习一下Yaml格式：<a href=\"http://www.ruanyifeng.com/blog/2016/07/yaml.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2016/07/yaml.html</a></p>\n<p>本次安装的PDF文件下载链接为：<a href=\"https://wiki.opnfv.org/download/attachments/10296292/idf-pod1.yaml?api=v2\" target=\"_blank\" rel=\"noopener\">idf-pod1.yaml</a>，<a href=\"https://wiki.opnfv.org/download/attachments/10296292/pod1.yaml?api=v2\" target=\"_blank\" rel=\"noopener\">pod1.yaml</a></p>\n<p><code>fuel/mcp/config/labs/bii/idf-pod1.yaml</code>的内容如下，网桥的配置与后续安装执行的命令相关，网桥名字可以任取但是需要与安装时的命令参数保持一致。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##############################################################################</span></span><br><span class=\"line\"><span class=\"comment\"># Copyright (c) 2017 BII-CFIEC, Mirantis Inc., Enea AB and others.</span></span><br><span class=\"line\"><span class=\"comment\"># All rights reserved. This program and the accompanying materials</span></span><br><span class=\"line\"><span class=\"comment\"># are made available under the terms of the Apache License, Version 2.0</span></span><br><span class=\"line\"><span class=\"comment\"># which accompanies this distribution, and is available at</span></span><br><span class=\"line\"><span class=\"comment\"># http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class=\"line\"><span class=\"comment\">##############################################################################</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\">### BII POD 1 installer descriptor file ###</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">idf:</span></span><br><span class=\"line\"><span class=\"attr\">  version:</span> <span class=\"number\">0.1</span></span><br><span class=\"line\"><span class=\"attr\">  fuel:</span></span><br><span class=\"line\"><span class=\"attr\">    jumphost:</span></span><br><span class=\"line\"><span class=\"attr\">      bridges:</span></span><br><span class=\"line\"><span class=\"attr\">        admin:</span> <span class=\"string\">'br-pxe'</span></span><br><span class=\"line\"><span class=\"attr\">        mgmt:</span> <span class=\"string\">'br-ctl'</span></span><br><span class=\"line\"><span class=\"attr\">        private:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">        public:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    network:</span></span><br><span class=\"line\"><span class=\"attr\">      node:</span></span><br><span class=\"line\">        <span class=\"comment\"># Ordered-list, index should be in sync with node index in PDF</span></span><br><span class=\"line\"><span class=\"attr\">        - interfaces:</span> <span class=\"meta\">&amp;interfaces</span></span><br><span class=\"line\">            <span class=\"comment\"># Ordered-list, index should be in sync with interface index in PDF</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'eno1'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'eno2'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'eno3'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'eno4'</span></span><br><span class=\"line\"><span class=\"attr\">          busaddr:</span> <span class=\"meta\">&amp;busaddr</span></span><br><span class=\"line\">            <span class=\"comment\"># Bus-info reported by `ethtool -i ethX`</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'0000:01:00.0'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'0000:01:00.1'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'0000:02:00.0'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'0000:02:00.1'</span></span><br><span class=\"line\"><span class=\"attr\">        - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">          busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">        - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">          busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">        - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">          busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">        - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">          busaddr:</span> <span class=\"meta\">*busaddr</span></span><br></pre></td></tr></table></figure>\n<p><code>fuel/mcp/config/labs/bii/pod1.yaml</code>的内容如下，<em>detail</em>部分的描述属于非必填内容，<em>net_config</em>中的内容为各节点的描述信息，非常重要。可以配合拓扑图一起查看，部分配置的可选参数参考官方的<a href=\"https://github.com/opnfv/pharos/blob/master/config/pdf/pod1.yaml\" target=\"_blank\" rel=\"noopener\">示例文件</a>。</p>\n<ul>\n<li><p><em>oob</em>指的的服务器的电源管理IP地址，Fuel安装过程中使用了Maas服务需要通过该地址去对服务器进行裸机管理，包括重启、开关机管理的，Maas是<a href=\"https://docs.ubuntu.com/maas/2.1/en/\" target=\"_blank\" rel=\"noopener\">ubuntu社区</a>开发的裸机管理工具支持IPMI、虚拟机管理等，有兴趣的可以研究一下。这里也提一点这是NFV架构中针对PIM（Physical Infrastructure Management）物理基础设施的管理与Openstack的VIM(Virtual Infrastructure Management)虚拟设施管理相对。本次安装的服务器使用的是IPMI的2.0版本，这里有一个坑①是注意查看服务器的IPMI LAN 是否启用，对于DELL服务器在<code>iDRAC config-&gt;networking-&gt;IPMI config</code>，如果未开启安装时将会出现mas01节点无法连接其他节点（Ps. 这个坑我爬了三天才发现）；</p>\n</li>\n<li><p><em>interface</em>参数指的的该段网络使用的是哪个网卡，与<strong>idf-pod1.yaml</strong>中的<code>interfaces</code>网卡顺序以及<code>busaddr</code>严格匹配，但是oob的interface不受此参数控制；</p>\n</li>\n<li><p><em>vlan</em>标记该网络是否有vlan tag，如果没有则用’native’标记；</p>\n</li>\n<li><p><em>remote_params</em>是前面提到的IPMI管理，填入相应的IP、用户名、密码、mac地址，实际安装中该项的mac地址并没有使用到，该项的另一个参数是AMT，是英特尔的远端管理方式；</p>\n</li>\n<li><p>网卡特征中支持的参数是sriov和dpdk，笔者使用的服务器较老因此没有这些特性就选择空着；</p>\n<p>剩下的一些服务器类型相关的信息，依据实际的服务器参数填写即可。需要指明的是节点的角色并不是按照配置文件中的命名来的，是按照节点的顺序来分配的依次是kvm01~03，cmp01~02，同时目前的安装方式对于节点的IP都是在指定的CIDR内随机分配的参看脚本<a href=\"https://github.com/opnfv/pharos/blob/master/config/installers/fuel/pod_config.yml.j2\" target=\"_blank\" rel=\"noopener\">pod_config.yml.j2</a>。</p>\n</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\">### This is a BII POD1 descriptor file ###</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">details:</span></span><br><span class=\"line\">  <span class=\"string\">pod</span> <span class=\"attr\">owner:</span> <span class=\"string\">ylong</span></span><br><span class=\"line\"><span class=\"attr\">  contact:</span> <span class=\"string\">ylong@biigroup.cn,</span> <span class=\"string\">zjtang@biigroup.cn</span></span><br><span class=\"line\"><span class=\"attr\">  lab:</span> <span class=\"string\">BII</span> <span class=\"string\">Pharos</span> <span class=\"string\">LAB</span></span><br><span class=\"line\"><span class=\"attr\">  location:</span> <span class=\"string\">BDA,</span> <span class=\"string\">Beijing,</span> <span class=\"string\">China</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">development</span></span><br><span class=\"line\"><span class=\"attr\">  link:</span> <span class=\"attr\">https://wiki.opnfv.org/display/pharos/BII</span></span><br><span class=\"line\"><span class=\"comment\">###################################################</span></span><br><span class=\"line\"><span class=\"attr\">net_config:</span></span><br><span class=\"line\"><span class=\"attr\">  oob:</span>                     <span class=\"comment\"># IPMI management network</span></span><br><span class=\"line\"><span class=\"attr\">    interface:</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">    ip-range:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.201</span><span class=\"bullet\">-192.168</span><span class=\"number\">.20</span><span class=\"number\">.205</span></span><br><span class=\"line\"><span class=\"attr\">    vlan:</span> <span class=\"string\">native</span></span><br><span class=\"line\"><span class=\"attr\">  admin:</span></span><br><span class=\"line\"><span class=\"attr\">    interface:</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">    vlan:</span> <span class=\"string\">native</span></span><br><span class=\"line\"><span class=\"attr\">    network:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"attr\">    mask:</span> <span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"attr\">  mgmt:</span></span><br><span class=\"line\"><span class=\"attr\">    interface:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">    vlan:</span> <span class=\"number\">101</span></span><br><span class=\"line\"><span class=\"attr\">    network:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"attr\">    mask:</span> <span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"attr\">  private:</span></span><br><span class=\"line\"><span class=\"attr\">    interface:</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">    vlan:</span> <span class=\"number\">102</span></span><br><span class=\"line\"><span class=\"attr\">    network:</span> <span class=\"number\">192.168</span><span class=\"number\">.102</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"attr\">    mask:</span> <span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"comment\">#  storage:</span></span><br><span class=\"line\"><span class=\"comment\">#    interface: 3</span></span><br><span class=\"line\"><span class=\"comment\">#    vlan: 103</span></span><br><span class=\"line\"><span class=\"comment\">#    network: 192.168.103.0</span></span><br><span class=\"line\"><span class=\"comment\">#    mask: 24</span></span><br><span class=\"line\"><span class=\"attr\">  public:</span></span><br><span class=\"line\"><span class=\"attr\">    interface:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">    vlan:</span> <span class=\"string\">native</span></span><br><span class=\"line\"><span class=\"attr\">    network:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"attr\">    mask:</span> <span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"attr\">    gateway:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.1</span></span><br><span class=\"line\"><span class=\"attr\">    dns:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">114.114</span><span class=\"number\">.114</span><span class=\"number\">.114</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">8.8</span><span class=\"number\">.8</span><span class=\"number\">.8</span></span><br><span class=\"line\"><span class=\"comment\">###################################################</span></span><br><span class=\"line\"><span class=\"attr\">jumphost:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">fuel</span></span><br><span class=\"line\"><span class=\"attr\">  node:</span></span><br><span class=\"line\"><span class=\"attr\">    type:</span> <span class=\"string\">baremetal</span>               <span class=\"comment\"># can be virtual or baremetal</span></span><br><span class=\"line\"><span class=\"attr\">    vendor:</span> <span class=\"string\">Dell</span> <span class=\"string\">Inc.</span></span><br><span class=\"line\"><span class=\"attr\">    model:</span> <span class=\"string\">powerEdge</span> <span class=\"number\">720</span></span><br><span class=\"line\"><span class=\"attr\">    arch:</span> <span class=\"string\">x86_64</span></span><br><span class=\"line\"><span class=\"attr\">    cpus:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">    cpu_cflags:</span> <span class=\"string\">hasewell</span>          <span class=\"comment\"># add values based on CFLAGS in GCC</span></span><br><span class=\"line\"><span class=\"attr\">    cores:</span> <span class=\"number\">4</span>                      <span class=\"comment\"># physical cores, not including hyper-threads</span></span><br><span class=\"line\"><span class=\"attr\">    memory:</span> <span class=\"number\">16</span><span class=\"string\">G</span></span><br><span class=\"line\"><span class=\"attr\">  disks:</span>                          <span class=\"comment\"># disk list</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">'disk1'</span>               <span class=\"comment\"># first disk</span></span><br><span class=\"line\"><span class=\"attr\">      disk_capacity:</span> <span class=\"number\">1100</span><span class=\"string\">G</span>        <span class=\"comment\"># volume</span></span><br><span class=\"line\"><span class=\"attr\">      disk_type:</span> <span class=\"string\">hdd</span>              <span class=\"comment\"># several disk types possible</span></span><br><span class=\"line\"><span class=\"attr\">      disk_interface:</span> <span class=\"string\">sas</span>         <span class=\"comment\"># several interface types possible</span></span><br><span class=\"line\"><span class=\"attr\">      disk_rotation:</span> <span class=\"number\">15000</span>        <span class=\"comment\"># define rotation speed of disk</span></span><br><span class=\"line\"><span class=\"attr\">  os:</span> <span class=\"string\">ubuntu-16.04</span>                <span class=\"comment\">#operation system installed</span></span><br><span class=\"line\"><span class=\"attr\">  remote_params:</span> <span class=\"meta\">&amp;remote_params</span></span><br><span class=\"line\"><span class=\"attr\">    type:</span> <span class=\"string\">ipmi</span></span><br><span class=\"line\"><span class=\"attr\">    versions:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">2.0</span></span><br><span class=\"line\"><span class=\"attr\">    user:</span> <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">    pass:</span> <span class=\"string\">*****</span></span><br><span class=\"line\"><span class=\"attr\">  remote_management:</span></span><br><span class=\"line\">    <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">    address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.200</span></span><br><span class=\"line\"><span class=\"attr\">    mac_address:</span> <span class=\"string\">\"44:A8:42:1A:68:78\"</span></span><br><span class=\"line\"><span class=\"attr\">  interfaces:</span>                               <span class=\"comment\"># physical interface list</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:15:10:03\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:15:10:04\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:15:10:05\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:15:10:06\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">  fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">    admin:</span> <span class=\"number\">10.10</span><span class=\"number\">.0</span><span class=\"number\">.2</span></span><br><span class=\"line\"><span class=\"attr\">    mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.2</span></span><br><span class=\"line\"><span class=\"attr\">    public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.235</span></span><br><span class=\"line\"><span class=\"comment\">###################################################</span></span><br><span class=\"line\"><span class=\"attr\">nodes:</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">controller1</span></span><br><span class=\"line\"><span class=\"attr\">    node:</span> <span class=\"meta\">&amp;nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">      type:</span> <span class=\"string\">baremetal</span></span><br><span class=\"line\"><span class=\"attr\">      vendor:</span> <span class=\"string\">Dell</span> <span class=\"string\">Inc.</span></span><br><span class=\"line\"><span class=\"attr\">      model:</span> <span class=\"string\">powerEdge</span> <span class=\"number\">720</span></span><br><span class=\"line\"><span class=\"attr\">      arch:</span> <span class=\"string\">x86_64</span></span><br><span class=\"line\"><span class=\"attr\">      cpus:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">      cpu_cflags:</span> <span class=\"string\">hasewell</span>        <span class=\"comment\"># add values based on CFLAGS in GCC</span></span><br><span class=\"line\"><span class=\"attr\">      cores:</span> <span class=\"number\">4</span>                    <span class=\"comment\"># physical cores, not including hyper-threads</span></span><br><span class=\"line\"><span class=\"attr\">      memory:</span> <span class=\"number\">32</span><span class=\"string\">G</span></span><br><span class=\"line\"><span class=\"attr\">    disks:</span> <span class=\"meta\">&amp;disks_A</span>               <span class=\"comment\"># disk list</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">'disk1'</span>             <span class=\"comment\"># first disk</span></span><br><span class=\"line\"><span class=\"attr\">        disk_capacity:</span> <span class=\"number\">128</span><span class=\"string\">G</span>       <span class=\"comment\"># volume</span></span><br><span class=\"line\"><span class=\"attr\">        disk_type:</span> <span class=\"string\">ssd</span>            <span class=\"comment\"># several disk types possible</span></span><br><span class=\"line\"><span class=\"attr\">        disk_interface:</span> <span class=\"string\">sas</span>       <span class=\"comment\"># several interface types possible</span></span><br><span class=\"line\"><span class=\"attr\">        disk_rotation:</span> <span class=\"number\">15000</span>      <span class=\"comment\"># define rotation speed of disk</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">'disk2'</span>             <span class=\"comment\"># second disk</span></span><br><span class=\"line\"><span class=\"attr\">        disk_capacity:</span> <span class=\"number\">2400</span><span class=\"string\">G</span></span><br><span class=\"line\"><span class=\"attr\">        disk_type:</span> <span class=\"string\">hdd</span></span><br><span class=\"line\"><span class=\"attr\">        disk_interface:</span> <span class=\"string\">sas</span></span><br><span class=\"line\"><span class=\"attr\">        disk_rotation:</span> <span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"attr\">    remote_management:</span></span><br><span class=\"line\">      <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">      address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.203</span></span><br><span class=\"line\"><span class=\"attr\">      mac_address:</span> <span class=\"string\">\"44:A8:42:1A:49:A5\"</span></span><br><span class=\"line\"><span class=\"attr\">    interfaces:</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cd:0d\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cd:0e\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cd:0f\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cd:10\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">      admin:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.16</span></span><br><span class=\"line\"><span class=\"attr\">      mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.16</span></span><br><span class=\"line\"><span class=\"attr\">      public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.16</span></span><br><span class=\"line\"><span class=\"comment\">########################################</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">controller2</span></span><br><span class=\"line\"><span class=\"attr\">    node:</span> <span class=\"meta\">*nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">    disks:</span> <span class=\"meta\">*disks_A</span></span><br><span class=\"line\"><span class=\"attr\">    remote_management:</span></span><br><span class=\"line\">      <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">      address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.204</span></span><br><span class=\"line\"><span class=\"attr\">      mac_address:</span> <span class=\"string\">\"44:A8:42:1A:76:2C\"</span></span><br><span class=\"line\"><span class=\"attr\">    interfaces:</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:15:1b:e6\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:15:1b:e7\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:15:1b:e8\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:15:1b:e9\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">      admin:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.17</span></span><br><span class=\"line\"><span class=\"attr\">      mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.17</span></span><br><span class=\"line\"><span class=\"attr\">      public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.17</span></span><br><span class=\"line\"><span class=\"comment\">########################################</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">controller3</span></span><br><span class=\"line\"><span class=\"attr\">    node:</span> <span class=\"meta\">*nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">    disks:</span> <span class=\"meta\">*disks_A</span></span><br><span class=\"line\"><span class=\"attr\">    remote_management:</span></span><br><span class=\"line\">      <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">      address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.205</span></span><br><span class=\"line\"><span class=\"attr\">      mac_address:</span> <span class=\"string\">\"44:A8:42:13:D5:1B\"</span></span><br><span class=\"line\"><span class=\"attr\">    interfaces:</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:fc:1a\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:fc:1b\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:fc:1c\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:fc:1d\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">      admin:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.18</span></span><br><span class=\"line\"><span class=\"attr\">      mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.18</span></span><br><span class=\"line\"><span class=\"attr\">      public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.18</span></span><br><span class=\"line\"><span class=\"comment\">########################################</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">compute1</span></span><br><span class=\"line\"><span class=\"attr\">    node:</span> <span class=\"meta\">*nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">    disks:</span> <span class=\"meta\">*disks_A</span></span><br><span class=\"line\"><span class=\"attr\">    remote_management:</span></span><br><span class=\"line\">      <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">      address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.201</span></span><br><span class=\"line\"><span class=\"attr\">      mac_address:</span> <span class=\"string\">\"44:A8:42:1A:70:BE\"</span></span><br><span class=\"line\"><span class=\"attr\">    interfaces:</span>                           <span class=\"comment\"># physical interface list</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:64\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:65\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:66\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:67\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">      admin:</span> <span class=\"number\">10.10</span><span class=\"number\">.0</span><span class=\"number\">.14</span></span><br><span class=\"line\"><span class=\"attr\">      mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.14</span></span><br><span class=\"line\"><span class=\"attr\">      public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.14</span></span><br><span class=\"line\"><span class=\"comment\">########################################</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">compute2</span></span><br><span class=\"line\"><span class=\"attr\">    node:</span> <span class=\"meta\">*nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">    disks:</span> <span class=\"meta\">*disks_A</span></span><br><span class=\"line\"><span class=\"attr\">    remote_management:</span></span><br><span class=\"line\">      <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">      address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.202</span></span><br><span class=\"line\"><span class=\"attr\">      mac_address:</span> <span class=\"string\">\"44:A8:42:1A:76:26\"</span></span><br><span class=\"line\"><span class=\"attr\">    interfaces:</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cb:31\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cb:32\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cb:33\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cb:34\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">      admin:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.15</span></span><br><span class=\"line\"><span class=\"attr\">      mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.15</span></span><br><span class=\"line\"><span class=\"attr\">      public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.15</span></span><br></pre></td></tr></table></figure>\n<p><em>坑①</em>：如下图所示：</p>\n<p><img src=\"https://i.imgur.com/CCTp99A.jpg\" alt=\"IPMI设置\"></p>\n<p>需要开启IPMI的LAN，另外还有一点关于密钥的，我的某一台服务器的不是<code>0000000000000000000000000000000000000000</code>，出现过maas无法连接节点的情况。</p>\n<p>本次安装的拓扑图如下</p>\n<p><img src=\"https://wiki.opnfv.org/download/attachments/10296292/Pharos-topo.jpg?api=v2\" alt=\"topo\"></p>\n<h3 id=\"2-2-安装过程\"><a href=\"#2-2-安装过程\" class=\"headerlink\" title=\"2.2 安装过程\"></a>2.2 安装过程</h3><h4 id=\"2-2-1-网桥配置\"><a href=\"#2-2-1-网桥配置\" class=\"headerlink\" title=\"2.2.1 网桥配置\"></a>2.2.1 网桥配置</h4><p>配置jumphost的网桥保证运行其上的虚拟机与其它物理节点的联通，必要的网桥是pxe和ctl，public的网桥可以不用设置，脚本会主动添加nat转换。可以直接在<code>/etc/network/interfaces</code>中配置网桥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> This file describes the network interfaces available on your system</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> and how to activate them. For more information, see interfaces(5).</span></span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/network/interfaces.d/*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> The loopback network interface</span></span><br><span class=\"line\">auto lo</span><br><span class=\"line\">iface lo inet loopback</span><br><span class=\"line\"></span><br><span class=\"line\">auto eth0</span><br><span class=\"line\">iface eth0 inet manual</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> The primary network interface</span></span><br><span class=\"line\">auto eth1</span><br><span class=\"line\">iface eth1 inet static</span><br><span class=\"line\">address 192.168.20.5</span><br><span class=\"line\">netmask 255.255.255.0</span><br><span class=\"line\">network 192.168.20.0</span><br><span class=\"line\">broadcast 192.168.20.255</span><br><span class=\"line\">gateway 192.168.20.1</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> dns-* options are implemented by the resolvconf package, <span class=\"keyword\">if</span> installed</span></span><br><span class=\"line\">dns-nameservers 114.114.114.114</span><br><span class=\"line\">iface eth1 inet6 auto</span><br><span class=\"line\"></span><br><span class=\"line\">auto eth2</span><br><span class=\"line\">iface eth2 inet manual</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">auto eth3</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">iface eth3 inet manual</span></span><br><span class=\"line\"></span><br><span class=\"line\">auto br-pxe</span><br><span class=\"line\">iface br-pxe inet static</span><br><span class=\"line\">address 10.20.0.1</span><br><span class=\"line\">netmask 255.255.255.0</span><br><span class=\"line\">bridge_ports eth0</span><br><span class=\"line\">bridge_fd 0</span><br><span class=\"line\"></span><br><span class=\"line\">auto br-ctl</span><br><span class=\"line\">iface br-ctl inet manual</span><br><span class=\"line\">bridge_ports eth2</span><br><span class=\"line\">bridge_fd 0</span><br></pre></td></tr></table></figure>\n<p>网桥拓扑如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bridge name\tbridge id\t\t STP enabled\tinterfaces</span><br><span class=\"line\">br-ctl\t\t8000.000c2948cc74\tno\t\t    eth2</span><br><span class=\"line\">br-pxe\t\t8000.000c2948cc60\tno\t\t    eth0</span><br></pre></td></tr></table></figure>\n<p><em>PS</em>：之前采用过在EXSI虚拟机之上安装ubuntu16.04作为jumphost然后进行部署，部署过程中出现过mas01的dhcp应答node节点无法收到的情况导致安装一直不成功，最后不得使用裸机安装ubuntu16.04然后在进行部署（这个坑爬了一个星期，因为一直怀疑是自己的网桥配置错误），这里并不确认是否在虚拟机上一定无法部署成功只是写出来留意一下。</p>\n<h4 id=\"2-2-2-运行部署脚本\"><a href=\"#2-2-2-运行部署脚本\" class=\"headerlink\" title=\"2.2.2 运行部署脚本\"></a>2.2.2 运行部署脚本</h4><p>将准备好的PDF文件放置在<code>opnfv/fuel/mcp/config</code>下的目录中，安装脚本会自动查找相应PDF文件，可以使用<code>ci/deploy.sh -h</code>命令来查看个参数的含义，上一篇文章也讲解了各参数的含义。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ci/deploy.sh -D -b file:///home/opnfv/fuel/mcp/config/ \\</span><br><span class=\"line\">\t-l bii -p pod1 -s os-odl-nofeature-ha -B br-pxe,br-ctl</span><br></pre></td></tr></table></figure>\n<p>部署策略的配置在<code>mcp/config/scenario/baremetal</code>目录中查看，默认分配给安装时的虚拟机cfg01和mas01的资源是4核、6G内存，若jumphost的资源较足可以适当扩大安装虚拟机分配的资源。Fuel的安装过程中会调用<code>fuel/mcp/scripts</code>下的相关脚本完成具体的安装任务，其中<code>lisb.sh</code>负责相关的网络配置等，<code>globals.sh</code>是一个全局变量配置文件，由于之前使用Danube版本的fuel安装时习惯了将openstack各节点的管理IP分配到10.20.0.0/24段因此为了避免与Fuel安装过程中的虚拟机冲突这里修改了默认的mcpcontrol虚拟机网络段。</p>\n<p>安装过程中jumphost的cfg01(10.0.0.2)是用来下发安装时的相关配置的以及同步文件，mas01(10.0.0.3)是用来进行裸机管理的。使用命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.3</span><br></pre></td></tr></table></figure>\n<p>可以查看安装过程的状态，尤其是mas01的裸机管理，如果相应的配置没有设置好需要在这里排错，在mas01的<code>/var/lib/maas</code>目录下（若无该目录说明Maas服务未安装，需要等待一段时间），当Maas服务安装后可以使用<code>tail -f /var/log/maas/maas.log</code>查看各节点的安装状态，同时可以登录Maas的web界面查看各节点的状态。登录方式有<strong>两种</strong>：</p>\n<p>1) jumphost中做NAT转发</p>\n<p>关于nat转发不熟悉的可以查看这篇<a href=\"http://xstarcd.github.io/wiki/Linux/iptables_forward_internetshare.html\" target=\"_blank\" rel=\"noopener\">博客</a>，博客中关于ipatables讲解十分详细。本文中192.168.20.5为jumphost的public IP，既可以访问外网也可以与局域网其他主机访问，10.20.0.1/24为jumphost 部署OPNFV环境的PXE网桥地址，仅限OPNFV环境的各节点访问。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -t nat -A PREROUTING -d 192.168.20.5 -p tcp --dport 80 -j DNAT --to 10.20.0.3:80</span><br><span class=\"line\">iptables -A FORWARD -d 10.20.0.3 -p tcp --dport 80 -j ACCEPT</span><br><span class=\"line\">iptables -t nat -A POSTROUTING -d 10.20.0.3 -p tcp --dport 80 -j SNAT --to 10.20.0.1</span><br></pre></td></tr></table></figure>\n<p>在本机上访问<a href=\"http://192.168.20.5:8000/MAAS\" target=\"_blank\" rel=\"noopener\">http://192.168.20.5:8000/MAAS</a></p>\n<p>账号/密码：opnfv/opnfv_secret,即可查看。</p>\n<p>2) 终端开启隧道</p>\n<p>该方式如上一篇虚拟安装中讲解到，添加一个本机的80端口到mas01的80端口映射即可。访问本机的<a href=\"http://localhost/MAAS/\" target=\"_blank\" rel=\"noopener\">http://localhost/MAAS/</a></p>\n<p><img src=\"https://i.imgur.com/jBeEhzU.jpg\" alt=\"Maas端口映射\"></p>\n<p>MAAS的dashboard会显示安装过程以及各节点的信息。</p>\n<p><img src=\"https://i.imgur.com/5U7FW5X.jpg\" alt=\"安装过程\"></p>\n<h4 id=\"2-2-3-修改虚拟机登录密码\"><a href=\"#2-2-3-修改虚拟机登录密码\" class=\"headerlink\" title=\"2.2.3 修改虚拟机登录密码\"></a>2.2.3 修改虚拟机登录密码</h4><p>1）简单的修改密码</p>\n<p>部署过程中生成的虚拟机只能使用ssh+key的方式登录，因此需要修改一下密码方便后续的登录，使用下面的命令修改密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.3 \"sudo passwd root&lt;&lt;EOF</span><br><span class=\"line\">r00tme</span><br><span class=\"line\">r00tme</span><br><span class=\"line\">EOF\"</span><br></pre></td></tr></table></figure>\n<p>2）修改密码和运行ssh密码登录</p>\n<p>登录脚本准备<code>cat node_init.sh</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">########################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> File Name: ubuntu_init_conf.sh</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Author: louie.long</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Mail: ylong@biigroup.cn</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Created Time: Thu 26 Oct 2017 11:09:05 AM CST</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Description: 这个脚本用于修改新建ubuntu系统的配置，</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">              包括：root密码（r00tme），允许ssh密码登录</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">########################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/sh -e</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo su</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># Begin of check file exist and backup file</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\">check_file_and_backup() &#123;</span><br><span class=\"line\">    if [ ! -f \"$1\" ]; then</span><br><span class=\"line\">        echo \"$1 is not exist\"</span><br><span class=\"line\">        return 0</span><br><span class=\"line\">    else</span><br><span class=\"line\">        cp $1 $1-backup`date +%y%m%d_%H%M`</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    fi</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># End of check file exist and backup file</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># Begin of modify ssh config</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\">modify_ssh_conf() &#123;</span><br><span class=\"line\">    check_file_and_backup /etc/ssh/sshd_config</span><br><span class=\"line\">    ret=$?</span><br><span class=\"line\">    if [ $ret -eq 1 ]; then</span><br><span class=\"line\">        sed -i 's/^.*PermitRootLogin.*$/PermitRootLogin yes/g' \\</span><br><span class=\"line\">            /etc/ssh/sshd_config</span><br><span class=\"line\">        sed -i 's/^.*PasswordAuthentication.*$/PasswordAuthentication yes/g' \\</span><br><span class=\"line\">            /etc/ssh/sshd_config</span><br><span class=\"line\">        service ssh restart</span><br><span class=\"line\">    fi</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># End of modify ssh config</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># Begin of change root passwd to 'r00tme'</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\">change_root_passwd()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">passwd root&lt;&lt;EOF</span><br><span class=\"line\">r00tme</span><br><span class=\"line\">r00tme</span><br><span class=\"line\">EOF</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># End of change root passwd to 'r00tme'</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># Begin of main</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"built_in\">set</span> -x</span></span><br><span class=\"line\">modify_ssh_conf</span><br><span class=\"line\">change_root_passwd</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># End of main</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br></pre></td></tr></table></figure>\n<p>然后运行以下命令后，即可直接使用密码进行ssh登录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.2 &lt; node_init.sh</span><br></pre></td></tr></table></figure>\n<p>各虚拟机的IP可以在<code>fuel/mcp/deploy/images/pod_config.yml</code>中查看或在任意虚拟机的<code>/etc/hosts</code>中查看，登陆http://<proxy vip=\"\">:8090页面也可查看各节点及相关服务的信息，<code>Proxy vip</code>与openstack的dashboard访问IP一致。</proxy></p>\n<h3 id=\"2-3-部署中出现的问题\"><a href=\"#2-3-部署中出现的问题\" class=\"headerlink\" title=\"2.3 部署中出现的问题\"></a>2.3 部署中出现的问题</h3><p>部署过程中如果发现不太正常的情况可以对比一下OPNFV官方<a href=\"https://build.opnfv.org/ci/view/fuel/job/fuel-deploy-baremetal-daily-euphrates/\" target=\"_blank\" rel=\"noopener\">Jeklins</a>的构建历史日志，便于确认问题所在。</p>\n<p><img src=\"https://i.imgur.com/pzsiLmn.jpg\" alt=\"\"></p>\n<p>1)部署超时</p>\n<p>如果部署过程中在maas.log中出现部署超时如下所示，可能是软件安装未完成或者其他安装操作耗时超过设置的15分钟</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dec 13 09:27:00 mas01 maas.node: [error] kvm01: Marking node failed: Node operation &apos;Deploying&apos; timed out after 15 minutes.</span><br></pre></td></tr></table></figure>\n<p>可以修改<code>mcp/patches/0010-maas-region-allow-timeout-override.patch</code>文件第46行适当延长deploy时间，如果延长时间仍然有问题这需要依据maas.log再次排查错误了。</p>\n<p><em>2018年1月20日更新</em>：官方已经将此处的部署时间做了适当延长，<code>git show f25c19f7a3f90</code>查看。</p>\n<p>2)<span id=\"jump1\">节点网卡名配置</span></p>\n<p><em>2017年12月21日更新</em></p>\n<p>部署过程中脚本提示如下信息，经过对比官方的构建历史日志，如下信息输出是正常的，但是等待时间太长，就可能出现问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmp002.baremetal-mcp-ocata-odl-ha.local:</span><br><span class=\"line\">    Minion did not return. [Not connected]</span><br><span class=\"line\">.kvm01.baremetal-mcp-ocata-odl-ha.local:</span><br><span class=\"line\">    Minion did not return. [Not connected]</span><br><span class=\"line\">kvm03.baremetal-mcp-ocata-odl-ha.local:</span><br><span class=\"line\">    Minion did not return. [Not connected]</span><br></pre></td></tr></table></figure>\n<p>登录到相应节点（<del>需要注意的是节点的登录与mas01的登录一样是使用密钥登录的，不能通过密码直接登录，因此需要在节点安装系统时就尝试登录进去修改密码，否则一旦出现上述错误可能没法通过ssh登录只能在终端输入用户密码登录</del>，此时还可以通过在cfg01节点上用salt-stack的命令来查看各节点信息，如<code>salt -C &quot;ctl* or cmp*&quot; cmd.run &quot;ifconfig -a&quot;</code>）查看网卡信息，本次出现的问题是节点在自动配置网络后没有PXE/admin的IP，打开<code>/etc/network/interfaces</code>发现其配置的网卡名为<code>ethX</code>而节点的网卡名为<code>enoX</code>，因此需要修改部署PDF中idf-pod1.yaml中的网卡名称，</p>\n<p>3）openstack的dashboard无法访问</p>\n<p>部署完成后再访问dashboard时出现无法访问的情况，查找了一下发现是代理虚拟机prx不正常，尝试ssh登录prx，无法访问（原因是代理虚拟机内没有传入密钥）。登录到相应的控制节点上使用virsh list查看虚拟机名称，尝试通过<code>virsh reboot prx02.baremetal-mcp-ocata-odl-ha.local</code>后发现可以访问dashboard。至于prx的访问可以使用<code>virsh console prx02.baremetal-mcp-ocata-odl-ha.local</code>免密访问。</p>\n<p><strong>安装完成就可以愉快的玩耍了，初次安装会有一些麻烦，一旦安装完成后续的重新部署就会简单许多。</strong></p>\n<p><a href=\"#jump0\">返回文首</a></p>\n<p>参考文献：</p>\n<p>1)<a href=\"http://docs.opnfv.org/en/latest/submodules/releng-xci/docs/xci-overview.html#xci-overview\" target=\"_blank\" rel=\"noopener\">OPNFV XCI 介绍</a></p>\n<p>2)<a href=\"http://docs.opnfv.org/en/stable-euphrates/submodules/fuel/docs/release/installation/installation.instruction.html#top-of-the-rack-tor-configuration-requirements\" target=\"_blank\" rel=\"noopener\">Fuel install guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 前言</h2><p>本文详细介绍使用OPNFV 的 Fuel部署工具部署Euphrates版本。OPNFV社区从E版本开始全面采用XCI跨社区集成[1]方式，能够最快的获取并集成上游社区项目的最新代码同时可以减少等待BUG修复的时间，2017年10月Euphrates版本首发时还是基于Openstak的Ocata版本，而Ocata是在2017年2月份发布，但是到2017年8月底最新的Pike版本也发布了，由于OPNFV的版本发布周期与Openstack版本的发布周期不一致，也就意味着OPNFV的新版本永远是基于Openstack的上一个版本，OPNFV社区的测试项目将会一直滞后于Openstack的版本，在OPNFV社区引入XCI后我们看到在17年的11月份OPNFV已经支持Pike版本的虚拟POD安装。</p>\n<p><img src=\"https://i.imgur.com/QEuXwvy.png\" alt=\"OPNFV XCI\"></p>\n<p>在Danube版本时Fuel还是可视化的界面安装对于新接触OPNFV的新手或多或少还能慢慢学习研究。但是E版本的Fuel完全使用脚本命令的方式，无疑是加大了新手的入门难度以及学习难度，在研究Fuel的安装过程中遇到了许多坑也确实也学到了许多东西。</p>\n<h2 id=\"2-安装环境准备\"><a href=\"#2-安装环境准备\" class=\"headerlink\" title=\"2 安装环境准备\"></a>2 <span id=\"jump0\">安装环境准备</span></h2><p>社区在Fuel的安装指导[2]里介绍了如何使用Fuel安装Euphrates，但是这里不得不吐槽一下写这个wiki的人肯定认为阅读文档的人跟他一样是大神，文档写的太简单了，即使是一个环境配置的PDF（pod describe file）如果没有一定了解也是无从下手。</p>\n<p>官方推荐的jumphost系统版本为 Ubuntu Xenial或 CentOS 7，本文采用的ubuntu 16.04 64b server版本，若采用CentOS软件安装的命令及版本名会稍有不同请自行搜索解决。</p>\n<p>Fuel安装代码仓库：<a href=\"https://git.opnfv.org/fuel\" target=\"_blank\" rel=\"noopener\">https://git.opnfv.org/fuel</a></p>\n<p><strong>Note</strong>：部署时一定要选用最新的<code>stable/euphrates</code>稳定分支代码，该分支会持续修改部分部署BUG。</p>\n<h3 id=\"2-1-POD配置文件-PDF\"><a href=\"#2-1-POD配置文件-PDF\" class=\"headerlink\" title=\"2.1 POD配置文件-PDF\"></a>2.1 POD配置文件-PDF</h3><p>官方给的参考POD文件是Fuel仓库里的LF(Linux Foundation)的pod1在<code>fuel/mcp/config/labs/local</code>目录下，接下来笔者以自己部署的baremetal POD来讲解PDF的内容。PDF采用Yaml格式，包含两部分文件，一部分是IDF用来描述<del>部署工具节点也叫jumphost</del>（这个地方的理解错误导致我出现了文末的<a href=\"#jump1\">部署问题2</a>）节点的网络描述，内容相对简单，<strong>需要注意</strong>的是网卡名应与<strong>节点</strong>的网卡名称一致，一般是enoX或enpXs0，如果使用了DPDK则需要正确填写busaddr信息；另一部分是描述整个OPNFV各节点的详细网络、硬件资源等配置信息内容相对多。不熟悉Yaml格式的可以先预习一下Yaml格式：<a href=\"http://www.ruanyifeng.com/blog/2016/07/yaml.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2016/07/yaml.html</a></p>\n<p>本次安装的PDF文件下载链接为：<a href=\"https://wiki.opnfv.org/download/attachments/10296292/idf-pod1.yaml?api=v2\" target=\"_blank\" rel=\"noopener\">idf-pod1.yaml</a>，<a href=\"https://wiki.opnfv.org/download/attachments/10296292/pod1.yaml?api=v2\" target=\"_blank\" rel=\"noopener\">pod1.yaml</a></p>\n<p><code>fuel/mcp/config/labs/bii/idf-pod1.yaml</code>的内容如下，网桥的配置与后续安装执行的命令相关，网桥名字可以任取但是需要与安装时的命令参数保持一致。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##############################################################################</span></span><br><span class=\"line\"><span class=\"comment\"># Copyright (c) 2017 BII-CFIEC, Mirantis Inc., Enea AB and others.</span></span><br><span class=\"line\"><span class=\"comment\"># All rights reserved. This program and the accompanying materials</span></span><br><span class=\"line\"><span class=\"comment\"># are made available under the terms of the Apache License, Version 2.0</span></span><br><span class=\"line\"><span class=\"comment\"># which accompanies this distribution, and is available at</span></span><br><span class=\"line\"><span class=\"comment\"># http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class=\"line\"><span class=\"comment\">##############################################################################</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\">### BII POD 1 installer descriptor file ###</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">idf:</span></span><br><span class=\"line\"><span class=\"attr\">  version:</span> <span class=\"number\">0.1</span></span><br><span class=\"line\"><span class=\"attr\">  fuel:</span></span><br><span class=\"line\"><span class=\"attr\">    jumphost:</span></span><br><span class=\"line\"><span class=\"attr\">      bridges:</span></span><br><span class=\"line\"><span class=\"attr\">        admin:</span> <span class=\"string\">'br-pxe'</span></span><br><span class=\"line\"><span class=\"attr\">        mgmt:</span> <span class=\"string\">'br-ctl'</span></span><br><span class=\"line\"><span class=\"attr\">        private:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">        public:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    network:</span></span><br><span class=\"line\"><span class=\"attr\">      node:</span></span><br><span class=\"line\">        <span class=\"comment\"># Ordered-list, index should be in sync with node index in PDF</span></span><br><span class=\"line\"><span class=\"attr\">        - interfaces:</span> <span class=\"meta\">&amp;interfaces</span></span><br><span class=\"line\">            <span class=\"comment\"># Ordered-list, index should be in sync with interface index in PDF</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'eno1'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'eno2'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'eno3'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'eno4'</span></span><br><span class=\"line\"><span class=\"attr\">          busaddr:</span> <span class=\"meta\">&amp;busaddr</span></span><br><span class=\"line\">            <span class=\"comment\"># Bus-info reported by `ethtool -i ethX`</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'0000:01:00.0'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'0000:01:00.1'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'0000:02:00.0'</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">'0000:02:00.1'</span></span><br><span class=\"line\"><span class=\"attr\">        - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">          busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">        - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">          busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">        - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">          busaddr:</span> <span class=\"meta\">*busaddr</span></span><br><span class=\"line\"><span class=\"attr\">        - interfaces:</span> <span class=\"meta\">*interfaces</span></span><br><span class=\"line\"><span class=\"attr\">          busaddr:</span> <span class=\"meta\">*busaddr</span></span><br></pre></td></tr></table></figure>\n<p><code>fuel/mcp/config/labs/bii/pod1.yaml</code>的内容如下，<em>detail</em>部分的描述属于非必填内容，<em>net_config</em>中的内容为各节点的描述信息，非常重要。可以配合拓扑图一起查看，部分配置的可选参数参考官方的<a href=\"https://github.com/opnfv/pharos/blob/master/config/pdf/pod1.yaml\" target=\"_blank\" rel=\"noopener\">示例文件</a>。</p>\n<ul>\n<li><p><em>oob</em>指的的服务器的电源管理IP地址，Fuel安装过程中使用了Maas服务需要通过该地址去对服务器进行裸机管理，包括重启、开关机管理的，Maas是<a href=\"https://docs.ubuntu.com/maas/2.1/en/\" target=\"_blank\" rel=\"noopener\">ubuntu社区</a>开发的裸机管理工具支持IPMI、虚拟机管理等，有兴趣的可以研究一下。这里也提一点这是NFV架构中针对PIM（Physical Infrastructure Management）物理基础设施的管理与Openstack的VIM(Virtual Infrastructure Management)虚拟设施管理相对。本次安装的服务器使用的是IPMI的2.0版本，这里有一个坑①是注意查看服务器的IPMI LAN 是否启用，对于DELL服务器在<code>iDRAC config-&gt;networking-&gt;IPMI config</code>，如果未开启安装时将会出现mas01节点无法连接其他节点（Ps. 这个坑我爬了三天才发现）；</p>\n</li>\n<li><p><em>interface</em>参数指的的该段网络使用的是哪个网卡，与<strong>idf-pod1.yaml</strong>中的<code>interfaces</code>网卡顺序以及<code>busaddr</code>严格匹配，但是oob的interface不受此参数控制；</p>\n</li>\n<li><p><em>vlan</em>标记该网络是否有vlan tag，如果没有则用’native’标记；</p>\n</li>\n<li><p><em>remote_params</em>是前面提到的IPMI管理，填入相应的IP、用户名、密码、mac地址，实际安装中该项的mac地址并没有使用到，该项的另一个参数是AMT，是英特尔的远端管理方式；</p>\n</li>\n<li><p>网卡特征中支持的参数是sriov和dpdk，笔者使用的服务器较老因此没有这些特性就选择空着；</p>\n<p>剩下的一些服务器类型相关的信息，依据实际的服务器参数填写即可。需要指明的是节点的角色并不是按照配置文件中的命名来的，是按照节点的顺序来分配的依次是kvm01~03，cmp01~02，同时目前的安装方式对于节点的IP都是在指定的CIDR内随机分配的参看脚本<a href=\"https://github.com/opnfv/pharos/blob/master/config/installers/fuel/pod_config.yml.j2\" target=\"_blank\" rel=\"noopener\">pod_config.yml.j2</a>。</p>\n</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\">### This is a BII POD1 descriptor file ###</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">details:</span></span><br><span class=\"line\">  <span class=\"string\">pod</span> <span class=\"attr\">owner:</span> <span class=\"string\">ylong</span></span><br><span class=\"line\"><span class=\"attr\">  contact:</span> <span class=\"string\">ylong@biigroup.cn,</span> <span class=\"string\">zjtang@biigroup.cn</span></span><br><span class=\"line\"><span class=\"attr\">  lab:</span> <span class=\"string\">BII</span> <span class=\"string\">Pharos</span> <span class=\"string\">LAB</span></span><br><span class=\"line\"><span class=\"attr\">  location:</span> <span class=\"string\">BDA,</span> <span class=\"string\">Beijing,</span> <span class=\"string\">China</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">development</span></span><br><span class=\"line\"><span class=\"attr\">  link:</span> <span class=\"attr\">https://wiki.opnfv.org/display/pharos/BII</span></span><br><span class=\"line\"><span class=\"comment\">###################################################</span></span><br><span class=\"line\"><span class=\"attr\">net_config:</span></span><br><span class=\"line\"><span class=\"attr\">  oob:</span>                     <span class=\"comment\"># IPMI management network</span></span><br><span class=\"line\"><span class=\"attr\">    interface:</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">    ip-range:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.201</span><span class=\"bullet\">-192.168</span><span class=\"number\">.20</span><span class=\"number\">.205</span></span><br><span class=\"line\"><span class=\"attr\">    vlan:</span> <span class=\"string\">native</span></span><br><span class=\"line\"><span class=\"attr\">  admin:</span></span><br><span class=\"line\"><span class=\"attr\">    interface:</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">    vlan:</span> <span class=\"string\">native</span></span><br><span class=\"line\"><span class=\"attr\">    network:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"attr\">    mask:</span> <span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"attr\">  mgmt:</span></span><br><span class=\"line\"><span class=\"attr\">    interface:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">    vlan:</span> <span class=\"number\">101</span></span><br><span class=\"line\"><span class=\"attr\">    network:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"attr\">    mask:</span> <span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"attr\">  private:</span></span><br><span class=\"line\"><span class=\"attr\">    interface:</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">    vlan:</span> <span class=\"number\">102</span></span><br><span class=\"line\"><span class=\"attr\">    network:</span> <span class=\"number\">192.168</span><span class=\"number\">.102</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"attr\">    mask:</span> <span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"comment\">#  storage:</span></span><br><span class=\"line\"><span class=\"comment\">#    interface: 3</span></span><br><span class=\"line\"><span class=\"comment\">#    vlan: 103</span></span><br><span class=\"line\"><span class=\"comment\">#    network: 192.168.103.0</span></span><br><span class=\"line\"><span class=\"comment\">#    mask: 24</span></span><br><span class=\"line\"><span class=\"attr\">  public:</span></span><br><span class=\"line\"><span class=\"attr\">    interface:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">    vlan:</span> <span class=\"string\">native</span></span><br><span class=\"line\"><span class=\"attr\">    network:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"attr\">    mask:</span> <span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"attr\">    gateway:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.1</span></span><br><span class=\"line\"><span class=\"attr\">    dns:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">114.114</span><span class=\"number\">.114</span><span class=\"number\">.114</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">8.8</span><span class=\"number\">.8</span><span class=\"number\">.8</span></span><br><span class=\"line\"><span class=\"comment\">###################################################</span></span><br><span class=\"line\"><span class=\"attr\">jumphost:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">fuel</span></span><br><span class=\"line\"><span class=\"attr\">  node:</span></span><br><span class=\"line\"><span class=\"attr\">    type:</span> <span class=\"string\">baremetal</span>               <span class=\"comment\"># can be virtual or baremetal</span></span><br><span class=\"line\"><span class=\"attr\">    vendor:</span> <span class=\"string\">Dell</span> <span class=\"string\">Inc.</span></span><br><span class=\"line\"><span class=\"attr\">    model:</span> <span class=\"string\">powerEdge</span> <span class=\"number\">720</span></span><br><span class=\"line\"><span class=\"attr\">    arch:</span> <span class=\"string\">x86_64</span></span><br><span class=\"line\"><span class=\"attr\">    cpus:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">    cpu_cflags:</span> <span class=\"string\">hasewell</span>          <span class=\"comment\"># add values based on CFLAGS in GCC</span></span><br><span class=\"line\"><span class=\"attr\">    cores:</span> <span class=\"number\">4</span>                      <span class=\"comment\"># physical cores, not including hyper-threads</span></span><br><span class=\"line\"><span class=\"attr\">    memory:</span> <span class=\"number\">16</span><span class=\"string\">G</span></span><br><span class=\"line\"><span class=\"attr\">  disks:</span>                          <span class=\"comment\"># disk list</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">'disk1'</span>               <span class=\"comment\"># first disk</span></span><br><span class=\"line\"><span class=\"attr\">      disk_capacity:</span> <span class=\"number\">1100</span><span class=\"string\">G</span>        <span class=\"comment\"># volume</span></span><br><span class=\"line\"><span class=\"attr\">      disk_type:</span> <span class=\"string\">hdd</span>              <span class=\"comment\"># several disk types possible</span></span><br><span class=\"line\"><span class=\"attr\">      disk_interface:</span> <span class=\"string\">sas</span>         <span class=\"comment\"># several interface types possible</span></span><br><span class=\"line\"><span class=\"attr\">      disk_rotation:</span> <span class=\"number\">15000</span>        <span class=\"comment\"># define rotation speed of disk</span></span><br><span class=\"line\"><span class=\"attr\">  os:</span> <span class=\"string\">ubuntu-16.04</span>                <span class=\"comment\">#operation system installed</span></span><br><span class=\"line\"><span class=\"attr\">  remote_params:</span> <span class=\"meta\">&amp;remote_params</span></span><br><span class=\"line\"><span class=\"attr\">    type:</span> <span class=\"string\">ipmi</span></span><br><span class=\"line\"><span class=\"attr\">    versions:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">2.0</span></span><br><span class=\"line\"><span class=\"attr\">    user:</span> <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">    pass:</span> <span class=\"string\">*****</span></span><br><span class=\"line\"><span class=\"attr\">  remote_management:</span></span><br><span class=\"line\">    <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">    address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.200</span></span><br><span class=\"line\"><span class=\"attr\">    mac_address:</span> <span class=\"string\">\"44:A8:42:1A:68:78\"</span></span><br><span class=\"line\"><span class=\"attr\">  interfaces:</span>                               <span class=\"comment\"># physical interface list</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:15:10:03\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:15:10:04\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:15:10:05\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    - mac_address:</span> <span class=\"string\">\"44:a8:42:15:10:06\"</span></span><br><span class=\"line\"><span class=\"attr\">      speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">      features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">  fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">    admin:</span> <span class=\"number\">10.10</span><span class=\"number\">.0</span><span class=\"number\">.2</span></span><br><span class=\"line\"><span class=\"attr\">    mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.2</span></span><br><span class=\"line\"><span class=\"attr\">    public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.235</span></span><br><span class=\"line\"><span class=\"comment\">###################################################</span></span><br><span class=\"line\"><span class=\"attr\">nodes:</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">controller1</span></span><br><span class=\"line\"><span class=\"attr\">    node:</span> <span class=\"meta\">&amp;nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">      type:</span> <span class=\"string\">baremetal</span></span><br><span class=\"line\"><span class=\"attr\">      vendor:</span> <span class=\"string\">Dell</span> <span class=\"string\">Inc.</span></span><br><span class=\"line\"><span class=\"attr\">      model:</span> <span class=\"string\">powerEdge</span> <span class=\"number\">720</span></span><br><span class=\"line\"><span class=\"attr\">      arch:</span> <span class=\"string\">x86_64</span></span><br><span class=\"line\"><span class=\"attr\">      cpus:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">      cpu_cflags:</span> <span class=\"string\">hasewell</span>        <span class=\"comment\"># add values based on CFLAGS in GCC</span></span><br><span class=\"line\"><span class=\"attr\">      cores:</span> <span class=\"number\">4</span>                    <span class=\"comment\"># physical cores, not including hyper-threads</span></span><br><span class=\"line\"><span class=\"attr\">      memory:</span> <span class=\"number\">32</span><span class=\"string\">G</span></span><br><span class=\"line\"><span class=\"attr\">    disks:</span> <span class=\"meta\">&amp;disks_A</span>               <span class=\"comment\"># disk list</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">'disk1'</span>             <span class=\"comment\"># first disk</span></span><br><span class=\"line\"><span class=\"attr\">        disk_capacity:</span> <span class=\"number\">128</span><span class=\"string\">G</span>       <span class=\"comment\"># volume</span></span><br><span class=\"line\"><span class=\"attr\">        disk_type:</span> <span class=\"string\">ssd</span>            <span class=\"comment\"># several disk types possible</span></span><br><span class=\"line\"><span class=\"attr\">        disk_interface:</span> <span class=\"string\">sas</span>       <span class=\"comment\"># several interface types possible</span></span><br><span class=\"line\"><span class=\"attr\">        disk_rotation:</span> <span class=\"number\">15000</span>      <span class=\"comment\"># define rotation speed of disk</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">'disk2'</span>             <span class=\"comment\"># second disk</span></span><br><span class=\"line\"><span class=\"attr\">        disk_capacity:</span> <span class=\"number\">2400</span><span class=\"string\">G</span></span><br><span class=\"line\"><span class=\"attr\">        disk_type:</span> <span class=\"string\">hdd</span></span><br><span class=\"line\"><span class=\"attr\">        disk_interface:</span> <span class=\"string\">sas</span></span><br><span class=\"line\"><span class=\"attr\">        disk_rotation:</span> <span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"attr\">    remote_management:</span></span><br><span class=\"line\">      <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">      address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.203</span></span><br><span class=\"line\"><span class=\"attr\">      mac_address:</span> <span class=\"string\">\"44:A8:42:1A:49:A5\"</span></span><br><span class=\"line\"><span class=\"attr\">    interfaces:</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cd:0d\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cd:0e\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cd:0f\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cd:10\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">      admin:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.16</span></span><br><span class=\"line\"><span class=\"attr\">      mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.16</span></span><br><span class=\"line\"><span class=\"attr\">      public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.16</span></span><br><span class=\"line\"><span class=\"comment\">########################################</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">controller2</span></span><br><span class=\"line\"><span class=\"attr\">    node:</span> <span class=\"meta\">*nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">    disks:</span> <span class=\"meta\">*disks_A</span></span><br><span class=\"line\"><span class=\"attr\">    remote_management:</span></span><br><span class=\"line\">      <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">      address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.204</span></span><br><span class=\"line\"><span class=\"attr\">      mac_address:</span> <span class=\"string\">\"44:A8:42:1A:76:2C\"</span></span><br><span class=\"line\"><span class=\"attr\">    interfaces:</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:15:1b:e6\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:15:1b:e7\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:15:1b:e8\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:15:1b:e9\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">      admin:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.17</span></span><br><span class=\"line\"><span class=\"attr\">      mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.17</span></span><br><span class=\"line\"><span class=\"attr\">      public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.17</span></span><br><span class=\"line\"><span class=\"comment\">########################################</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">controller3</span></span><br><span class=\"line\"><span class=\"attr\">    node:</span> <span class=\"meta\">*nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">    disks:</span> <span class=\"meta\">*disks_A</span></span><br><span class=\"line\"><span class=\"attr\">    remote_management:</span></span><br><span class=\"line\">      <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">      address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.205</span></span><br><span class=\"line\"><span class=\"attr\">      mac_address:</span> <span class=\"string\">\"44:A8:42:13:D5:1B\"</span></span><br><span class=\"line\"><span class=\"attr\">    interfaces:</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:fc:1a\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:fc:1b\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:fc:1c\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:fc:1d\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        feature:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">      admin:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.18</span></span><br><span class=\"line\"><span class=\"attr\">      mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.18</span></span><br><span class=\"line\"><span class=\"attr\">      public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.18</span></span><br><span class=\"line\"><span class=\"comment\">########################################</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">compute1</span></span><br><span class=\"line\"><span class=\"attr\">    node:</span> <span class=\"meta\">*nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">    disks:</span> <span class=\"meta\">*disks_A</span></span><br><span class=\"line\"><span class=\"attr\">    remote_management:</span></span><br><span class=\"line\">      <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">      address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.201</span></span><br><span class=\"line\"><span class=\"attr\">      mac_address:</span> <span class=\"string\">\"44:A8:42:1A:70:BE\"</span></span><br><span class=\"line\"><span class=\"attr\">    interfaces:</span>                           <span class=\"comment\"># physical interface list</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:64\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:65\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:66\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:ee:67\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">      admin:</span> <span class=\"number\">10.10</span><span class=\"number\">.0</span><span class=\"number\">.14</span></span><br><span class=\"line\"><span class=\"attr\">      mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.14</span></span><br><span class=\"line\"><span class=\"attr\">      public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.14</span></span><br><span class=\"line\"><span class=\"comment\">########################################</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">compute2</span></span><br><span class=\"line\"><span class=\"attr\">    node:</span> <span class=\"meta\">*nodeparas</span></span><br><span class=\"line\"><span class=\"attr\">    disks:</span> <span class=\"meta\">*disks_A</span></span><br><span class=\"line\"><span class=\"attr\">    remote_management:</span></span><br><span class=\"line\">      <span class=\"string\">&lt;&lt;:</span> <span class=\"meta\">*remote_params</span></span><br><span class=\"line\"><span class=\"attr\">      address:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.202</span></span><br><span class=\"line\"><span class=\"attr\">      mac_address:</span> <span class=\"string\">\"44:A8:42:1A:76:26\"</span></span><br><span class=\"line\"><span class=\"attr\">    interfaces:</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cb:31\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cb:32\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cb:33\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">      - mac_address:</span> <span class=\"string\">\"44:a8:42:14:cb:34\"</span></span><br><span class=\"line\"><span class=\"attr\">        speed:</span> <span class=\"number\">1</span><span class=\"string\">gb</span></span><br><span class=\"line\"><span class=\"attr\">        features:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">    fixed_ips:</span></span><br><span class=\"line\"><span class=\"attr\">      admin:</span> <span class=\"number\">10.20</span><span class=\"number\">.0</span><span class=\"number\">.15</span></span><br><span class=\"line\"><span class=\"attr\">      mgmt:</span> <span class=\"number\">192.168</span><span class=\"number\">.101</span><span class=\"number\">.15</span></span><br><span class=\"line\"><span class=\"attr\">      public:</span> <span class=\"number\">192.168</span><span class=\"number\">.20</span><span class=\"number\">.15</span></span><br></pre></td></tr></table></figure>\n<p><em>坑①</em>：如下图所示：</p>\n<p><img src=\"https://i.imgur.com/CCTp99A.jpg\" alt=\"IPMI设置\"></p>\n<p>需要开启IPMI的LAN，另外还有一点关于密钥的，我的某一台服务器的不是<code>0000000000000000000000000000000000000000</code>，出现过maas无法连接节点的情况。</p>\n<p>本次安装的拓扑图如下</p>\n<p><img src=\"https://wiki.opnfv.org/download/attachments/10296292/Pharos-topo.jpg?api=v2\" alt=\"topo\"></p>\n<h3 id=\"2-2-安装过程\"><a href=\"#2-2-安装过程\" class=\"headerlink\" title=\"2.2 安装过程\"></a>2.2 安装过程</h3><h4 id=\"2-2-1-网桥配置\"><a href=\"#2-2-1-网桥配置\" class=\"headerlink\" title=\"2.2.1 网桥配置\"></a>2.2.1 网桥配置</h4><p>配置jumphost的网桥保证运行其上的虚拟机与其它物理节点的联通，必要的网桥是pxe和ctl，public的网桥可以不用设置，脚本会主动添加nat转换。可以直接在<code>/etc/network/interfaces</code>中配置网桥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> This file describes the network interfaces available on your system</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> and how to activate them. For more information, see interfaces(5).</span></span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/network/interfaces.d/*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> The loopback network interface</span></span><br><span class=\"line\">auto lo</span><br><span class=\"line\">iface lo inet loopback</span><br><span class=\"line\"></span><br><span class=\"line\">auto eth0</span><br><span class=\"line\">iface eth0 inet manual</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> The primary network interface</span></span><br><span class=\"line\">auto eth1</span><br><span class=\"line\">iface eth1 inet static</span><br><span class=\"line\">address 192.168.20.5</span><br><span class=\"line\">netmask 255.255.255.0</span><br><span class=\"line\">network 192.168.20.0</span><br><span class=\"line\">broadcast 192.168.20.255</span><br><span class=\"line\">gateway 192.168.20.1</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> dns-* options are implemented by the resolvconf package, <span class=\"keyword\">if</span> installed</span></span><br><span class=\"line\">dns-nameservers 114.114.114.114</span><br><span class=\"line\">iface eth1 inet6 auto</span><br><span class=\"line\"></span><br><span class=\"line\">auto eth2</span><br><span class=\"line\">iface eth2 inet manual</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">auto eth3</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">iface eth3 inet manual</span></span><br><span class=\"line\"></span><br><span class=\"line\">auto br-pxe</span><br><span class=\"line\">iface br-pxe inet static</span><br><span class=\"line\">address 10.20.0.1</span><br><span class=\"line\">netmask 255.255.255.0</span><br><span class=\"line\">bridge_ports eth0</span><br><span class=\"line\">bridge_fd 0</span><br><span class=\"line\"></span><br><span class=\"line\">auto br-ctl</span><br><span class=\"line\">iface br-ctl inet manual</span><br><span class=\"line\">bridge_ports eth2</span><br><span class=\"line\">bridge_fd 0</span><br></pre></td></tr></table></figure>\n<p>网桥拓扑如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bridge name\tbridge id\t\t STP enabled\tinterfaces</span><br><span class=\"line\">br-ctl\t\t8000.000c2948cc74\tno\t\t    eth2</span><br><span class=\"line\">br-pxe\t\t8000.000c2948cc60\tno\t\t    eth0</span><br></pre></td></tr></table></figure>\n<p><em>PS</em>：之前采用过在EXSI虚拟机之上安装ubuntu16.04作为jumphost然后进行部署，部署过程中出现过mas01的dhcp应答node节点无法收到的情况导致安装一直不成功，最后不得使用裸机安装ubuntu16.04然后在进行部署（这个坑爬了一个星期，因为一直怀疑是自己的网桥配置错误），这里并不确认是否在虚拟机上一定无法部署成功只是写出来留意一下。</p>\n<h4 id=\"2-2-2-运行部署脚本\"><a href=\"#2-2-2-运行部署脚本\" class=\"headerlink\" title=\"2.2.2 运行部署脚本\"></a>2.2.2 运行部署脚本</h4><p>将准备好的PDF文件放置在<code>opnfv/fuel/mcp/config</code>下的目录中，安装脚本会自动查找相应PDF文件，可以使用<code>ci/deploy.sh -h</code>命令来查看个参数的含义，上一篇文章也讲解了各参数的含义。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ci/deploy.sh -D -b file:///home/opnfv/fuel/mcp/config/ \\</span><br><span class=\"line\">\t-l bii -p pod1 -s os-odl-nofeature-ha -B br-pxe,br-ctl</span><br></pre></td></tr></table></figure>\n<p>部署策略的配置在<code>mcp/config/scenario/baremetal</code>目录中查看，默认分配给安装时的虚拟机cfg01和mas01的资源是4核、6G内存，若jumphost的资源较足可以适当扩大安装虚拟机分配的资源。Fuel的安装过程中会调用<code>fuel/mcp/scripts</code>下的相关脚本完成具体的安装任务，其中<code>lisb.sh</code>负责相关的网络配置等，<code>globals.sh</code>是一个全局变量配置文件，由于之前使用Danube版本的fuel安装时习惯了将openstack各节点的管理IP分配到10.20.0.0/24段因此为了避免与Fuel安装过程中的虚拟机冲突这里修改了默认的mcpcontrol虚拟机网络段。</p>\n<p>安装过程中jumphost的cfg01(10.0.0.2)是用来下发安装时的相关配置的以及同步文件，mas01(10.0.0.3)是用来进行裸机管理的。使用命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.3</span><br></pre></td></tr></table></figure>\n<p>可以查看安装过程的状态，尤其是mas01的裸机管理，如果相应的配置没有设置好需要在这里排错，在mas01的<code>/var/lib/maas</code>目录下（若无该目录说明Maas服务未安装，需要等待一段时间），当Maas服务安装后可以使用<code>tail -f /var/log/maas/maas.log</code>查看各节点的安装状态，同时可以登录Maas的web界面查看各节点的状态。登录方式有<strong>两种</strong>：</p>\n<p>1) jumphost中做NAT转发</p>\n<p>关于nat转发不熟悉的可以查看这篇<a href=\"http://xstarcd.github.io/wiki/Linux/iptables_forward_internetshare.html\" target=\"_blank\" rel=\"noopener\">博客</a>，博客中关于ipatables讲解十分详细。本文中192.168.20.5为jumphost的public IP，既可以访问外网也可以与局域网其他主机访问，10.20.0.1/24为jumphost 部署OPNFV环境的PXE网桥地址，仅限OPNFV环境的各节点访问。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -t nat -A PREROUTING -d 192.168.20.5 -p tcp --dport 80 -j DNAT --to 10.20.0.3:80</span><br><span class=\"line\">iptables -A FORWARD -d 10.20.0.3 -p tcp --dport 80 -j ACCEPT</span><br><span class=\"line\">iptables -t nat -A POSTROUTING -d 10.20.0.3 -p tcp --dport 80 -j SNAT --to 10.20.0.1</span><br></pre></td></tr></table></figure>\n<p>在本机上访问<a href=\"http://192.168.20.5:8000/MAAS\" target=\"_blank\" rel=\"noopener\">http://192.168.20.5:8000/MAAS</a></p>\n<p>账号/密码：opnfv/opnfv_secret,即可查看。</p>\n<p>2) 终端开启隧道</p>\n<p>该方式如上一篇虚拟安装中讲解到，添加一个本机的80端口到mas01的80端口映射即可。访问本机的<a href=\"http://localhost/MAAS/\" target=\"_blank\" rel=\"noopener\">http://localhost/MAAS/</a></p>\n<p><img src=\"https://i.imgur.com/jBeEhzU.jpg\" alt=\"Maas端口映射\"></p>\n<p>MAAS的dashboard会显示安装过程以及各节点的信息。</p>\n<p><img src=\"https://i.imgur.com/5U7FW5X.jpg\" alt=\"安装过程\"></p>\n<h4 id=\"2-2-3-修改虚拟机登录密码\"><a href=\"#2-2-3-修改虚拟机登录密码\" class=\"headerlink\" title=\"2.2.3 修改虚拟机登录密码\"></a>2.2.3 修改虚拟机登录密码</h4><p>1）简单的修改密码</p>\n<p>部署过程中生成的虚拟机只能使用ssh+key的方式登录，因此需要修改一下密码方便后续的登录，使用下面的命令修改密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.3 \"sudo passwd root&lt;&lt;EOF</span><br><span class=\"line\">r00tme</span><br><span class=\"line\">r00tme</span><br><span class=\"line\">EOF\"</span><br></pre></td></tr></table></figure>\n<p>2）修改密码和运行ssh密码登录</p>\n<p>登录脚本准备<code>cat node_init.sh</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">########################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> File Name: ubuntu_init_conf.sh</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Author: louie.long</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Mail: ylong@biigroup.cn</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Created Time: Thu 26 Oct 2017 11:09:05 AM CST</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Description: 这个脚本用于修改新建ubuntu系统的配置，</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">              包括：root密码（r00tme），允许ssh密码登录</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">########################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/sh -e</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo su</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># Begin of check file exist and backup file</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\">check_file_and_backup() &#123;</span><br><span class=\"line\">    if [ ! -f \"$1\" ]; then</span><br><span class=\"line\">        echo \"$1 is not exist\"</span><br><span class=\"line\">        return 0</span><br><span class=\"line\">    else</span><br><span class=\"line\">        cp $1 $1-backup`date +%y%m%d_%H%M`</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    fi</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># End of check file exist and backup file</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># Begin of modify ssh config</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\">modify_ssh_conf() &#123;</span><br><span class=\"line\">    check_file_and_backup /etc/ssh/sshd_config</span><br><span class=\"line\">    ret=$?</span><br><span class=\"line\">    if [ $ret -eq 1 ]; then</span><br><span class=\"line\">        sed -i 's/^.*PermitRootLogin.*$/PermitRootLogin yes/g' \\</span><br><span class=\"line\">            /etc/ssh/sshd_config</span><br><span class=\"line\">        sed -i 's/^.*PasswordAuthentication.*$/PasswordAuthentication yes/g' \\</span><br><span class=\"line\">            /etc/ssh/sshd_config</span><br><span class=\"line\">        service ssh restart</span><br><span class=\"line\">    fi</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># End of modify ssh config</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># Begin of change root passwd to 'r00tme'</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\">change_root_passwd()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">passwd root&lt;&lt;EOF</span><br><span class=\"line\">r00tme</span><br><span class=\"line\">r00tme</span><br><span class=\"line\">EOF</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># End of change root passwd to 'r00tme'</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># Begin of main</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"built_in\">set</span> -x</span></span><br><span class=\"line\">modify_ssh_conf</span><br><span class=\"line\">change_root_passwd</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># End of main</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#######################################################################</span></span></span><br></pre></td></tr></table></figure>\n<p>然后运行以下命令后，即可直接使用密码进行ssh登录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /var/lib/opnfv/mcp.rsa ubuntu@10.0.0.2 &lt; node_init.sh</span><br></pre></td></tr></table></figure>\n<p>各虚拟机的IP可以在<code>fuel/mcp/deploy/images/pod_config.yml</code>中查看或在任意虚拟机的<code>/etc/hosts</code>中查看，登陆http://<proxy vip=\"\">:8090页面也可查看各节点及相关服务的信息，<code>Proxy vip</code>与openstack的dashboard访问IP一致。</proxy></p>\n<h3 id=\"2-3-部署中出现的问题\"><a href=\"#2-3-部署中出现的问题\" class=\"headerlink\" title=\"2.3 部署中出现的问题\"></a>2.3 部署中出现的问题</h3><p>部署过程中如果发现不太正常的情况可以对比一下OPNFV官方<a href=\"https://build.opnfv.org/ci/view/fuel/job/fuel-deploy-baremetal-daily-euphrates/\" target=\"_blank\" rel=\"noopener\">Jeklins</a>的构建历史日志，便于确认问题所在。</p>\n<p><img src=\"https://i.imgur.com/pzsiLmn.jpg\" alt=\"\"></p>\n<p>1)部署超时</p>\n<p>如果部署过程中在maas.log中出现部署超时如下所示，可能是软件安装未完成或者其他安装操作耗时超过设置的15分钟</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dec 13 09:27:00 mas01 maas.node: [error] kvm01: Marking node failed: Node operation &apos;Deploying&apos; timed out after 15 minutes.</span><br></pre></td></tr></table></figure>\n<p>可以修改<code>mcp/patches/0010-maas-region-allow-timeout-override.patch</code>文件第46行适当延长deploy时间，如果延长时间仍然有问题这需要依据maas.log再次排查错误了。</p>\n<p><em>2018年1月20日更新</em>：官方已经将此处的部署时间做了适当延长，<code>git show f25c19f7a3f90</code>查看。</p>\n<p>2)<span id=\"jump1\">节点网卡名配置</span></p>\n<p><em>2017年12月21日更新</em></p>\n<p>部署过程中脚本提示如下信息，经过对比官方的构建历史日志，如下信息输出是正常的，但是等待时间太长，就可能出现问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmp002.baremetal-mcp-ocata-odl-ha.local:</span><br><span class=\"line\">    Minion did not return. [Not connected]</span><br><span class=\"line\">.kvm01.baremetal-mcp-ocata-odl-ha.local:</span><br><span class=\"line\">    Minion did not return. [Not connected]</span><br><span class=\"line\">kvm03.baremetal-mcp-ocata-odl-ha.local:</span><br><span class=\"line\">    Minion did not return. [Not connected]</span><br></pre></td></tr></table></figure>\n<p>登录到相应节点（<del>需要注意的是节点的登录与mas01的登录一样是使用密钥登录的，不能通过密码直接登录，因此需要在节点安装系统时就尝试登录进去修改密码，否则一旦出现上述错误可能没法通过ssh登录只能在终端输入用户密码登录</del>，此时还可以通过在cfg01节点上用salt-stack的命令来查看各节点信息，如<code>salt -C &quot;ctl* or cmp*&quot; cmd.run &quot;ifconfig -a&quot;</code>）查看网卡信息，本次出现的问题是节点在自动配置网络后没有PXE/admin的IP，打开<code>/etc/network/interfaces</code>发现其配置的网卡名为<code>ethX</code>而节点的网卡名为<code>enoX</code>，因此需要修改部署PDF中idf-pod1.yaml中的网卡名称，</p>\n<p>3）openstack的dashboard无法访问</p>\n<p>部署完成后再访问dashboard时出现无法访问的情况，查找了一下发现是代理虚拟机prx不正常，尝试ssh登录prx，无法访问（原因是代理虚拟机内没有传入密钥）。登录到相应的控制节点上使用virsh list查看虚拟机名称，尝试通过<code>virsh reboot prx02.baremetal-mcp-ocata-odl-ha.local</code>后发现可以访问dashboard。至于prx的访问可以使用<code>virsh console prx02.baremetal-mcp-ocata-odl-ha.local</code>免密访问。</p>\n<p><strong>安装完成就可以愉快的玩耍了，初次安装会有一些麻烦，一旦安装完成后续的重新部署就会简单许多。</strong></p>\n<p><a href=\"#jump0\">返回文首</a></p>\n<p>参考文献：</p>\n<p>1)<a href=\"http://docs.opnfv.org/en/latest/submodules/releng-xci/docs/xci-overview.html#xci-overview\" target=\"_blank\" rel=\"noopener\">OPNFV XCI 介绍</a></p>\n<p>2)<a href=\"http://docs.opnfv.org/en/stable-euphrates/submodules/fuel/docs/release/installation/installation.instruction.html#top-of-the-rack-tor-configuration-requirements\" target=\"_blank\" rel=\"noopener\">Fuel install guide</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjg0wg2vv00056ijxylibtj0s","category_id":"cjg0wg2vz00086ijxnpkbxkhb","_id":"cjg0wg2wj000i6ijxoqgyzw4i"},{"post_id":"cjg0wg2wg000f6ijxinnd3y5l","category_id":"cjg0wg2vz00086ijxnpkbxkhb","_id":"cjg0wg2wn000n6ijxnuzh4y8p"},{"post_id":"cjg0wg2vx00076ijxvvwl4lon","category_id":"cjg0wg2vz00086ijxnpkbxkhb","_id":"cjg0wg2wq000s6ijxj0rlqrof"},{"post_id":"cjg0wg2wk000k6ijx50n2o908","category_id":"cjg0wg2wj000h6ijxnfcf9n67","_id":"cjg0wg2ws000u6ijxkwekqqdl"},{"post_id":"cjg0wg2w4000a6ijxgoqqch5v","category_id":"cjg0wg2wj000h6ijxnfcf9n67","_id":"cjg0wg2wt000x6ijx3csaejn3"},{"post_id":"cjg0wg2wm000m6ijxzn8vw5ts","category_id":"cjg0wg2wj000h6ijxnfcf9n67","_id":"cjg0wg2wt000z6ijxziltyk88"},{"post_id":"cjg0wg2wp000r6ijxbl42ocmi","category_id":"cjg0wg2vz00086ijxnpkbxkhb","_id":"cjg0wg2wu00136ijxv3boztx0"},{"post_id":"cjg0wg2w8000b6ijxrddiq5fp","category_id":"cjg0wg2wj000h6ijxnfcf9n67","_id":"cjg0wg2wu00146ijxfqjl7pv7"},{"post_id":"cjg0wg2wr000t6ijxx8hp838v","category_id":"cjg0wg2wj000h6ijxnfcf9n67","_id":"cjg0wg2wu00156ijxkwathnjd"},{"post_id":"cjg0wg2wa000c6ijxzmb5ngck","category_id":"cjg0wg2ws000v6ijx7xgzdpsc","_id":"cjg0wg2wv00176ijx3v9c6rkf"},{"post_id":"cjg0wg2wi000g6ijxsqplxlam","category_id":"cjg0wg2wt00116ijxzganb7le","_id":"cjg0wg2wv00186ijx7qfn7rlm"}],"PostTag":[{"post_id":"cjg0wg2vv00056ijxylibtj0s","tag_id":"cjg0wg2w300096ijx4bclt2z0","_id":"cjg0wg2wm000l6ijxijz3nyam"},{"post_id":"cjg0wg2vv00056ijxylibtj0s","tag_id":"cjg0wg2wb000e6ijx9d13w46k","_id":"cjg0wg2wn000o6ijxwzt5rlir"},{"post_id":"cjg0wg2vx00076ijxvvwl4lon","tag_id":"cjg0wg2wj000j6ijxkjfycik7","_id":"cjg0wg2wt000y6ijxymxey0nf"},{"post_id":"cjg0wg2vx00076ijxvvwl4lon","tag_id":"cjg0wg2wb000e6ijx9d13w46k","_id":"cjg0wg2wt00106ijxyixydedh"},{"post_id":"cjg0wg2w4000a6ijxgoqqch5v","tag_id":"cjg0wg2ws000w6ijxpz0zyue0","_id":"cjg0wg2ww001b6ijx8mved6qb"},{"post_id":"cjg0wg2w4000a6ijxgoqqch5v","tag_id":"cjg0wg2wu00126ijxpzswwfsk","_id":"cjg0wg2ww001c6ijxdjrm5pgq"},{"post_id":"cjg0wg2w4000a6ijxgoqqch5v","tag_id":"cjg0wg2wu00166ijx8go7hn5a","_id":"cjg0wg2wx001e6ijxikhyxfe8"},{"post_id":"cjg0wg2w4000a6ijxgoqqch5v","tag_id":"cjg0wg2wv00196ijxokfevk24","_id":"cjg0wg2wy001f6ijxq2gytddb"},{"post_id":"cjg0wg2w8000b6ijxrddiq5fp","tag_id":"cjg0wg2ww001a6ijx478gpo93","_id":"cjg0wg2x0001i6ijxctl5sms5"},{"post_id":"cjg0wg2w8000b6ijxrddiq5fp","tag_id":"cjg0wg2wu00126ijxpzswwfsk","_id":"cjg0wg2x0001j6ijxzarbhisu"},{"post_id":"cjg0wg2w8000b6ijxrddiq5fp","tag_id":"cjg0wg2wy001g6ijx22ad5tyb","_id":"cjg0wg2x1001l6ijx6cyd0pux"},{"post_id":"cjg0wg2wa000c6ijxzmb5ngck","tag_id":"cjg0wg2x0001h6ijxrkihg9v4","_id":"cjg0wg2x1001n6ijxifltuzh7"},{"post_id":"cjg0wg2wa000c6ijxzmb5ngck","tag_id":"cjg0wg2x0001k6ijxuu5h7r4q","_id":"cjg0wg2x1001o6ijxmplhbdvu"},{"post_id":"cjg0wg2wg000f6ijxinnd3y5l","tag_id":"cjg0wg2x1001m6ijxr99ikza1","_id":"cjg0wg2x4001q6ijx7rxviszt"},{"post_id":"cjg0wg2wg000f6ijxinnd3y5l","tag_id":"cjg0wg2wb000e6ijx9d13w46k","_id":"cjg0wg2x5001r6ijxykthhqfe"},{"post_id":"cjg0wg2wi000g6ijxsqplxlam","tag_id":"cjg0wg2wy001g6ijx22ad5tyb","_id":"cjg0wg2x7001u6ijxh2rbee56"},{"post_id":"cjg0wg2wi000g6ijxsqplxlam","tag_id":"cjg0wg2wu00126ijxpzswwfsk","_id":"cjg0wg2x7001v6ijxpj98pqlp"},{"post_id":"cjg0wg2wk000k6ijx50n2o908","tag_id":"cjg0wg2wu00126ijxpzswwfsk","_id":"cjg0wg2xb001y6ijx3qbexkx6"},{"post_id":"cjg0wg2wk000k6ijx50n2o908","tag_id":"cjg0wg2x8001w6ijx8wqq6vug","_id":"cjg0wg2xb001z6ijxtm4t9v3w"},{"post_id":"cjg0wg2wm000m6ijxzn8vw5ts","tag_id":"cjg0wg2wu00126ijxpzswwfsk","_id":"cjg0wg2xd00236ijxw9r3ep07"},{"post_id":"cjg0wg2wm000m6ijxzn8vw5ts","tag_id":"cjg0wg2x8001w6ijx8wqq6vug","_id":"cjg0wg2xd00246ijxuelwruli"},{"post_id":"cjg0wg2wm000m6ijxzn8vw5ts","tag_id":"cjg0wg2xc00216ijxd8vyfj5r","_id":"cjg0wg2xd00266ijxkrr8ahhd"},{"post_id":"cjg0wg2wp000r6ijxbl42ocmi","tag_id":"cjg0wg2xd00226ijxy6852988","_id":"cjg0wg2xf00286ijxmrysnor0"},{"post_id":"cjg0wg2wp000r6ijxbl42ocmi","tag_id":"cjg0wg2xd00256ijxxbk2gpn6","_id":"cjg0wg2xf00296ijxnwp1jhx7"},{"post_id":"cjg0wg2wp000r6ijxbl42ocmi","tag_id":"cjg0wg2wb000e6ijx9d13w46k","_id":"cjg0wg2xg002b6ijxdli02yrn"},{"post_id":"cjg0wg2wr000t6ijxx8hp838v","tag_id":"cjg0wg2wu00126ijxpzswwfsk","_id":"cjg0wg2xg002c6ijx42rwfhl0"},{"post_id":"cjg0wg2wr000t6ijxx8hp838v","tag_id":"cjg0wg2x8001w6ijx8wqq6vug","_id":"cjg0wg2xh002d6ijxb0uedvie"}],"Tag":[{"name":"IPAM","_id":"cjg0wg2w300096ijx4bclt2z0"},{"name":"ubuntu","_id":"cjg0wg2wb000e6ijx9d13w46k"},{"name":"MAAS","_id":"cjg0wg2wj000j6ijxkjfycik7"},{"name":"Dovetail","_id":"cjg0wg2ws000w6ijxpz0zyue0"},{"name":"OPNFV","_id":"cjg0wg2wu00126ijxpzswwfsk"},{"name":"NFV","_id":"cjg0wg2wu00166ijx8go7hn5a"},{"name":"CVP","_id":"cjg0wg2wv00196ijxokfevk24"},{"name":"Yardstick","_id":"cjg0wg2ww001a6ijx478gpo93"},{"name":"Openstack","_id":"cjg0wg2wy001g6ijx22ad5tyb"},{"name":"hexo","_id":"cjg0wg2x0001h6ijxrkihg9v4"},{"name":"blog","_id":"cjg0wg2x0001k6ijxuu5h7r4q"},{"name":"KEA","_id":"cjg0wg2x1001m6ijxr99ikza1"},{"name":"Euphrates","_id":"cjg0wg2x8001w6ijx8wqq6vug"},{"name":"dpdk","_id":"cjg0wg2xc00216ijxd8vyfj5r"},{"name":"mysql","_id":"cjg0wg2xd00226ijxy6852988"},{"name":"keepalived","_id":"cjg0wg2xd00256ijxxbk2gpn6"}]}}